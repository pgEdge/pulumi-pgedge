// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pgedge

import (
	"context"
	"reflect"

	"errors"
	"github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudAccount struct {
	pulumi.CustomResourceState

	CreatedAt   pulumi.StringOutput    `pulumi:"createdAt"`
	Credentials pulumi.StringMapOutput `pulumi:"credentials"`
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Name        pulumi.StringOutput    `pulumi:"name"`
	Type        pulumi.StringOutput    `pulumi:"type"`
	UpdatedAt   pulumi.StringOutput    `pulumi:"updatedAt"`
}

// NewCloudAccount registers a new resource with the given unique name, arguments, and options.
func NewCloudAccount(ctx *pulumi.Context,
	name string, args *CloudAccountArgs, opts ...pulumi.ResourceOption) (*CloudAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudAccount
	err := ctx.RegisterResource("pgedge:index/cloudAccount:CloudAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudAccount gets an existing CloudAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudAccountState, opts ...pulumi.ResourceOption) (*CloudAccount, error) {
	var resource CloudAccount
	err := ctx.ReadResource("pgedge:index/cloudAccount:CloudAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudAccount resources.
type cloudAccountState struct {
	CreatedAt   *string           `pulumi:"createdAt"`
	Credentials map[string]string `pulumi:"credentials"`
	Description *string           `pulumi:"description"`
	Name        *string           `pulumi:"name"`
	Type        *string           `pulumi:"type"`
	UpdatedAt   *string           `pulumi:"updatedAt"`
}

type CloudAccountState struct {
	CreatedAt   pulumi.StringPtrInput
	Credentials pulumi.StringMapInput
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Type        pulumi.StringPtrInput
	UpdatedAt   pulumi.StringPtrInput
}

func (CloudAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountState)(nil)).Elem()
}

type cloudAccountArgs struct {
	Credentials map[string]string `pulumi:"credentials"`
	Description *string           `pulumi:"description"`
	Name        *string           `pulumi:"name"`
	Type        string            `pulumi:"type"`
}

// The set of arguments for constructing a CloudAccount resource.
type CloudAccountArgs struct {
	Credentials pulumi.StringMapInput
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Type        pulumi.StringInput
}

func (CloudAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAccountArgs)(nil)).Elem()
}

type CloudAccountInput interface {
	pulumi.Input

	ToCloudAccountOutput() CloudAccountOutput
	ToCloudAccountOutputWithContext(ctx context.Context) CloudAccountOutput
}

func (*CloudAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccount)(nil)).Elem()
}

func (i *CloudAccount) ToCloudAccountOutput() CloudAccountOutput {
	return i.ToCloudAccountOutputWithContext(context.Background())
}

func (i *CloudAccount) ToCloudAccountOutputWithContext(ctx context.Context) CloudAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountOutput)
}

// CloudAccountArrayInput is an input type that accepts CloudAccountArray and CloudAccountArrayOutput values.
// You can construct a concrete instance of `CloudAccountArrayInput` via:
//
//	CloudAccountArray{ CloudAccountArgs{...} }
type CloudAccountArrayInput interface {
	pulumi.Input

	ToCloudAccountArrayOutput() CloudAccountArrayOutput
	ToCloudAccountArrayOutputWithContext(context.Context) CloudAccountArrayOutput
}

type CloudAccountArray []CloudAccountInput

func (CloudAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccount)(nil)).Elem()
}

func (i CloudAccountArray) ToCloudAccountArrayOutput() CloudAccountArrayOutput {
	return i.ToCloudAccountArrayOutputWithContext(context.Background())
}

func (i CloudAccountArray) ToCloudAccountArrayOutputWithContext(ctx context.Context) CloudAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountArrayOutput)
}

// CloudAccountMapInput is an input type that accepts CloudAccountMap and CloudAccountMapOutput values.
// You can construct a concrete instance of `CloudAccountMapInput` via:
//
//	CloudAccountMap{ "key": CloudAccountArgs{...} }
type CloudAccountMapInput interface {
	pulumi.Input

	ToCloudAccountMapOutput() CloudAccountMapOutput
	ToCloudAccountMapOutputWithContext(context.Context) CloudAccountMapOutput
}

type CloudAccountMap map[string]CloudAccountInput

func (CloudAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccount)(nil)).Elem()
}

func (i CloudAccountMap) ToCloudAccountMapOutput() CloudAccountMapOutput {
	return i.ToCloudAccountMapOutputWithContext(context.Background())
}

func (i CloudAccountMap) ToCloudAccountMapOutputWithContext(ctx context.Context) CloudAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAccountMapOutput)
}

type CloudAccountOutput struct{ *pulumi.OutputState }

func (CloudAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAccount)(nil)).Elem()
}

func (o CloudAccountOutput) ToCloudAccountOutput() CloudAccountOutput {
	return o
}

func (o CloudAccountOutput) ToCloudAccountOutputWithContext(ctx context.Context) CloudAccountOutput {
	return o
}

func (o CloudAccountOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o CloudAccountOutput) Credentials() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringMapOutput { return v.Credentials }).(pulumi.StringMapOutput)
}

func (o CloudAccountOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CloudAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CloudAccountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o CloudAccountOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAccount) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type CloudAccountArrayOutput struct{ *pulumi.OutputState }

func (CloudAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudAccount)(nil)).Elem()
}

func (o CloudAccountArrayOutput) ToCloudAccountArrayOutput() CloudAccountArrayOutput {
	return o
}

func (o CloudAccountArrayOutput) ToCloudAccountArrayOutputWithContext(ctx context.Context) CloudAccountArrayOutput {
	return o
}

func (o CloudAccountArrayOutput) Index(i pulumi.IntInput) CloudAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudAccount {
		return vs[0].([]*CloudAccount)[vs[1].(int)]
	}).(CloudAccountOutput)
}

type CloudAccountMapOutput struct{ *pulumi.OutputState }

func (CloudAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudAccount)(nil)).Elem()
}

func (o CloudAccountMapOutput) ToCloudAccountMapOutput() CloudAccountMapOutput {
	return o
}

func (o CloudAccountMapOutput) ToCloudAccountMapOutputWithContext(ctx context.Context) CloudAccountMapOutput {
	return o
}

func (o CloudAccountMapOutput) MapIndex(k pulumi.StringInput) CloudAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudAccount {
		return vs[0].(map[string]*CloudAccount)[vs[1].(string)]
	}).(CloudAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountInput)(nil)).Elem(), &CloudAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountArrayInput)(nil)).Elem(), CloudAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAccountMapInput)(nil)).Elem(), CloudAccountMap{})
	pulumi.RegisterOutputType(CloudAccountOutput{})
	pulumi.RegisterOutputType(CloudAccountArrayOutput{})
	pulumi.RegisterOutputType(CloudAccountMapOutput{})
}
