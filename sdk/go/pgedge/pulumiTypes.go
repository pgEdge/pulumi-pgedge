// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pgedge

import (
	"context"
	"reflect"

	"github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterFirewall struct {
	// Port for the firewall rule
	Port *int `pulumi:"port"`
	// Sources for the firewall rule
	Sources []string `pulumi:"sources"`
	// Type of the firewall rule
	Type *string `pulumi:"type"`
}

// ClusterFirewallInput is an input type that accepts ClusterFirewallArgs and ClusterFirewallOutput values.
// You can construct a concrete instance of `ClusterFirewallInput` via:
//
//	ClusterFirewallArgs{...}
type ClusterFirewallInput interface {
	pulumi.Input

	ToClusterFirewallOutput() ClusterFirewallOutput
	ToClusterFirewallOutputWithContext(context.Context) ClusterFirewallOutput
}

type ClusterFirewallArgs struct {
	// Port for the firewall rule
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Sources for the firewall rule
	Sources pulumi.StringArrayInput `pulumi:"sources"`
	// Type of the firewall rule
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ClusterFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFirewall)(nil)).Elem()
}

func (i ClusterFirewallArgs) ToClusterFirewallOutput() ClusterFirewallOutput {
	return i.ToClusterFirewallOutputWithContext(context.Background())
}

func (i ClusterFirewallArgs) ToClusterFirewallOutputWithContext(ctx context.Context) ClusterFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirewallOutput)
}

// ClusterFirewallArrayInput is an input type that accepts ClusterFirewallArray and ClusterFirewallArrayOutput values.
// You can construct a concrete instance of `ClusterFirewallArrayInput` via:
//
//	ClusterFirewallArray{ ClusterFirewallArgs{...} }
type ClusterFirewallArrayInput interface {
	pulumi.Input

	ToClusterFirewallArrayOutput() ClusterFirewallArrayOutput
	ToClusterFirewallArrayOutputWithContext(context.Context) ClusterFirewallArrayOutput
}

type ClusterFirewallArray []ClusterFirewallInput

func (ClusterFirewallArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFirewall)(nil)).Elem()
}

func (i ClusterFirewallArray) ToClusterFirewallArrayOutput() ClusterFirewallArrayOutput {
	return i.ToClusterFirewallArrayOutputWithContext(context.Background())
}

func (i ClusterFirewallArray) ToClusterFirewallArrayOutputWithContext(ctx context.Context) ClusterFirewallArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirewallArrayOutput)
}

type ClusterFirewallOutput struct{ *pulumi.OutputState }

func (ClusterFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFirewall)(nil)).Elem()
}

func (o ClusterFirewallOutput) ToClusterFirewallOutput() ClusterFirewallOutput {
	return o
}

func (o ClusterFirewallOutput) ToClusterFirewallOutputWithContext(ctx context.Context) ClusterFirewallOutput {
	return o
}

// Port for the firewall rule
func (o ClusterFirewallOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterFirewall) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Sources for the firewall rule
func (o ClusterFirewallOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFirewall) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

// Type of the firewall rule
func (o ClusterFirewallOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFirewall) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterFirewallArrayOutput struct{ *pulumi.OutputState }

func (ClusterFirewallArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFirewall)(nil)).Elem()
}

func (o ClusterFirewallArrayOutput) ToClusterFirewallArrayOutput() ClusterFirewallArrayOutput {
	return o
}

func (o ClusterFirewallArrayOutput) ToClusterFirewallArrayOutputWithContext(ctx context.Context) ClusterFirewallArrayOutput {
	return o
}

func (o ClusterFirewallArrayOutput) Index(i pulumi.IntInput) ClusterFirewallOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterFirewall {
		return vs[0].([]ClusterFirewall)[vs[1].(int)]
	}).(ClusterFirewallOutput)
}

type ClusterNodeGroups struct {
	Aws     []ClusterNodeGroupsAw     `pulumi:"aws"`
	Azures  []ClusterNodeGroupsAzure  `pulumi:"azures"`
	Googles []ClusterNodeGroupsGoogle `pulumi:"googles"`
}

// ClusterNodeGroupsInput is an input type that accepts ClusterNodeGroupsArgs and ClusterNodeGroupsOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsInput` via:
//
//	ClusterNodeGroupsArgs{...}
type ClusterNodeGroupsInput interface {
	pulumi.Input

	ToClusterNodeGroupsOutput() ClusterNodeGroupsOutput
	ToClusterNodeGroupsOutputWithContext(context.Context) ClusterNodeGroupsOutput
}

type ClusterNodeGroupsArgs struct {
	Aws     ClusterNodeGroupsAwArrayInput     `pulumi:"aws"`
	Azures  ClusterNodeGroupsAzureArrayInput  `pulumi:"azures"`
	Googles ClusterNodeGroupsGoogleArrayInput `pulumi:"googles"`
}

func (ClusterNodeGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroups)(nil)).Elem()
}

func (i ClusterNodeGroupsArgs) ToClusterNodeGroupsOutput() ClusterNodeGroupsOutput {
	return i.ToClusterNodeGroupsOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsArgs) ToClusterNodeGroupsOutputWithContext(ctx context.Context) ClusterNodeGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsOutput)
}

func (i ClusterNodeGroupsArgs) ToClusterNodeGroupsPtrOutput() ClusterNodeGroupsPtrOutput {
	return i.ToClusterNodeGroupsPtrOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsArgs) ToClusterNodeGroupsPtrOutputWithContext(ctx context.Context) ClusterNodeGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsOutput).ToClusterNodeGroupsPtrOutputWithContext(ctx)
}

// ClusterNodeGroupsPtrInput is an input type that accepts ClusterNodeGroupsArgs, ClusterNodeGroupsPtr and ClusterNodeGroupsPtrOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsPtrInput` via:
//
//	        ClusterNodeGroupsArgs{...}
//
//	or:
//
//	        nil
type ClusterNodeGroupsPtrInput interface {
	pulumi.Input

	ToClusterNodeGroupsPtrOutput() ClusterNodeGroupsPtrOutput
	ToClusterNodeGroupsPtrOutputWithContext(context.Context) ClusterNodeGroupsPtrOutput
}

type clusterNodeGroupsPtrType ClusterNodeGroupsArgs

func ClusterNodeGroupsPtr(v *ClusterNodeGroupsArgs) ClusterNodeGroupsPtrInput {
	return (*clusterNodeGroupsPtrType)(v)
}

func (*clusterNodeGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeGroups)(nil)).Elem()
}

func (i *clusterNodeGroupsPtrType) ToClusterNodeGroupsPtrOutput() ClusterNodeGroupsPtrOutput {
	return i.ToClusterNodeGroupsPtrOutputWithContext(context.Background())
}

func (i *clusterNodeGroupsPtrType) ToClusterNodeGroupsPtrOutputWithContext(ctx context.Context) ClusterNodeGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsPtrOutput)
}

type ClusterNodeGroupsOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroups)(nil)).Elem()
}

func (o ClusterNodeGroupsOutput) ToClusterNodeGroupsOutput() ClusterNodeGroupsOutput {
	return o
}

func (o ClusterNodeGroupsOutput) ToClusterNodeGroupsOutputWithContext(ctx context.Context) ClusterNodeGroupsOutput {
	return o
}

func (o ClusterNodeGroupsOutput) ToClusterNodeGroupsPtrOutput() ClusterNodeGroupsPtrOutput {
	return o.ToClusterNodeGroupsPtrOutputWithContext(context.Background())
}

func (o ClusterNodeGroupsOutput) ToClusterNodeGroupsPtrOutputWithContext(ctx context.Context) ClusterNodeGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeGroups) *ClusterNodeGroups {
		return &v
	}).(ClusterNodeGroupsPtrOutput)
}

func (o ClusterNodeGroupsOutput) Aws() ClusterNodeGroupsAwArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroups) []ClusterNodeGroupsAw { return v.Aws }).(ClusterNodeGroupsAwArrayOutput)
}

func (o ClusterNodeGroupsOutput) Azures() ClusterNodeGroupsAzureArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroups) []ClusterNodeGroupsAzure { return v.Azures }).(ClusterNodeGroupsAzureArrayOutput)
}

func (o ClusterNodeGroupsOutput) Googles() ClusterNodeGroupsGoogleArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroups) []ClusterNodeGroupsGoogle { return v.Googles }).(ClusterNodeGroupsGoogleArrayOutput)
}

type ClusterNodeGroupsPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeGroups)(nil)).Elem()
}

func (o ClusterNodeGroupsPtrOutput) ToClusterNodeGroupsPtrOutput() ClusterNodeGroupsPtrOutput {
	return o
}

func (o ClusterNodeGroupsPtrOutput) ToClusterNodeGroupsPtrOutputWithContext(ctx context.Context) ClusterNodeGroupsPtrOutput {
	return o
}

func (o ClusterNodeGroupsPtrOutput) Elem() ClusterNodeGroupsOutput {
	return o.ApplyT(func(v *ClusterNodeGroups) ClusterNodeGroups {
		if v != nil {
			return *v
		}
		var ret ClusterNodeGroups
		return ret
	}).(ClusterNodeGroupsOutput)
}

func (o ClusterNodeGroupsPtrOutput) Aws() ClusterNodeGroupsAwArrayOutput {
	return o.ApplyT(func(v *ClusterNodeGroups) []ClusterNodeGroupsAw {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(ClusterNodeGroupsAwArrayOutput)
}

func (o ClusterNodeGroupsPtrOutput) Azures() ClusterNodeGroupsAzureArrayOutput {
	return o.ApplyT(func(v *ClusterNodeGroups) []ClusterNodeGroupsAzure {
		if v == nil {
			return nil
		}
		return v.Azures
	}).(ClusterNodeGroupsAzureArrayOutput)
}

func (o ClusterNodeGroupsPtrOutput) Googles() ClusterNodeGroupsGoogleArrayOutput {
	return o.ApplyT(func(v *ClusterNodeGroups) []ClusterNodeGroupsGoogle {
		if v == nil {
			return nil
		}
		return v.Googles
	}).(ClusterNodeGroupsGoogleArrayOutput)
}

type ClusterNodeGroupsAw struct {
	// Availability zones of the AWS node group
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr *string `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType *string `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   *string                   `pulumi:"nodeLocation"`
	Nodes          []ClusterNodeGroupsAwNode `pulumi:"nodes"`
	PrivateSubnets []string                  `pulumi:"privateSubnets"`
	PublicSubnets  []string                  `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region *string `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops *int `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize *int `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType *string `pulumi:"volumeType"`
}

// ClusterNodeGroupsAwInput is an input type that accepts ClusterNodeGroupsAwArgs and ClusterNodeGroupsAwOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsAwInput` via:
//
//	ClusterNodeGroupsAwArgs{...}
type ClusterNodeGroupsAwInput interface {
	pulumi.Input

	ToClusterNodeGroupsAwOutput() ClusterNodeGroupsAwOutput
	ToClusterNodeGroupsAwOutputWithContext(context.Context) ClusterNodeGroupsAwOutput
}

type ClusterNodeGroupsAwArgs struct {
	// Availability zones of the AWS node group
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   pulumi.StringPtrInput             `pulumi:"nodeLocation"`
	Nodes          ClusterNodeGroupsAwNodeArrayInput `pulumi:"nodes"`
	PrivateSubnets pulumi.StringArrayInput           `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput           `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops pulumi.IntPtrInput `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ClusterNodeGroupsAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsAw)(nil)).Elem()
}

func (i ClusterNodeGroupsAwArgs) ToClusterNodeGroupsAwOutput() ClusterNodeGroupsAwOutput {
	return i.ToClusterNodeGroupsAwOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsAwArgs) ToClusterNodeGroupsAwOutputWithContext(ctx context.Context) ClusterNodeGroupsAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsAwOutput)
}

// ClusterNodeGroupsAwArrayInput is an input type that accepts ClusterNodeGroupsAwArray and ClusterNodeGroupsAwArrayOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsAwArrayInput` via:
//
//	ClusterNodeGroupsAwArray{ ClusterNodeGroupsAwArgs{...} }
type ClusterNodeGroupsAwArrayInput interface {
	pulumi.Input

	ToClusterNodeGroupsAwArrayOutput() ClusterNodeGroupsAwArrayOutput
	ToClusterNodeGroupsAwArrayOutputWithContext(context.Context) ClusterNodeGroupsAwArrayOutput
}

type ClusterNodeGroupsAwArray []ClusterNodeGroupsAwInput

func (ClusterNodeGroupsAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsAw)(nil)).Elem()
}

func (i ClusterNodeGroupsAwArray) ToClusterNodeGroupsAwArrayOutput() ClusterNodeGroupsAwArrayOutput {
	return i.ToClusterNodeGroupsAwArrayOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsAwArray) ToClusterNodeGroupsAwArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsAwArrayOutput)
}

type ClusterNodeGroupsAwOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsAw)(nil)).Elem()
}

func (o ClusterNodeGroupsAwOutput) ToClusterNodeGroupsAwOutput() ClusterNodeGroupsAwOutput {
	return o
}

func (o ClusterNodeGroupsAwOutput) ToClusterNodeGroupsAwOutputWithContext(ctx context.Context) ClusterNodeGroupsAwOutput {
	return o
}

// Availability zones of the AWS node group
func (o ClusterNodeGroupsAwOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// CIDR of the AWS node group
func (o ClusterNodeGroupsAwOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// Instance type of the AWS node group
func (o ClusterNodeGroupsAwOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Node location of the AWS node group
func (o ClusterNodeGroupsAwOutput) NodeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) *string { return v.NodeLocation }).(pulumi.StringPtrOutput)
}

func (o ClusterNodeGroupsAwOutput) Nodes() ClusterNodeGroupsAwNodeArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) []ClusterNodeGroupsAwNode { return v.Nodes }).(ClusterNodeGroupsAwNodeArrayOutput)
}

func (o ClusterNodeGroupsAwOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o ClusterNodeGroupsAwOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the AWS node group
func (o ClusterNodeGroupsAwOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Volume IOPS of the AWS node group
func (o ClusterNodeGroupsAwOutput) VolumeIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) *int { return v.VolumeIops }).(pulumi.IntPtrOutput)
}

// Volume size of the AWS node group
func (o ClusterNodeGroupsAwOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// Volume type of the AWS node group
func (o ClusterNodeGroupsAwOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAw) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ClusterNodeGroupsAwArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsAw)(nil)).Elem()
}

func (o ClusterNodeGroupsAwArrayOutput) ToClusterNodeGroupsAwArrayOutput() ClusterNodeGroupsAwArrayOutput {
	return o
}

func (o ClusterNodeGroupsAwArrayOutput) ToClusterNodeGroupsAwArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsAwArrayOutput {
	return o
}

func (o ClusterNodeGroupsAwArrayOutput) Index(i pulumi.IntInput) ClusterNodeGroupsAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeGroupsAw {
		return vs[0].([]ClusterNodeGroupsAw)[vs[1].(int)]
	}).(ClusterNodeGroupsAwOutput)
}

type ClusterNodeGroupsAwNode struct {
	// Display name of the node
	DisplayName *string `pulumi:"displayName"`
	// IP address of the node
	IpAddress *string `pulumi:"ipAddress"`
	// Is the node active
	IsActive *bool `pulumi:"isActive"`
}

// ClusterNodeGroupsAwNodeInput is an input type that accepts ClusterNodeGroupsAwNodeArgs and ClusterNodeGroupsAwNodeOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsAwNodeInput` via:
//
//	ClusterNodeGroupsAwNodeArgs{...}
type ClusterNodeGroupsAwNodeInput interface {
	pulumi.Input

	ToClusterNodeGroupsAwNodeOutput() ClusterNodeGroupsAwNodeOutput
	ToClusterNodeGroupsAwNodeOutputWithContext(context.Context) ClusterNodeGroupsAwNodeOutput
}

type ClusterNodeGroupsAwNodeArgs struct {
	// Display name of the node
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// IP address of the node
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Is the node active
	IsActive pulumi.BoolPtrInput `pulumi:"isActive"`
}

func (ClusterNodeGroupsAwNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsAwNode)(nil)).Elem()
}

func (i ClusterNodeGroupsAwNodeArgs) ToClusterNodeGroupsAwNodeOutput() ClusterNodeGroupsAwNodeOutput {
	return i.ToClusterNodeGroupsAwNodeOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsAwNodeArgs) ToClusterNodeGroupsAwNodeOutputWithContext(ctx context.Context) ClusterNodeGroupsAwNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsAwNodeOutput)
}

// ClusterNodeGroupsAwNodeArrayInput is an input type that accepts ClusterNodeGroupsAwNodeArray and ClusterNodeGroupsAwNodeArrayOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsAwNodeArrayInput` via:
//
//	ClusterNodeGroupsAwNodeArray{ ClusterNodeGroupsAwNodeArgs{...} }
type ClusterNodeGroupsAwNodeArrayInput interface {
	pulumi.Input

	ToClusterNodeGroupsAwNodeArrayOutput() ClusterNodeGroupsAwNodeArrayOutput
	ToClusterNodeGroupsAwNodeArrayOutputWithContext(context.Context) ClusterNodeGroupsAwNodeArrayOutput
}

type ClusterNodeGroupsAwNodeArray []ClusterNodeGroupsAwNodeInput

func (ClusterNodeGroupsAwNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsAwNode)(nil)).Elem()
}

func (i ClusterNodeGroupsAwNodeArray) ToClusterNodeGroupsAwNodeArrayOutput() ClusterNodeGroupsAwNodeArrayOutput {
	return i.ToClusterNodeGroupsAwNodeArrayOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsAwNodeArray) ToClusterNodeGroupsAwNodeArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsAwNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsAwNodeArrayOutput)
}

type ClusterNodeGroupsAwNodeOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsAwNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsAwNode)(nil)).Elem()
}

func (o ClusterNodeGroupsAwNodeOutput) ToClusterNodeGroupsAwNodeOutput() ClusterNodeGroupsAwNodeOutput {
	return o
}

func (o ClusterNodeGroupsAwNodeOutput) ToClusterNodeGroupsAwNodeOutputWithContext(ctx context.Context) ClusterNodeGroupsAwNodeOutput {
	return o
}

// Display name of the node
func (o ClusterNodeGroupsAwNodeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAwNode) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// IP address of the node
func (o ClusterNodeGroupsAwNodeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAwNode) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Is the node active
func (o ClusterNodeGroupsAwNodeOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAwNode) *bool { return v.IsActive }).(pulumi.BoolPtrOutput)
}

type ClusterNodeGroupsAwNodeArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsAwNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsAwNode)(nil)).Elem()
}

func (o ClusterNodeGroupsAwNodeArrayOutput) ToClusterNodeGroupsAwNodeArrayOutput() ClusterNodeGroupsAwNodeArrayOutput {
	return o
}

func (o ClusterNodeGroupsAwNodeArrayOutput) ToClusterNodeGroupsAwNodeArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsAwNodeArrayOutput {
	return o
}

func (o ClusterNodeGroupsAwNodeArrayOutput) Index(i pulumi.IntInput) ClusterNodeGroupsAwNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeGroupsAwNode {
		return vs[0].([]ClusterNodeGroupsAwNode)[vs[1].(int)]
	}).(ClusterNodeGroupsAwNodeOutput)
}

type ClusterNodeGroupsAzure struct {
	// Availability zones of the AWS node group
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr *string `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType *string `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   *string                      `pulumi:"nodeLocation"`
	Nodes          []ClusterNodeGroupsAzureNode `pulumi:"nodes"`
	PrivateSubnets []string                     `pulumi:"privateSubnets"`
	PublicSubnets  []string                     `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region *string `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops *int `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize *int `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType *string `pulumi:"volumeType"`
}

// ClusterNodeGroupsAzureInput is an input type that accepts ClusterNodeGroupsAzureArgs and ClusterNodeGroupsAzureOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsAzureInput` via:
//
//	ClusterNodeGroupsAzureArgs{...}
type ClusterNodeGroupsAzureInput interface {
	pulumi.Input

	ToClusterNodeGroupsAzureOutput() ClusterNodeGroupsAzureOutput
	ToClusterNodeGroupsAzureOutputWithContext(context.Context) ClusterNodeGroupsAzureOutput
}

type ClusterNodeGroupsAzureArgs struct {
	// Availability zones of the AWS node group
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   pulumi.StringPtrInput                `pulumi:"nodeLocation"`
	Nodes          ClusterNodeGroupsAzureNodeArrayInput `pulumi:"nodes"`
	PrivateSubnets pulumi.StringArrayInput              `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput              `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops pulumi.IntPtrInput `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ClusterNodeGroupsAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsAzure)(nil)).Elem()
}

func (i ClusterNodeGroupsAzureArgs) ToClusterNodeGroupsAzureOutput() ClusterNodeGroupsAzureOutput {
	return i.ToClusterNodeGroupsAzureOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsAzureArgs) ToClusterNodeGroupsAzureOutputWithContext(ctx context.Context) ClusterNodeGroupsAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsAzureOutput)
}

// ClusterNodeGroupsAzureArrayInput is an input type that accepts ClusterNodeGroupsAzureArray and ClusterNodeGroupsAzureArrayOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsAzureArrayInput` via:
//
//	ClusterNodeGroupsAzureArray{ ClusterNodeGroupsAzureArgs{...} }
type ClusterNodeGroupsAzureArrayInput interface {
	pulumi.Input

	ToClusterNodeGroupsAzureArrayOutput() ClusterNodeGroupsAzureArrayOutput
	ToClusterNodeGroupsAzureArrayOutputWithContext(context.Context) ClusterNodeGroupsAzureArrayOutput
}

type ClusterNodeGroupsAzureArray []ClusterNodeGroupsAzureInput

func (ClusterNodeGroupsAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsAzure)(nil)).Elem()
}

func (i ClusterNodeGroupsAzureArray) ToClusterNodeGroupsAzureArrayOutput() ClusterNodeGroupsAzureArrayOutput {
	return i.ToClusterNodeGroupsAzureArrayOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsAzureArray) ToClusterNodeGroupsAzureArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsAzureArrayOutput)
}

type ClusterNodeGroupsAzureOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsAzure)(nil)).Elem()
}

func (o ClusterNodeGroupsAzureOutput) ToClusterNodeGroupsAzureOutput() ClusterNodeGroupsAzureOutput {
	return o
}

func (o ClusterNodeGroupsAzureOutput) ToClusterNodeGroupsAzureOutputWithContext(ctx context.Context) ClusterNodeGroupsAzureOutput {
	return o
}

// Availability zones of the AWS node group
func (o ClusterNodeGroupsAzureOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// CIDR of the AWS node group
func (o ClusterNodeGroupsAzureOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// Instance type of the AWS node group
func (o ClusterNodeGroupsAzureOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Node location of the AWS node group
func (o ClusterNodeGroupsAzureOutput) NodeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) *string { return v.NodeLocation }).(pulumi.StringPtrOutput)
}

func (o ClusterNodeGroupsAzureOutput) Nodes() ClusterNodeGroupsAzureNodeArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) []ClusterNodeGroupsAzureNode { return v.Nodes }).(ClusterNodeGroupsAzureNodeArrayOutput)
}

func (o ClusterNodeGroupsAzureOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o ClusterNodeGroupsAzureOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the AWS node group
func (o ClusterNodeGroupsAzureOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Volume IOPS of the AWS node group
func (o ClusterNodeGroupsAzureOutput) VolumeIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) *int { return v.VolumeIops }).(pulumi.IntPtrOutput)
}

// Volume size of the AWS node group
func (o ClusterNodeGroupsAzureOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// Volume type of the AWS node group
func (o ClusterNodeGroupsAzureOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzure) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ClusterNodeGroupsAzureArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsAzure)(nil)).Elem()
}

func (o ClusterNodeGroupsAzureArrayOutput) ToClusterNodeGroupsAzureArrayOutput() ClusterNodeGroupsAzureArrayOutput {
	return o
}

func (o ClusterNodeGroupsAzureArrayOutput) ToClusterNodeGroupsAzureArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsAzureArrayOutput {
	return o
}

func (o ClusterNodeGroupsAzureArrayOutput) Index(i pulumi.IntInput) ClusterNodeGroupsAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeGroupsAzure {
		return vs[0].([]ClusterNodeGroupsAzure)[vs[1].(int)]
	}).(ClusterNodeGroupsAzureOutput)
}

type ClusterNodeGroupsAzureNode struct {
	// Display name of the node
	DisplayName *string `pulumi:"displayName"`
	// IP address of the node
	IpAddress *string `pulumi:"ipAddress"`
	// Is the node active
	IsActive *bool `pulumi:"isActive"`
}

// ClusterNodeGroupsAzureNodeInput is an input type that accepts ClusterNodeGroupsAzureNodeArgs and ClusterNodeGroupsAzureNodeOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsAzureNodeInput` via:
//
//	ClusterNodeGroupsAzureNodeArgs{...}
type ClusterNodeGroupsAzureNodeInput interface {
	pulumi.Input

	ToClusterNodeGroupsAzureNodeOutput() ClusterNodeGroupsAzureNodeOutput
	ToClusterNodeGroupsAzureNodeOutputWithContext(context.Context) ClusterNodeGroupsAzureNodeOutput
}

type ClusterNodeGroupsAzureNodeArgs struct {
	// Display name of the node
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// IP address of the node
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Is the node active
	IsActive pulumi.BoolPtrInput `pulumi:"isActive"`
}

func (ClusterNodeGroupsAzureNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsAzureNode)(nil)).Elem()
}

func (i ClusterNodeGroupsAzureNodeArgs) ToClusterNodeGroupsAzureNodeOutput() ClusterNodeGroupsAzureNodeOutput {
	return i.ToClusterNodeGroupsAzureNodeOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsAzureNodeArgs) ToClusterNodeGroupsAzureNodeOutputWithContext(ctx context.Context) ClusterNodeGroupsAzureNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsAzureNodeOutput)
}

// ClusterNodeGroupsAzureNodeArrayInput is an input type that accepts ClusterNodeGroupsAzureNodeArray and ClusterNodeGroupsAzureNodeArrayOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsAzureNodeArrayInput` via:
//
//	ClusterNodeGroupsAzureNodeArray{ ClusterNodeGroupsAzureNodeArgs{...} }
type ClusterNodeGroupsAzureNodeArrayInput interface {
	pulumi.Input

	ToClusterNodeGroupsAzureNodeArrayOutput() ClusterNodeGroupsAzureNodeArrayOutput
	ToClusterNodeGroupsAzureNodeArrayOutputWithContext(context.Context) ClusterNodeGroupsAzureNodeArrayOutput
}

type ClusterNodeGroupsAzureNodeArray []ClusterNodeGroupsAzureNodeInput

func (ClusterNodeGroupsAzureNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsAzureNode)(nil)).Elem()
}

func (i ClusterNodeGroupsAzureNodeArray) ToClusterNodeGroupsAzureNodeArrayOutput() ClusterNodeGroupsAzureNodeArrayOutput {
	return i.ToClusterNodeGroupsAzureNodeArrayOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsAzureNodeArray) ToClusterNodeGroupsAzureNodeArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsAzureNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsAzureNodeArrayOutput)
}

type ClusterNodeGroupsAzureNodeOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsAzureNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsAzureNode)(nil)).Elem()
}

func (o ClusterNodeGroupsAzureNodeOutput) ToClusterNodeGroupsAzureNodeOutput() ClusterNodeGroupsAzureNodeOutput {
	return o
}

func (o ClusterNodeGroupsAzureNodeOutput) ToClusterNodeGroupsAzureNodeOutputWithContext(ctx context.Context) ClusterNodeGroupsAzureNodeOutput {
	return o
}

// Display name of the node
func (o ClusterNodeGroupsAzureNodeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzureNode) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// IP address of the node
func (o ClusterNodeGroupsAzureNodeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzureNode) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Is the node active
func (o ClusterNodeGroupsAzureNodeOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsAzureNode) *bool { return v.IsActive }).(pulumi.BoolPtrOutput)
}

type ClusterNodeGroupsAzureNodeArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsAzureNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsAzureNode)(nil)).Elem()
}

func (o ClusterNodeGroupsAzureNodeArrayOutput) ToClusterNodeGroupsAzureNodeArrayOutput() ClusterNodeGroupsAzureNodeArrayOutput {
	return o
}

func (o ClusterNodeGroupsAzureNodeArrayOutput) ToClusterNodeGroupsAzureNodeArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsAzureNodeArrayOutput {
	return o
}

func (o ClusterNodeGroupsAzureNodeArrayOutput) Index(i pulumi.IntInput) ClusterNodeGroupsAzureNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeGroupsAzureNode {
		return vs[0].([]ClusterNodeGroupsAzureNode)[vs[1].(int)]
	}).(ClusterNodeGroupsAzureNodeOutput)
}

type ClusterNodeGroupsGoogle struct {
	// Availability zones of the AWS node group
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr *string `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType *string `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   *string                       `pulumi:"nodeLocation"`
	Nodes          []ClusterNodeGroupsGoogleNode `pulumi:"nodes"`
	PrivateSubnets []string                      `pulumi:"privateSubnets"`
	PublicSubnets  []string                      `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region *string `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops *int `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize *int `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType *string `pulumi:"volumeType"`
}

// ClusterNodeGroupsGoogleInput is an input type that accepts ClusterNodeGroupsGoogleArgs and ClusterNodeGroupsGoogleOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsGoogleInput` via:
//
//	ClusterNodeGroupsGoogleArgs{...}
type ClusterNodeGroupsGoogleInput interface {
	pulumi.Input

	ToClusterNodeGroupsGoogleOutput() ClusterNodeGroupsGoogleOutput
	ToClusterNodeGroupsGoogleOutputWithContext(context.Context) ClusterNodeGroupsGoogleOutput
}

type ClusterNodeGroupsGoogleArgs struct {
	// Availability zones of the AWS node group
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   pulumi.StringPtrInput                 `pulumi:"nodeLocation"`
	Nodes          ClusterNodeGroupsGoogleNodeArrayInput `pulumi:"nodes"`
	PrivateSubnets pulumi.StringArrayInput               `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput               `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops pulumi.IntPtrInput `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ClusterNodeGroupsGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsGoogle)(nil)).Elem()
}

func (i ClusterNodeGroupsGoogleArgs) ToClusterNodeGroupsGoogleOutput() ClusterNodeGroupsGoogleOutput {
	return i.ToClusterNodeGroupsGoogleOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsGoogleArgs) ToClusterNodeGroupsGoogleOutputWithContext(ctx context.Context) ClusterNodeGroupsGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsGoogleOutput)
}

// ClusterNodeGroupsGoogleArrayInput is an input type that accepts ClusterNodeGroupsGoogleArray and ClusterNodeGroupsGoogleArrayOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsGoogleArrayInput` via:
//
//	ClusterNodeGroupsGoogleArray{ ClusterNodeGroupsGoogleArgs{...} }
type ClusterNodeGroupsGoogleArrayInput interface {
	pulumi.Input

	ToClusterNodeGroupsGoogleArrayOutput() ClusterNodeGroupsGoogleArrayOutput
	ToClusterNodeGroupsGoogleArrayOutputWithContext(context.Context) ClusterNodeGroupsGoogleArrayOutput
}

type ClusterNodeGroupsGoogleArray []ClusterNodeGroupsGoogleInput

func (ClusterNodeGroupsGoogleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsGoogle)(nil)).Elem()
}

func (i ClusterNodeGroupsGoogleArray) ToClusterNodeGroupsGoogleArrayOutput() ClusterNodeGroupsGoogleArrayOutput {
	return i.ToClusterNodeGroupsGoogleArrayOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsGoogleArray) ToClusterNodeGroupsGoogleArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsGoogleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsGoogleArrayOutput)
}

type ClusterNodeGroupsGoogleOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsGoogle)(nil)).Elem()
}

func (o ClusterNodeGroupsGoogleOutput) ToClusterNodeGroupsGoogleOutput() ClusterNodeGroupsGoogleOutput {
	return o
}

func (o ClusterNodeGroupsGoogleOutput) ToClusterNodeGroupsGoogleOutputWithContext(ctx context.Context) ClusterNodeGroupsGoogleOutput {
	return o
}

// Availability zones of the AWS node group
func (o ClusterNodeGroupsGoogleOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// CIDR of the AWS node group
func (o ClusterNodeGroupsGoogleOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// Instance type of the AWS node group
func (o ClusterNodeGroupsGoogleOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Node location of the AWS node group
func (o ClusterNodeGroupsGoogleOutput) NodeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) *string { return v.NodeLocation }).(pulumi.StringPtrOutput)
}

func (o ClusterNodeGroupsGoogleOutput) Nodes() ClusterNodeGroupsGoogleNodeArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) []ClusterNodeGroupsGoogleNode { return v.Nodes }).(ClusterNodeGroupsGoogleNodeArrayOutput)
}

func (o ClusterNodeGroupsGoogleOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o ClusterNodeGroupsGoogleOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the AWS node group
func (o ClusterNodeGroupsGoogleOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Volume IOPS of the AWS node group
func (o ClusterNodeGroupsGoogleOutput) VolumeIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) *int { return v.VolumeIops }).(pulumi.IntPtrOutput)
}

// Volume size of the AWS node group
func (o ClusterNodeGroupsGoogleOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// Volume type of the AWS node group
func (o ClusterNodeGroupsGoogleOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogle) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ClusterNodeGroupsGoogleArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsGoogleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsGoogle)(nil)).Elem()
}

func (o ClusterNodeGroupsGoogleArrayOutput) ToClusterNodeGroupsGoogleArrayOutput() ClusterNodeGroupsGoogleArrayOutput {
	return o
}

func (o ClusterNodeGroupsGoogleArrayOutput) ToClusterNodeGroupsGoogleArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsGoogleArrayOutput {
	return o
}

func (o ClusterNodeGroupsGoogleArrayOutput) Index(i pulumi.IntInput) ClusterNodeGroupsGoogleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeGroupsGoogle {
		return vs[0].([]ClusterNodeGroupsGoogle)[vs[1].(int)]
	}).(ClusterNodeGroupsGoogleOutput)
}

type ClusterNodeGroupsGoogleNode struct {
	// Display name of the node
	DisplayName *string `pulumi:"displayName"`
	// IP address of the node
	IpAddress *string `pulumi:"ipAddress"`
	// Is the node active
	IsActive *bool `pulumi:"isActive"`
}

// ClusterNodeGroupsGoogleNodeInput is an input type that accepts ClusterNodeGroupsGoogleNodeArgs and ClusterNodeGroupsGoogleNodeOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsGoogleNodeInput` via:
//
//	ClusterNodeGroupsGoogleNodeArgs{...}
type ClusterNodeGroupsGoogleNodeInput interface {
	pulumi.Input

	ToClusterNodeGroupsGoogleNodeOutput() ClusterNodeGroupsGoogleNodeOutput
	ToClusterNodeGroupsGoogleNodeOutputWithContext(context.Context) ClusterNodeGroupsGoogleNodeOutput
}

type ClusterNodeGroupsGoogleNodeArgs struct {
	// Display name of the node
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// IP address of the node
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Is the node active
	IsActive pulumi.BoolPtrInput `pulumi:"isActive"`
}

func (ClusterNodeGroupsGoogleNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsGoogleNode)(nil)).Elem()
}

func (i ClusterNodeGroupsGoogleNodeArgs) ToClusterNodeGroupsGoogleNodeOutput() ClusterNodeGroupsGoogleNodeOutput {
	return i.ToClusterNodeGroupsGoogleNodeOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsGoogleNodeArgs) ToClusterNodeGroupsGoogleNodeOutputWithContext(ctx context.Context) ClusterNodeGroupsGoogleNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsGoogleNodeOutput)
}

// ClusterNodeGroupsGoogleNodeArrayInput is an input type that accepts ClusterNodeGroupsGoogleNodeArray and ClusterNodeGroupsGoogleNodeArrayOutput values.
// You can construct a concrete instance of `ClusterNodeGroupsGoogleNodeArrayInput` via:
//
//	ClusterNodeGroupsGoogleNodeArray{ ClusterNodeGroupsGoogleNodeArgs{...} }
type ClusterNodeGroupsGoogleNodeArrayInput interface {
	pulumi.Input

	ToClusterNodeGroupsGoogleNodeArrayOutput() ClusterNodeGroupsGoogleNodeArrayOutput
	ToClusterNodeGroupsGoogleNodeArrayOutputWithContext(context.Context) ClusterNodeGroupsGoogleNodeArrayOutput
}

type ClusterNodeGroupsGoogleNodeArray []ClusterNodeGroupsGoogleNodeInput

func (ClusterNodeGroupsGoogleNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsGoogleNode)(nil)).Elem()
}

func (i ClusterNodeGroupsGoogleNodeArray) ToClusterNodeGroupsGoogleNodeArrayOutput() ClusterNodeGroupsGoogleNodeArrayOutput {
	return i.ToClusterNodeGroupsGoogleNodeArrayOutputWithContext(context.Background())
}

func (i ClusterNodeGroupsGoogleNodeArray) ToClusterNodeGroupsGoogleNodeArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsGoogleNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeGroupsGoogleNodeArrayOutput)
}

type ClusterNodeGroupsGoogleNodeOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsGoogleNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeGroupsGoogleNode)(nil)).Elem()
}

func (o ClusterNodeGroupsGoogleNodeOutput) ToClusterNodeGroupsGoogleNodeOutput() ClusterNodeGroupsGoogleNodeOutput {
	return o
}

func (o ClusterNodeGroupsGoogleNodeOutput) ToClusterNodeGroupsGoogleNodeOutputWithContext(ctx context.Context) ClusterNodeGroupsGoogleNodeOutput {
	return o
}

// Display name of the node
func (o ClusterNodeGroupsGoogleNodeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogleNode) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// IP address of the node
func (o ClusterNodeGroupsGoogleNodeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogleNode) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Is the node active
func (o ClusterNodeGroupsGoogleNodeOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNodeGroupsGoogleNode) *bool { return v.IsActive }).(pulumi.BoolPtrOutput)
}

type ClusterNodeGroupsGoogleNodeArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeGroupsGoogleNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeGroupsGoogleNode)(nil)).Elem()
}

func (o ClusterNodeGroupsGoogleNodeArrayOutput) ToClusterNodeGroupsGoogleNodeArrayOutput() ClusterNodeGroupsGoogleNodeArrayOutput {
	return o
}

func (o ClusterNodeGroupsGoogleNodeArrayOutput) ToClusterNodeGroupsGoogleNodeArrayOutputWithContext(ctx context.Context) ClusterNodeGroupsGoogleNodeArrayOutput {
	return o
}

func (o ClusterNodeGroupsGoogleNodeArrayOutput) Index(i pulumi.IntInput) ClusterNodeGroupsGoogleNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeGroupsGoogleNode {
		return vs[0].([]ClusterNodeGroupsGoogleNode)[vs[1].(int)]
	}).(ClusterNodeGroupsGoogleNodeOutput)
}

type DatabaseNode struct {
	Connection *DatabaseNodeConnection `pulumi:"connection"`
	Location   *DatabaseNodeLocation   `pulumi:"location"`
	// Name of the node
	Name *string `pulumi:"name"`
}

// DatabaseNodeInput is an input type that accepts DatabaseNodeArgs and DatabaseNodeOutput values.
// You can construct a concrete instance of `DatabaseNodeInput` via:
//
//	DatabaseNodeArgs{...}
type DatabaseNodeInput interface {
	pulumi.Input

	ToDatabaseNodeOutput() DatabaseNodeOutput
	ToDatabaseNodeOutputWithContext(context.Context) DatabaseNodeOutput
}

type DatabaseNodeArgs struct {
	Connection DatabaseNodeConnectionPtrInput `pulumi:"connection"`
	Location   DatabaseNodeLocationPtrInput   `pulumi:"location"`
	// Name of the node
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNode)(nil)).Elem()
}

func (i DatabaseNodeArgs) ToDatabaseNodeOutput() DatabaseNodeOutput {
	return i.ToDatabaseNodeOutputWithContext(context.Background())
}

func (i DatabaseNodeArgs) ToDatabaseNodeOutputWithContext(ctx context.Context) DatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeOutput)
}

// DatabaseNodeArrayInput is an input type that accepts DatabaseNodeArray and DatabaseNodeArrayOutput values.
// You can construct a concrete instance of `DatabaseNodeArrayInput` via:
//
//	DatabaseNodeArray{ DatabaseNodeArgs{...} }
type DatabaseNodeArrayInput interface {
	pulumi.Input

	ToDatabaseNodeArrayOutput() DatabaseNodeArrayOutput
	ToDatabaseNodeArrayOutputWithContext(context.Context) DatabaseNodeArrayOutput
}

type DatabaseNodeArray []DatabaseNodeInput

func (DatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseNode)(nil)).Elem()
}

func (i DatabaseNodeArray) ToDatabaseNodeArrayOutput() DatabaseNodeArrayOutput {
	return i.ToDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i DatabaseNodeArray) ToDatabaseNodeArrayOutputWithContext(ctx context.Context) DatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeArrayOutput)
}

type DatabaseNodeOutput struct{ *pulumi.OutputState }

func (DatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNode)(nil)).Elem()
}

func (o DatabaseNodeOutput) ToDatabaseNodeOutput() DatabaseNodeOutput {
	return o
}

func (o DatabaseNodeOutput) ToDatabaseNodeOutputWithContext(ctx context.Context) DatabaseNodeOutput {
	return o
}

func (o DatabaseNodeOutput) Connection() DatabaseNodeConnectionPtrOutput {
	return o.ApplyT(func(v DatabaseNode) *DatabaseNodeConnection { return v.Connection }).(DatabaseNodeConnectionPtrOutput)
}

func (o DatabaseNodeOutput) Location() DatabaseNodeLocationPtrOutput {
	return o.ApplyT(func(v DatabaseNode) *DatabaseNodeLocation { return v.Location }).(DatabaseNodeLocationPtrOutput)
}

// Name of the node
func (o DatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (DatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseNode)(nil)).Elem()
}

func (o DatabaseNodeArrayOutput) ToDatabaseNodeArrayOutput() DatabaseNodeArrayOutput {
	return o
}

func (o DatabaseNodeArrayOutput) ToDatabaseNodeArrayOutputWithContext(ctx context.Context) DatabaseNodeArrayOutput {
	return o
}

func (o DatabaseNodeArrayOutput) Index(i pulumi.IntInput) DatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseNode {
		return vs[0].([]DatabaseNode)[vs[1].(int)]
	}).(DatabaseNodeOutput)
}

type DatabaseNodeConnection struct {
	// Database of the node
	Database *string `pulumi:"database"`
	// Host of the node
	Host *string `pulumi:"host"`
	// Password of the node
	Password *string `pulumi:"password"`
	// Port of the node
	Port *int `pulumi:"port"`
	// Username of the node
	Username *string `pulumi:"username"`
}

// DatabaseNodeConnectionInput is an input type that accepts DatabaseNodeConnectionArgs and DatabaseNodeConnectionOutput values.
// You can construct a concrete instance of `DatabaseNodeConnectionInput` via:
//
//	DatabaseNodeConnectionArgs{...}
type DatabaseNodeConnectionInput interface {
	pulumi.Input

	ToDatabaseNodeConnectionOutput() DatabaseNodeConnectionOutput
	ToDatabaseNodeConnectionOutputWithContext(context.Context) DatabaseNodeConnectionOutput
}

type DatabaseNodeConnectionArgs struct {
	// Database of the node
	Database pulumi.StringPtrInput `pulumi:"database"`
	// Host of the node
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Password of the node
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port of the node
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Username of the node
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (DatabaseNodeConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeConnection)(nil)).Elem()
}

func (i DatabaseNodeConnectionArgs) ToDatabaseNodeConnectionOutput() DatabaseNodeConnectionOutput {
	return i.ToDatabaseNodeConnectionOutputWithContext(context.Background())
}

func (i DatabaseNodeConnectionArgs) ToDatabaseNodeConnectionOutputWithContext(ctx context.Context) DatabaseNodeConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeConnectionOutput)
}

func (i DatabaseNodeConnectionArgs) ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput {
	return i.ToDatabaseNodeConnectionPtrOutputWithContext(context.Background())
}

func (i DatabaseNodeConnectionArgs) ToDatabaseNodeConnectionPtrOutputWithContext(ctx context.Context) DatabaseNodeConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeConnectionOutput).ToDatabaseNodeConnectionPtrOutputWithContext(ctx)
}

// DatabaseNodeConnectionPtrInput is an input type that accepts DatabaseNodeConnectionArgs, DatabaseNodeConnectionPtr and DatabaseNodeConnectionPtrOutput values.
// You can construct a concrete instance of `DatabaseNodeConnectionPtrInput` via:
//
//	        DatabaseNodeConnectionArgs{...}
//
//	or:
//
//	        nil
type DatabaseNodeConnectionPtrInput interface {
	pulumi.Input

	ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput
	ToDatabaseNodeConnectionPtrOutputWithContext(context.Context) DatabaseNodeConnectionPtrOutput
}

type databaseNodeConnectionPtrType DatabaseNodeConnectionArgs

func DatabaseNodeConnectionPtr(v *DatabaseNodeConnectionArgs) DatabaseNodeConnectionPtrInput {
	return (*databaseNodeConnectionPtrType)(v)
}

func (*databaseNodeConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeConnection)(nil)).Elem()
}

func (i *databaseNodeConnectionPtrType) ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput {
	return i.ToDatabaseNodeConnectionPtrOutputWithContext(context.Background())
}

func (i *databaseNodeConnectionPtrType) ToDatabaseNodeConnectionPtrOutputWithContext(ctx context.Context) DatabaseNodeConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeConnectionPtrOutput)
}

type DatabaseNodeConnectionOutput struct{ *pulumi.OutputState }

func (DatabaseNodeConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeConnection)(nil)).Elem()
}

func (o DatabaseNodeConnectionOutput) ToDatabaseNodeConnectionOutput() DatabaseNodeConnectionOutput {
	return o
}

func (o DatabaseNodeConnectionOutput) ToDatabaseNodeConnectionOutputWithContext(ctx context.Context) DatabaseNodeConnectionOutput {
	return o
}

func (o DatabaseNodeConnectionOutput) ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput {
	return o.ToDatabaseNodeConnectionPtrOutputWithContext(context.Background())
}

func (o DatabaseNodeConnectionOutput) ToDatabaseNodeConnectionPtrOutputWithContext(ctx context.Context) DatabaseNodeConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseNodeConnection) *DatabaseNodeConnection {
		return &v
	}).(DatabaseNodeConnectionPtrOutput)
}

// Database of the node
func (o DatabaseNodeConnectionOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.Database }).(pulumi.StringPtrOutput)
}

// Host of the node
func (o DatabaseNodeConnectionOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Password of the node
func (o DatabaseNodeConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port of the node
func (o DatabaseNodeConnectionOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Username of the node
func (o DatabaseNodeConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type DatabaseNodeConnectionPtrOutput struct{ *pulumi.OutputState }

func (DatabaseNodeConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeConnection)(nil)).Elem()
}

func (o DatabaseNodeConnectionPtrOutput) ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput {
	return o
}

func (o DatabaseNodeConnectionPtrOutput) ToDatabaseNodeConnectionPtrOutputWithContext(ctx context.Context) DatabaseNodeConnectionPtrOutput {
	return o
}

func (o DatabaseNodeConnectionPtrOutput) Elem() DatabaseNodeConnectionOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) DatabaseNodeConnection {
		if v != nil {
			return *v
		}
		var ret DatabaseNodeConnection
		return ret
	}).(DatabaseNodeConnectionOutput)
}

// Database of the node
func (o DatabaseNodeConnectionPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.Database
	}).(pulumi.StringPtrOutput)
}

// Host of the node
func (o DatabaseNodeConnectionPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Password of the node
func (o DatabaseNodeConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port of the node
func (o DatabaseNodeConnectionPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Username of the node
func (o DatabaseNodeConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type DatabaseNodeLocation struct {
	// Code of the location
	Code *string `pulumi:"code"`
	// Country of the location
	Country *string `pulumi:"country"`
	// Latitude of the location
	Latitude *float64 `pulumi:"latitude"`
	// Longitude of the location
	Longitude *float64 `pulumi:"longitude"`
	// Name of the location
	Name *string `pulumi:"name"`
	// Region of the location
	Region *string `pulumi:"region"`
}

// DatabaseNodeLocationInput is an input type that accepts DatabaseNodeLocationArgs and DatabaseNodeLocationOutput values.
// You can construct a concrete instance of `DatabaseNodeLocationInput` via:
//
//	DatabaseNodeLocationArgs{...}
type DatabaseNodeLocationInput interface {
	pulumi.Input

	ToDatabaseNodeLocationOutput() DatabaseNodeLocationOutput
	ToDatabaseNodeLocationOutputWithContext(context.Context) DatabaseNodeLocationOutput
}

type DatabaseNodeLocationArgs struct {
	// Code of the location
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Country of the location
	Country pulumi.StringPtrInput `pulumi:"country"`
	// Latitude of the location
	Latitude pulumi.Float64PtrInput `pulumi:"latitude"`
	// Longitude of the location
	Longitude pulumi.Float64PtrInput `pulumi:"longitude"`
	// Name of the location
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Region of the location
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (DatabaseNodeLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeLocation)(nil)).Elem()
}

func (i DatabaseNodeLocationArgs) ToDatabaseNodeLocationOutput() DatabaseNodeLocationOutput {
	return i.ToDatabaseNodeLocationOutputWithContext(context.Background())
}

func (i DatabaseNodeLocationArgs) ToDatabaseNodeLocationOutputWithContext(ctx context.Context) DatabaseNodeLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeLocationOutput)
}

func (i DatabaseNodeLocationArgs) ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput {
	return i.ToDatabaseNodeLocationPtrOutputWithContext(context.Background())
}

func (i DatabaseNodeLocationArgs) ToDatabaseNodeLocationPtrOutputWithContext(ctx context.Context) DatabaseNodeLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeLocationOutput).ToDatabaseNodeLocationPtrOutputWithContext(ctx)
}

// DatabaseNodeLocationPtrInput is an input type that accepts DatabaseNodeLocationArgs, DatabaseNodeLocationPtr and DatabaseNodeLocationPtrOutput values.
// You can construct a concrete instance of `DatabaseNodeLocationPtrInput` via:
//
//	        DatabaseNodeLocationArgs{...}
//
//	or:
//
//	        nil
type DatabaseNodeLocationPtrInput interface {
	pulumi.Input

	ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput
	ToDatabaseNodeLocationPtrOutputWithContext(context.Context) DatabaseNodeLocationPtrOutput
}

type databaseNodeLocationPtrType DatabaseNodeLocationArgs

func DatabaseNodeLocationPtr(v *DatabaseNodeLocationArgs) DatabaseNodeLocationPtrInput {
	return (*databaseNodeLocationPtrType)(v)
}

func (*databaseNodeLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeLocation)(nil)).Elem()
}

func (i *databaseNodeLocationPtrType) ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput {
	return i.ToDatabaseNodeLocationPtrOutputWithContext(context.Background())
}

func (i *databaseNodeLocationPtrType) ToDatabaseNodeLocationPtrOutputWithContext(ctx context.Context) DatabaseNodeLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeLocationPtrOutput)
}

type DatabaseNodeLocationOutput struct{ *pulumi.OutputState }

func (DatabaseNodeLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeLocation)(nil)).Elem()
}

func (o DatabaseNodeLocationOutput) ToDatabaseNodeLocationOutput() DatabaseNodeLocationOutput {
	return o
}

func (o DatabaseNodeLocationOutput) ToDatabaseNodeLocationOutputWithContext(ctx context.Context) DatabaseNodeLocationOutput {
	return o
}

func (o DatabaseNodeLocationOutput) ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput {
	return o.ToDatabaseNodeLocationPtrOutputWithContext(context.Background())
}

func (o DatabaseNodeLocationOutput) ToDatabaseNodeLocationPtrOutputWithContext(ctx context.Context) DatabaseNodeLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseNodeLocation) *DatabaseNodeLocation {
		return &v
	}).(DatabaseNodeLocationPtrOutput)
}

// Code of the location
func (o DatabaseNodeLocationOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Country of the location
func (o DatabaseNodeLocationOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// Latitude of the location
func (o DatabaseNodeLocationOutput) Latitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *float64 { return v.Latitude }).(pulumi.Float64PtrOutput)
}

// Longitude of the location
func (o DatabaseNodeLocationOutput) Longitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *float64 { return v.Longitude }).(pulumi.Float64PtrOutput)
}

// Name of the location
func (o DatabaseNodeLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Region of the location
func (o DatabaseNodeLocationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DatabaseNodeLocationPtrOutput struct{ *pulumi.OutputState }

func (DatabaseNodeLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeLocation)(nil)).Elem()
}

func (o DatabaseNodeLocationPtrOutput) ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput {
	return o
}

func (o DatabaseNodeLocationPtrOutput) ToDatabaseNodeLocationPtrOutputWithContext(ctx context.Context) DatabaseNodeLocationPtrOutput {
	return o
}

func (o DatabaseNodeLocationPtrOutput) Elem() DatabaseNodeLocationOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) DatabaseNodeLocation {
		if v != nil {
			return *v
		}
		var ret DatabaseNodeLocation
		return ret
	}).(DatabaseNodeLocationOutput)
}

// Code of the location
func (o DatabaseNodeLocationPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

// Country of the location
func (o DatabaseNodeLocationPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// Latitude of the location
func (o DatabaseNodeLocationPtrOutput) Latitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *float64 {
		if v == nil {
			return nil
		}
		return v.Latitude
	}).(pulumi.Float64PtrOutput)
}

// Longitude of the location
func (o DatabaseNodeLocationPtrOutput) Longitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *float64 {
		if v == nil {
			return nil
		}
		return v.Longitude
	}).(pulumi.Float64PtrOutput)
}

// Name of the location
func (o DatabaseNodeLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Region of the location
func (o DatabaseNodeLocationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

type GetClustersCluster struct {
	// Cloud account ID of the cluster
	CloudAccountId string `pulumi:"cloudAccountId"`
	// Created at of the cluster
	CreatedAt string                       `pulumi:"createdAt"`
	Firewalls []GetClustersClusterFirewall `pulumi:"firewalls"`
	// ID of the cluster
	Id string `pulumi:"id"`
	// Name of the cluster
	Name       string                       `pulumi:"name"`
	NodeGroups GetClustersClusterNodeGroups `pulumi:"nodeGroups"`
	// Status of the cluster
	Status string `pulumi:"status"`
}

// GetClustersClusterInput is an input type that accepts GetClustersClusterArgs and GetClustersClusterOutput values.
// You can construct a concrete instance of `GetClustersClusterInput` via:
//
//	GetClustersClusterArgs{...}
type GetClustersClusterInput interface {
	pulumi.Input

	ToGetClustersClusterOutput() GetClustersClusterOutput
	ToGetClustersClusterOutputWithContext(context.Context) GetClustersClusterOutput
}

type GetClustersClusterArgs struct {
	// Cloud account ID of the cluster
	CloudAccountId pulumi.StringInput `pulumi:"cloudAccountId"`
	// Created at of the cluster
	CreatedAt pulumi.StringInput                   `pulumi:"createdAt"`
	Firewalls GetClustersClusterFirewallArrayInput `pulumi:"firewalls"`
	// ID of the cluster
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the cluster
	Name       pulumi.StringInput                `pulumi:"name"`
	NodeGroups GetClustersClusterNodeGroupsInput `pulumi:"nodeGroups"`
	// Status of the cluster
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return i.ToGetClustersClusterOutputWithContext(context.Background())
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterOutput)
}

// GetClustersClusterArrayInput is an input type that accepts GetClustersClusterArray and GetClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterArrayInput` via:
//
//	GetClustersClusterArray{ GetClustersClusterArgs{...} }
type GetClustersClusterArrayInput interface {
	pulumi.Input

	ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput
	ToGetClustersClusterArrayOutputWithContext(context.Context) GetClustersClusterArrayOutput
}

type GetClustersClusterArray []GetClustersClusterInput

func (GetClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return i.ToGetClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterArrayOutput)
}

type GetClustersClusterOutput struct{ *pulumi.OutputState }

func (GetClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return o
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return o
}

// Cloud account ID of the cluster
func (o GetClustersClusterOutput) CloudAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CloudAccountId }).(pulumi.StringOutput)
}

// Created at of the cluster
func (o GetClustersClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) Firewalls() GetClustersClusterFirewallArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterFirewall { return v.Firewalls }).(GetClustersClusterFirewallArrayOutput)
}

// ID of the cluster
func (o GetClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the cluster
func (o GetClustersClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) NodeGroups() GetClustersClusterNodeGroupsOutput {
	return o.ApplyT(func(v GetClustersCluster) GetClustersClusterNodeGroups { return v.NodeGroups }).(GetClustersClusterNodeGroupsOutput)
}

// Status of the cluster
func (o GetClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

type GetClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) Index(i pulumi.IntInput) GetClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersCluster {
		return vs[0].([]GetClustersCluster)[vs[1].(int)]
	}).(GetClustersClusterOutput)
}

type GetClustersClusterFirewall struct {
	// Port for the firewall rule
	Port int `pulumi:"port"`
	// Sources for the firewall rule
	Sources []string `pulumi:"sources"`
	// Type of the firewall rule
	Type string `pulumi:"type"`
}

// GetClustersClusterFirewallInput is an input type that accepts GetClustersClusterFirewallArgs and GetClustersClusterFirewallOutput values.
// You can construct a concrete instance of `GetClustersClusterFirewallInput` via:
//
//	GetClustersClusterFirewallArgs{...}
type GetClustersClusterFirewallInput interface {
	pulumi.Input

	ToGetClustersClusterFirewallOutput() GetClustersClusterFirewallOutput
	ToGetClustersClusterFirewallOutputWithContext(context.Context) GetClustersClusterFirewallOutput
}

type GetClustersClusterFirewallArgs struct {
	// Port for the firewall rule
	Port pulumi.IntInput `pulumi:"port"`
	// Sources for the firewall rule
	Sources pulumi.StringArrayInput `pulumi:"sources"`
	// Type of the firewall rule
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClustersClusterFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterFirewall)(nil)).Elem()
}

func (i GetClustersClusterFirewallArgs) ToGetClustersClusterFirewallOutput() GetClustersClusterFirewallOutput {
	return i.ToGetClustersClusterFirewallOutputWithContext(context.Background())
}

func (i GetClustersClusterFirewallArgs) ToGetClustersClusterFirewallOutputWithContext(ctx context.Context) GetClustersClusterFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterFirewallOutput)
}

// GetClustersClusterFirewallArrayInput is an input type that accepts GetClustersClusterFirewallArray and GetClustersClusterFirewallArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterFirewallArrayInput` via:
//
//	GetClustersClusterFirewallArray{ GetClustersClusterFirewallArgs{...} }
type GetClustersClusterFirewallArrayInput interface {
	pulumi.Input

	ToGetClustersClusterFirewallArrayOutput() GetClustersClusterFirewallArrayOutput
	ToGetClustersClusterFirewallArrayOutputWithContext(context.Context) GetClustersClusterFirewallArrayOutput
}

type GetClustersClusterFirewallArray []GetClustersClusterFirewallInput

func (GetClustersClusterFirewallArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterFirewall)(nil)).Elem()
}

func (i GetClustersClusterFirewallArray) ToGetClustersClusterFirewallArrayOutput() GetClustersClusterFirewallArrayOutput {
	return i.ToGetClustersClusterFirewallArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterFirewallArray) ToGetClustersClusterFirewallArrayOutputWithContext(ctx context.Context) GetClustersClusterFirewallArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterFirewallArrayOutput)
}

type GetClustersClusterFirewallOutput struct{ *pulumi.OutputState }

func (GetClustersClusterFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterFirewall)(nil)).Elem()
}

func (o GetClustersClusterFirewallOutput) ToGetClustersClusterFirewallOutput() GetClustersClusterFirewallOutput {
	return o
}

func (o GetClustersClusterFirewallOutput) ToGetClustersClusterFirewallOutputWithContext(ctx context.Context) GetClustersClusterFirewallOutput {
	return o
}

// Port for the firewall rule
func (o GetClustersClusterFirewallOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterFirewall) int { return v.Port }).(pulumi.IntOutput)
}

// Sources for the firewall rule
func (o GetClustersClusterFirewallOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterFirewall) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

// Type of the firewall rule
func (o GetClustersClusterFirewallOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterFirewall) string { return v.Type }).(pulumi.StringOutput)
}

type GetClustersClusterFirewallArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterFirewallArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterFirewall)(nil)).Elem()
}

func (o GetClustersClusterFirewallArrayOutput) ToGetClustersClusterFirewallArrayOutput() GetClustersClusterFirewallArrayOutput {
	return o
}

func (o GetClustersClusterFirewallArrayOutput) ToGetClustersClusterFirewallArrayOutputWithContext(ctx context.Context) GetClustersClusterFirewallArrayOutput {
	return o
}

func (o GetClustersClusterFirewallArrayOutput) Index(i pulumi.IntInput) GetClustersClusterFirewallOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterFirewall {
		return vs[0].([]GetClustersClusterFirewall)[vs[1].(int)]
	}).(GetClustersClusterFirewallOutput)
}

type GetClustersClusterNodeGroups struct {
	Aws     []GetClustersClusterNodeGroupsAw     `pulumi:"aws"`
	Azures  []GetClustersClusterNodeGroupsAzure  `pulumi:"azures"`
	Googles []GetClustersClusterNodeGroupsGoogle `pulumi:"googles"`
}

// GetClustersClusterNodeGroupsInput is an input type that accepts GetClustersClusterNodeGroupsArgs and GetClustersClusterNodeGroupsOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsInput` via:
//
//	GetClustersClusterNodeGroupsArgs{...}
type GetClustersClusterNodeGroupsInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsOutput() GetClustersClusterNodeGroupsOutput
	ToGetClustersClusterNodeGroupsOutputWithContext(context.Context) GetClustersClusterNodeGroupsOutput
}

type GetClustersClusterNodeGroupsArgs struct {
	Aws     GetClustersClusterNodeGroupsAwArrayInput     `pulumi:"aws"`
	Azures  GetClustersClusterNodeGroupsAzureArrayInput  `pulumi:"azures"`
	Googles GetClustersClusterNodeGroupsGoogleArrayInput `pulumi:"googles"`
}

func (GetClustersClusterNodeGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroups)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsArgs) ToGetClustersClusterNodeGroupsOutput() GetClustersClusterNodeGroupsOutput {
	return i.ToGetClustersClusterNodeGroupsOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsArgs) ToGetClustersClusterNodeGroupsOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsOutput)
}

type GetClustersClusterNodeGroupsOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroups)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsOutput) ToGetClustersClusterNodeGroupsOutput() GetClustersClusterNodeGroupsOutput {
	return o
}

func (o GetClustersClusterNodeGroupsOutput) ToGetClustersClusterNodeGroupsOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsOutput {
	return o
}

func (o GetClustersClusterNodeGroupsOutput) Aws() GetClustersClusterNodeGroupsAwArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroups) []GetClustersClusterNodeGroupsAw { return v.Aws }).(GetClustersClusterNodeGroupsAwArrayOutput)
}

func (o GetClustersClusterNodeGroupsOutput) Azures() GetClustersClusterNodeGroupsAzureArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroups) []GetClustersClusterNodeGroupsAzure { return v.Azures }).(GetClustersClusterNodeGroupsAzureArrayOutput)
}

func (o GetClustersClusterNodeGroupsOutput) Googles() GetClustersClusterNodeGroupsGoogleArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroups) []GetClustersClusterNodeGroupsGoogle { return v.Googles }).(GetClustersClusterNodeGroupsGoogleArrayOutput)
}

type GetClustersClusterNodeGroupsAw struct {
	// Availability zones of the AWS node group
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr string `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType string `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   string                               `pulumi:"nodeLocation"`
	Nodes          []GetClustersClusterNodeGroupsAwNode `pulumi:"nodes"`
	PrivateSubnets []string                             `pulumi:"privateSubnets"`
	PublicSubnets  []string                             `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region string `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops int `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize int `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType string `pulumi:"volumeType"`
}

// GetClustersClusterNodeGroupsAwInput is an input type that accepts GetClustersClusterNodeGroupsAwArgs and GetClustersClusterNodeGroupsAwOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsAwInput` via:
//
//	GetClustersClusterNodeGroupsAwArgs{...}
type GetClustersClusterNodeGroupsAwInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsAwOutput() GetClustersClusterNodeGroupsAwOutput
	ToGetClustersClusterNodeGroupsAwOutputWithContext(context.Context) GetClustersClusterNodeGroupsAwOutput
}

type GetClustersClusterNodeGroupsAwArgs struct {
	// Availability zones of the AWS node group
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   pulumi.StringInput                           `pulumi:"nodeLocation"`
	Nodes          GetClustersClusterNodeGroupsAwNodeArrayInput `pulumi:"nodes"`
	PrivateSubnets pulumi.StringArrayInput                      `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput                      `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region pulumi.StringInput `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops pulumi.IntInput `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetClustersClusterNodeGroupsAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsAw)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsAwArgs) ToGetClustersClusterNodeGroupsAwOutput() GetClustersClusterNodeGroupsAwOutput {
	return i.ToGetClustersClusterNodeGroupsAwOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsAwArgs) ToGetClustersClusterNodeGroupsAwOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsAwOutput)
}

// GetClustersClusterNodeGroupsAwArrayInput is an input type that accepts GetClustersClusterNodeGroupsAwArray and GetClustersClusterNodeGroupsAwArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsAwArrayInput` via:
//
//	GetClustersClusterNodeGroupsAwArray{ GetClustersClusterNodeGroupsAwArgs{...} }
type GetClustersClusterNodeGroupsAwArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsAwArrayOutput() GetClustersClusterNodeGroupsAwArrayOutput
	ToGetClustersClusterNodeGroupsAwArrayOutputWithContext(context.Context) GetClustersClusterNodeGroupsAwArrayOutput
}

type GetClustersClusterNodeGroupsAwArray []GetClustersClusterNodeGroupsAwInput

func (GetClustersClusterNodeGroupsAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsAw)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsAwArray) ToGetClustersClusterNodeGroupsAwArrayOutput() GetClustersClusterNodeGroupsAwArrayOutput {
	return i.ToGetClustersClusterNodeGroupsAwArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsAwArray) ToGetClustersClusterNodeGroupsAwArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsAwArrayOutput)
}

type GetClustersClusterNodeGroupsAwOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsAw)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsAwOutput) ToGetClustersClusterNodeGroupsAwOutput() GetClustersClusterNodeGroupsAwOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAwOutput) ToGetClustersClusterNodeGroupsAwOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAwOutput {
	return o
}

// Availability zones of the AWS node group
func (o GetClustersClusterNodeGroupsAwOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// CIDR of the AWS node group
func (o GetClustersClusterNodeGroupsAwOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) string { return v.Cidr }).(pulumi.StringOutput)
}

// Instance type of the AWS node group
func (o GetClustersClusterNodeGroupsAwOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Node location of the AWS node group
func (o GetClustersClusterNodeGroupsAwOutput) NodeLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) string { return v.NodeLocation }).(pulumi.StringOutput)
}

func (o GetClustersClusterNodeGroupsAwOutput) Nodes() GetClustersClusterNodeGroupsAwNodeArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) []GetClustersClusterNodeGroupsAwNode { return v.Nodes }).(GetClustersClusterNodeGroupsAwNodeArrayOutput)
}

func (o GetClustersClusterNodeGroupsAwOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o GetClustersClusterNodeGroupsAwOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the AWS node group
func (o GetClustersClusterNodeGroupsAwOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) string { return v.Region }).(pulumi.StringOutput)
}

// Volume IOPS of the AWS node group
func (o GetClustersClusterNodeGroupsAwOutput) VolumeIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) int { return v.VolumeIops }).(pulumi.IntOutput)
}

// Volume size of the AWS node group
func (o GetClustersClusterNodeGroupsAwOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// Volume type of the AWS node group
func (o GetClustersClusterNodeGroupsAwOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAw) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetClustersClusterNodeGroupsAwArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsAw)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsAwArrayOutput) ToGetClustersClusterNodeGroupsAwArrayOutput() GetClustersClusterNodeGroupsAwArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAwArrayOutput) ToGetClustersClusterNodeGroupsAwArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAwArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAwArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNodeGroupsAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNodeGroupsAw {
		return vs[0].([]GetClustersClusterNodeGroupsAw)[vs[1].(int)]
	}).(GetClustersClusterNodeGroupsAwOutput)
}

type GetClustersClusterNodeGroupsAwNode struct {
	// Display name of the node
	DisplayName string `pulumi:"displayName"`
	// IP address of the node
	IpAddress string `pulumi:"ipAddress"`
	// Is the node active
	IsActive bool `pulumi:"isActive"`
}

// GetClustersClusterNodeGroupsAwNodeInput is an input type that accepts GetClustersClusterNodeGroupsAwNodeArgs and GetClustersClusterNodeGroupsAwNodeOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsAwNodeInput` via:
//
//	GetClustersClusterNodeGroupsAwNodeArgs{...}
type GetClustersClusterNodeGroupsAwNodeInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsAwNodeOutput() GetClustersClusterNodeGroupsAwNodeOutput
	ToGetClustersClusterNodeGroupsAwNodeOutputWithContext(context.Context) GetClustersClusterNodeGroupsAwNodeOutput
}

type GetClustersClusterNodeGroupsAwNodeArgs struct {
	// Display name of the node
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// IP address of the node
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Is the node active
	IsActive pulumi.BoolInput `pulumi:"isActive"`
}

func (GetClustersClusterNodeGroupsAwNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsAwNode)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsAwNodeArgs) ToGetClustersClusterNodeGroupsAwNodeOutput() GetClustersClusterNodeGroupsAwNodeOutput {
	return i.ToGetClustersClusterNodeGroupsAwNodeOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsAwNodeArgs) ToGetClustersClusterNodeGroupsAwNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAwNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsAwNodeOutput)
}

// GetClustersClusterNodeGroupsAwNodeArrayInput is an input type that accepts GetClustersClusterNodeGroupsAwNodeArray and GetClustersClusterNodeGroupsAwNodeArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsAwNodeArrayInput` via:
//
//	GetClustersClusterNodeGroupsAwNodeArray{ GetClustersClusterNodeGroupsAwNodeArgs{...} }
type GetClustersClusterNodeGroupsAwNodeArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsAwNodeArrayOutput() GetClustersClusterNodeGroupsAwNodeArrayOutput
	ToGetClustersClusterNodeGroupsAwNodeArrayOutputWithContext(context.Context) GetClustersClusterNodeGroupsAwNodeArrayOutput
}

type GetClustersClusterNodeGroupsAwNodeArray []GetClustersClusterNodeGroupsAwNodeInput

func (GetClustersClusterNodeGroupsAwNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsAwNode)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsAwNodeArray) ToGetClustersClusterNodeGroupsAwNodeArrayOutput() GetClustersClusterNodeGroupsAwNodeArrayOutput {
	return i.ToGetClustersClusterNodeGroupsAwNodeArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsAwNodeArray) ToGetClustersClusterNodeGroupsAwNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAwNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsAwNodeArrayOutput)
}

type GetClustersClusterNodeGroupsAwNodeOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsAwNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsAwNode)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsAwNodeOutput) ToGetClustersClusterNodeGroupsAwNodeOutput() GetClustersClusterNodeGroupsAwNodeOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAwNodeOutput) ToGetClustersClusterNodeGroupsAwNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAwNodeOutput {
	return o
}

// Display name of the node
func (o GetClustersClusterNodeGroupsAwNodeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAwNode) string { return v.DisplayName }).(pulumi.StringOutput)
}

// IP address of the node
func (o GetClustersClusterNodeGroupsAwNodeOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAwNode) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Is the node active
func (o GetClustersClusterNodeGroupsAwNodeOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAwNode) bool { return v.IsActive }).(pulumi.BoolOutput)
}

type GetClustersClusterNodeGroupsAwNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsAwNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsAwNode)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsAwNodeArrayOutput) ToGetClustersClusterNodeGroupsAwNodeArrayOutput() GetClustersClusterNodeGroupsAwNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAwNodeArrayOutput) ToGetClustersClusterNodeGroupsAwNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAwNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAwNodeArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNodeGroupsAwNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNodeGroupsAwNode {
		return vs[0].([]GetClustersClusterNodeGroupsAwNode)[vs[1].(int)]
	}).(GetClustersClusterNodeGroupsAwNodeOutput)
}

type GetClustersClusterNodeGroupsAzure struct {
	// Availability zones of the AWS node group
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr string `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType string `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   string                                  `pulumi:"nodeLocation"`
	Nodes          []GetClustersClusterNodeGroupsAzureNode `pulumi:"nodes"`
	PrivateSubnets []string                                `pulumi:"privateSubnets"`
	PublicSubnets  []string                                `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region string `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops int `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize int `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType string `pulumi:"volumeType"`
}

// GetClustersClusterNodeGroupsAzureInput is an input type that accepts GetClustersClusterNodeGroupsAzureArgs and GetClustersClusterNodeGroupsAzureOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsAzureInput` via:
//
//	GetClustersClusterNodeGroupsAzureArgs{...}
type GetClustersClusterNodeGroupsAzureInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsAzureOutput() GetClustersClusterNodeGroupsAzureOutput
	ToGetClustersClusterNodeGroupsAzureOutputWithContext(context.Context) GetClustersClusterNodeGroupsAzureOutput
}

type GetClustersClusterNodeGroupsAzureArgs struct {
	// Availability zones of the AWS node group
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   pulumi.StringInput                              `pulumi:"nodeLocation"`
	Nodes          GetClustersClusterNodeGroupsAzureNodeArrayInput `pulumi:"nodes"`
	PrivateSubnets pulumi.StringArrayInput                         `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput                         `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region pulumi.StringInput `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops pulumi.IntInput `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetClustersClusterNodeGroupsAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsAzure)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsAzureArgs) ToGetClustersClusterNodeGroupsAzureOutput() GetClustersClusterNodeGroupsAzureOutput {
	return i.ToGetClustersClusterNodeGroupsAzureOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsAzureArgs) ToGetClustersClusterNodeGroupsAzureOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsAzureOutput)
}

// GetClustersClusterNodeGroupsAzureArrayInput is an input type that accepts GetClustersClusterNodeGroupsAzureArray and GetClustersClusterNodeGroupsAzureArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsAzureArrayInput` via:
//
//	GetClustersClusterNodeGroupsAzureArray{ GetClustersClusterNodeGroupsAzureArgs{...} }
type GetClustersClusterNodeGroupsAzureArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsAzureArrayOutput() GetClustersClusterNodeGroupsAzureArrayOutput
	ToGetClustersClusterNodeGroupsAzureArrayOutputWithContext(context.Context) GetClustersClusterNodeGroupsAzureArrayOutput
}

type GetClustersClusterNodeGroupsAzureArray []GetClustersClusterNodeGroupsAzureInput

func (GetClustersClusterNodeGroupsAzureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsAzure)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsAzureArray) ToGetClustersClusterNodeGroupsAzureArrayOutput() GetClustersClusterNodeGroupsAzureArrayOutput {
	return i.ToGetClustersClusterNodeGroupsAzureArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsAzureArray) ToGetClustersClusterNodeGroupsAzureArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAzureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsAzureArrayOutput)
}

type GetClustersClusterNodeGroupsAzureOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsAzure)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsAzureOutput) ToGetClustersClusterNodeGroupsAzureOutput() GetClustersClusterNodeGroupsAzureOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAzureOutput) ToGetClustersClusterNodeGroupsAzureOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAzureOutput {
	return o
}

// Availability zones of the AWS node group
func (o GetClustersClusterNodeGroupsAzureOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// CIDR of the AWS node group
func (o GetClustersClusterNodeGroupsAzureOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) string { return v.Cidr }).(pulumi.StringOutput)
}

// Instance type of the AWS node group
func (o GetClustersClusterNodeGroupsAzureOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Node location of the AWS node group
func (o GetClustersClusterNodeGroupsAzureOutput) NodeLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) string { return v.NodeLocation }).(pulumi.StringOutput)
}

func (o GetClustersClusterNodeGroupsAzureOutput) Nodes() GetClustersClusterNodeGroupsAzureNodeArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) []GetClustersClusterNodeGroupsAzureNode { return v.Nodes }).(GetClustersClusterNodeGroupsAzureNodeArrayOutput)
}

func (o GetClustersClusterNodeGroupsAzureOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o GetClustersClusterNodeGroupsAzureOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the AWS node group
func (o GetClustersClusterNodeGroupsAzureOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) string { return v.Region }).(pulumi.StringOutput)
}

// Volume IOPS of the AWS node group
func (o GetClustersClusterNodeGroupsAzureOutput) VolumeIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) int { return v.VolumeIops }).(pulumi.IntOutput)
}

// Volume size of the AWS node group
func (o GetClustersClusterNodeGroupsAzureOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// Volume type of the AWS node group
func (o GetClustersClusterNodeGroupsAzureOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzure) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetClustersClusterNodeGroupsAzureArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsAzureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsAzure)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsAzureArrayOutput) ToGetClustersClusterNodeGroupsAzureArrayOutput() GetClustersClusterNodeGroupsAzureArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAzureArrayOutput) ToGetClustersClusterNodeGroupsAzureArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAzureArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAzureArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNodeGroupsAzureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNodeGroupsAzure {
		return vs[0].([]GetClustersClusterNodeGroupsAzure)[vs[1].(int)]
	}).(GetClustersClusterNodeGroupsAzureOutput)
}

type GetClustersClusterNodeGroupsAzureNode struct {
	// Display name of the node
	DisplayName string `pulumi:"displayName"`
	// IP address of the node
	IpAddress string `pulumi:"ipAddress"`
	// Is the node active
	IsActive bool `pulumi:"isActive"`
}

// GetClustersClusterNodeGroupsAzureNodeInput is an input type that accepts GetClustersClusterNodeGroupsAzureNodeArgs and GetClustersClusterNodeGroupsAzureNodeOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsAzureNodeInput` via:
//
//	GetClustersClusterNodeGroupsAzureNodeArgs{...}
type GetClustersClusterNodeGroupsAzureNodeInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsAzureNodeOutput() GetClustersClusterNodeGroupsAzureNodeOutput
	ToGetClustersClusterNodeGroupsAzureNodeOutputWithContext(context.Context) GetClustersClusterNodeGroupsAzureNodeOutput
}

type GetClustersClusterNodeGroupsAzureNodeArgs struct {
	// Display name of the node
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// IP address of the node
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Is the node active
	IsActive pulumi.BoolInput `pulumi:"isActive"`
}

func (GetClustersClusterNodeGroupsAzureNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsAzureNode)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsAzureNodeArgs) ToGetClustersClusterNodeGroupsAzureNodeOutput() GetClustersClusterNodeGroupsAzureNodeOutput {
	return i.ToGetClustersClusterNodeGroupsAzureNodeOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsAzureNodeArgs) ToGetClustersClusterNodeGroupsAzureNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAzureNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsAzureNodeOutput)
}

// GetClustersClusterNodeGroupsAzureNodeArrayInput is an input type that accepts GetClustersClusterNodeGroupsAzureNodeArray and GetClustersClusterNodeGroupsAzureNodeArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsAzureNodeArrayInput` via:
//
//	GetClustersClusterNodeGroupsAzureNodeArray{ GetClustersClusterNodeGroupsAzureNodeArgs{...} }
type GetClustersClusterNodeGroupsAzureNodeArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsAzureNodeArrayOutput() GetClustersClusterNodeGroupsAzureNodeArrayOutput
	ToGetClustersClusterNodeGroupsAzureNodeArrayOutputWithContext(context.Context) GetClustersClusterNodeGroupsAzureNodeArrayOutput
}

type GetClustersClusterNodeGroupsAzureNodeArray []GetClustersClusterNodeGroupsAzureNodeInput

func (GetClustersClusterNodeGroupsAzureNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsAzureNode)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsAzureNodeArray) ToGetClustersClusterNodeGroupsAzureNodeArrayOutput() GetClustersClusterNodeGroupsAzureNodeArrayOutput {
	return i.ToGetClustersClusterNodeGroupsAzureNodeArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsAzureNodeArray) ToGetClustersClusterNodeGroupsAzureNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAzureNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsAzureNodeArrayOutput)
}

type GetClustersClusterNodeGroupsAzureNodeOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsAzureNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsAzureNode)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsAzureNodeOutput) ToGetClustersClusterNodeGroupsAzureNodeOutput() GetClustersClusterNodeGroupsAzureNodeOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAzureNodeOutput) ToGetClustersClusterNodeGroupsAzureNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAzureNodeOutput {
	return o
}

// Display name of the node
func (o GetClustersClusterNodeGroupsAzureNodeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzureNode) string { return v.DisplayName }).(pulumi.StringOutput)
}

// IP address of the node
func (o GetClustersClusterNodeGroupsAzureNodeOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzureNode) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Is the node active
func (o GetClustersClusterNodeGroupsAzureNodeOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsAzureNode) bool { return v.IsActive }).(pulumi.BoolOutput)
}

type GetClustersClusterNodeGroupsAzureNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsAzureNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsAzureNode)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsAzureNodeArrayOutput) ToGetClustersClusterNodeGroupsAzureNodeArrayOutput() GetClustersClusterNodeGroupsAzureNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAzureNodeArrayOutput) ToGetClustersClusterNodeGroupsAzureNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsAzureNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsAzureNodeArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNodeGroupsAzureNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNodeGroupsAzureNode {
		return vs[0].([]GetClustersClusterNodeGroupsAzureNode)[vs[1].(int)]
	}).(GetClustersClusterNodeGroupsAzureNodeOutput)
}

type GetClustersClusterNodeGroupsGoogle struct {
	// Availability zones of the AWS node group
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr string `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType string `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   string                                   `pulumi:"nodeLocation"`
	Nodes          []GetClustersClusterNodeGroupsGoogleNode `pulumi:"nodes"`
	PrivateSubnets []string                                 `pulumi:"privateSubnets"`
	PublicSubnets  []string                                 `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region string `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops int `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize int `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType string `pulumi:"volumeType"`
}

// GetClustersClusterNodeGroupsGoogleInput is an input type that accepts GetClustersClusterNodeGroupsGoogleArgs and GetClustersClusterNodeGroupsGoogleOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsGoogleInput` via:
//
//	GetClustersClusterNodeGroupsGoogleArgs{...}
type GetClustersClusterNodeGroupsGoogleInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsGoogleOutput() GetClustersClusterNodeGroupsGoogleOutput
	ToGetClustersClusterNodeGroupsGoogleOutputWithContext(context.Context) GetClustersClusterNodeGroupsGoogleOutput
}

type GetClustersClusterNodeGroupsGoogleArgs struct {
	// Availability zones of the AWS node group
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// CIDR of the AWS node group
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Instance type of the AWS node group
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Node location of the AWS node group
	NodeLocation   pulumi.StringInput                               `pulumi:"nodeLocation"`
	Nodes          GetClustersClusterNodeGroupsGoogleNodeArrayInput `pulumi:"nodes"`
	PrivateSubnets pulumi.StringArrayInput                          `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput                          `pulumi:"publicSubnets"`
	// Region of the AWS node group
	Region pulumi.StringInput `pulumi:"region"`
	// Volume IOPS of the AWS node group
	VolumeIops pulumi.IntInput `pulumi:"volumeIops"`
	// Volume size of the AWS node group
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// Volume type of the AWS node group
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetClustersClusterNodeGroupsGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsGoogle)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsGoogleArgs) ToGetClustersClusterNodeGroupsGoogleOutput() GetClustersClusterNodeGroupsGoogleOutput {
	return i.ToGetClustersClusterNodeGroupsGoogleOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsGoogleArgs) ToGetClustersClusterNodeGroupsGoogleOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsGoogleOutput)
}

// GetClustersClusterNodeGroupsGoogleArrayInput is an input type that accepts GetClustersClusterNodeGroupsGoogleArray and GetClustersClusterNodeGroupsGoogleArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsGoogleArrayInput` via:
//
//	GetClustersClusterNodeGroupsGoogleArray{ GetClustersClusterNodeGroupsGoogleArgs{...} }
type GetClustersClusterNodeGroupsGoogleArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsGoogleArrayOutput() GetClustersClusterNodeGroupsGoogleArrayOutput
	ToGetClustersClusterNodeGroupsGoogleArrayOutputWithContext(context.Context) GetClustersClusterNodeGroupsGoogleArrayOutput
}

type GetClustersClusterNodeGroupsGoogleArray []GetClustersClusterNodeGroupsGoogleInput

func (GetClustersClusterNodeGroupsGoogleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsGoogle)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsGoogleArray) ToGetClustersClusterNodeGroupsGoogleArrayOutput() GetClustersClusterNodeGroupsGoogleArrayOutput {
	return i.ToGetClustersClusterNodeGroupsGoogleArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsGoogleArray) ToGetClustersClusterNodeGroupsGoogleArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsGoogleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsGoogleArrayOutput)
}

type GetClustersClusterNodeGroupsGoogleOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsGoogle)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsGoogleOutput) ToGetClustersClusterNodeGroupsGoogleOutput() GetClustersClusterNodeGroupsGoogleOutput {
	return o
}

func (o GetClustersClusterNodeGroupsGoogleOutput) ToGetClustersClusterNodeGroupsGoogleOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsGoogleOutput {
	return o
}

// Availability zones of the AWS node group
func (o GetClustersClusterNodeGroupsGoogleOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// CIDR of the AWS node group
func (o GetClustersClusterNodeGroupsGoogleOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) string { return v.Cidr }).(pulumi.StringOutput)
}

// Instance type of the AWS node group
func (o GetClustersClusterNodeGroupsGoogleOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Node location of the AWS node group
func (o GetClustersClusterNodeGroupsGoogleOutput) NodeLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) string { return v.NodeLocation }).(pulumi.StringOutput)
}

func (o GetClustersClusterNodeGroupsGoogleOutput) Nodes() GetClustersClusterNodeGroupsGoogleNodeArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) []GetClustersClusterNodeGroupsGoogleNode { return v.Nodes }).(GetClustersClusterNodeGroupsGoogleNodeArrayOutput)
}

func (o GetClustersClusterNodeGroupsGoogleOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o GetClustersClusterNodeGroupsGoogleOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the AWS node group
func (o GetClustersClusterNodeGroupsGoogleOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) string { return v.Region }).(pulumi.StringOutput)
}

// Volume IOPS of the AWS node group
func (o GetClustersClusterNodeGroupsGoogleOutput) VolumeIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) int { return v.VolumeIops }).(pulumi.IntOutput)
}

// Volume size of the AWS node group
func (o GetClustersClusterNodeGroupsGoogleOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// Volume type of the AWS node group
func (o GetClustersClusterNodeGroupsGoogleOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogle) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetClustersClusterNodeGroupsGoogleArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsGoogleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsGoogle)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsGoogleArrayOutput) ToGetClustersClusterNodeGroupsGoogleArrayOutput() GetClustersClusterNodeGroupsGoogleArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsGoogleArrayOutput) ToGetClustersClusterNodeGroupsGoogleArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsGoogleArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsGoogleArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNodeGroupsGoogleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNodeGroupsGoogle {
		return vs[0].([]GetClustersClusterNodeGroupsGoogle)[vs[1].(int)]
	}).(GetClustersClusterNodeGroupsGoogleOutput)
}

type GetClustersClusterNodeGroupsGoogleNode struct {
	// Display name of the node
	DisplayName string `pulumi:"displayName"`
	// IP address of the node
	IpAddress string `pulumi:"ipAddress"`
	// Is the node active
	IsActive bool `pulumi:"isActive"`
}

// GetClustersClusterNodeGroupsGoogleNodeInput is an input type that accepts GetClustersClusterNodeGroupsGoogleNodeArgs and GetClustersClusterNodeGroupsGoogleNodeOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsGoogleNodeInput` via:
//
//	GetClustersClusterNodeGroupsGoogleNodeArgs{...}
type GetClustersClusterNodeGroupsGoogleNodeInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsGoogleNodeOutput() GetClustersClusterNodeGroupsGoogleNodeOutput
	ToGetClustersClusterNodeGroupsGoogleNodeOutputWithContext(context.Context) GetClustersClusterNodeGroupsGoogleNodeOutput
}

type GetClustersClusterNodeGroupsGoogleNodeArgs struct {
	// Display name of the node
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// IP address of the node
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Is the node active
	IsActive pulumi.BoolInput `pulumi:"isActive"`
}

func (GetClustersClusterNodeGroupsGoogleNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsGoogleNode)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsGoogleNodeArgs) ToGetClustersClusterNodeGroupsGoogleNodeOutput() GetClustersClusterNodeGroupsGoogleNodeOutput {
	return i.ToGetClustersClusterNodeGroupsGoogleNodeOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsGoogleNodeArgs) ToGetClustersClusterNodeGroupsGoogleNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsGoogleNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsGoogleNodeOutput)
}

// GetClustersClusterNodeGroupsGoogleNodeArrayInput is an input type that accepts GetClustersClusterNodeGroupsGoogleNodeArray and GetClustersClusterNodeGroupsGoogleNodeArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeGroupsGoogleNodeArrayInput` via:
//
//	GetClustersClusterNodeGroupsGoogleNodeArray{ GetClustersClusterNodeGroupsGoogleNodeArgs{...} }
type GetClustersClusterNodeGroupsGoogleNodeArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNodeGroupsGoogleNodeArrayOutput() GetClustersClusterNodeGroupsGoogleNodeArrayOutput
	ToGetClustersClusterNodeGroupsGoogleNodeArrayOutputWithContext(context.Context) GetClustersClusterNodeGroupsGoogleNodeArrayOutput
}

type GetClustersClusterNodeGroupsGoogleNodeArray []GetClustersClusterNodeGroupsGoogleNodeInput

func (GetClustersClusterNodeGroupsGoogleNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsGoogleNode)(nil)).Elem()
}

func (i GetClustersClusterNodeGroupsGoogleNodeArray) ToGetClustersClusterNodeGroupsGoogleNodeArrayOutput() GetClustersClusterNodeGroupsGoogleNodeArrayOutput {
	return i.ToGetClustersClusterNodeGroupsGoogleNodeArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeGroupsGoogleNodeArray) ToGetClustersClusterNodeGroupsGoogleNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsGoogleNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeGroupsGoogleNodeArrayOutput)
}

type GetClustersClusterNodeGroupsGoogleNodeOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsGoogleNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNodeGroupsGoogleNode)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsGoogleNodeOutput) ToGetClustersClusterNodeGroupsGoogleNodeOutput() GetClustersClusterNodeGroupsGoogleNodeOutput {
	return o
}

func (o GetClustersClusterNodeGroupsGoogleNodeOutput) ToGetClustersClusterNodeGroupsGoogleNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsGoogleNodeOutput {
	return o
}

// Display name of the node
func (o GetClustersClusterNodeGroupsGoogleNodeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogleNode) string { return v.DisplayName }).(pulumi.StringOutput)
}

// IP address of the node
func (o GetClustersClusterNodeGroupsGoogleNodeOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogleNode) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Is the node active
func (o GetClustersClusterNodeGroupsGoogleNodeOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersClusterNodeGroupsGoogleNode) bool { return v.IsActive }).(pulumi.BoolOutput)
}

type GetClustersClusterNodeGroupsGoogleNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeGroupsGoogleNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNodeGroupsGoogleNode)(nil)).Elem()
}

func (o GetClustersClusterNodeGroupsGoogleNodeArrayOutput) ToGetClustersClusterNodeGroupsGoogleNodeArrayOutput() GetClustersClusterNodeGroupsGoogleNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsGoogleNodeArrayOutput) ToGetClustersClusterNodeGroupsGoogleNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeGroupsGoogleNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeGroupsGoogleNodeArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNodeGroupsGoogleNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNodeGroupsGoogleNode {
		return vs[0].([]GetClustersClusterNodeGroupsGoogleNode)[vs[1].(int)]
	}).(GetClustersClusterNodeGroupsGoogleNodeOutput)
}

type GetDatabasesDatabase struct {
	// Updated at of the database
	ClusterId string `pulumi:"clusterId"`
	// Created at of the database
	CreatedAt string `pulumi:"createdAt"`
	// Domain of the database
	Domain string `pulumi:"domain"`
	// ID of the database
	Id string `pulumi:"id"`
	// Name of the database
	Name  string                     `pulumi:"name"`
	Nodes []GetDatabasesDatabaseNode `pulumi:"nodes"`
	// Options for creating the database
	Options []string `pulumi:"options"`
	// Status of the database
	Status string `pulumi:"status"`
	// Updated at of the database
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetDatabasesDatabaseInput is an input type that accepts GetDatabasesDatabaseArgs and GetDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseInput` via:
//
//	GetDatabasesDatabaseArgs{...}
type GetDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput
	ToGetDatabasesDatabaseOutputWithContext(context.Context) GetDatabasesDatabaseOutput
}

type GetDatabasesDatabaseArgs struct {
	// Updated at of the database
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Created at of the database
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Domain of the database
	Domain pulumi.StringInput `pulumi:"domain"`
	// ID of the database
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the database
	Name  pulumi.StringInput                 `pulumi:"name"`
	Nodes GetDatabasesDatabaseNodeArrayInput `pulumi:"nodes"`
	// Options for creating the database
	Options pulumi.StringArrayInput `pulumi:"options"`
	// Status of the database
	Status pulumi.StringInput `pulumi:"status"`
	// Updated at of the database
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return i.ToGetDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseOutput)
}

// GetDatabasesDatabaseArrayInput is an input type that accepts GetDatabasesDatabaseArray and GetDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseArrayInput` via:
//
//	GetDatabasesDatabaseArray{ GetDatabasesDatabaseArgs{...} }
type GetDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput
	ToGetDatabasesDatabaseArrayOutputWithContext(context.Context) GetDatabasesDatabaseArrayOutput
}

type GetDatabasesDatabaseArray []GetDatabasesDatabaseInput

func (GetDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return i.ToGetDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseArrayOutput)
}

type GetDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return o
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return o
}

// Updated at of the database
func (o GetDatabasesDatabaseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Created at of the database
func (o GetDatabasesDatabaseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Domain of the database
func (o GetDatabasesDatabaseOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Domain }).(pulumi.StringOutput)
}

// ID of the database
func (o GetDatabasesDatabaseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the database
func (o GetDatabasesDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseOutput) Nodes() GetDatabasesDatabaseNodeArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseNode { return v.Nodes }).(GetDatabasesDatabaseNodeArrayOutput)
}

// Options for creating the database
func (o GetDatabasesDatabaseOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []string { return v.Options }).(pulumi.StringArrayOutput)
}

// Status of the database
func (o GetDatabasesDatabaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Status }).(pulumi.StringOutput)
}

// Updated at of the database
func (o GetDatabasesDatabaseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabase {
		return vs[0].([]GetDatabasesDatabase)[vs[1].(int)]
	}).(GetDatabasesDatabaseOutput)
}

type GetDatabasesDatabaseNode struct {
	Connection GetDatabasesDatabaseNodeConnection `pulumi:"connection"`
	Location   GetDatabasesDatabaseNodeLocation   `pulumi:"location"`
	// Name of the database
	Name string `pulumi:"name"`
}

// GetDatabasesDatabaseNodeInput is an input type that accepts GetDatabasesDatabaseNodeArgs and GetDatabasesDatabaseNodeOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeInput` via:
//
//	GetDatabasesDatabaseNodeArgs{...}
type GetDatabasesDatabaseNodeInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput
	ToGetDatabasesDatabaseNodeOutputWithContext(context.Context) GetDatabasesDatabaseNodeOutput
}

type GetDatabasesDatabaseNodeArgs struct {
	Connection GetDatabasesDatabaseNodeConnectionInput `pulumi:"connection"`
	Location   GetDatabasesDatabaseNodeLocationInput   `pulumi:"location"`
	// Name of the database
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDatabasesDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNode)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeArgs) ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput {
	return i.ToGetDatabasesDatabaseNodeOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeArgs) ToGetDatabasesDatabaseNodeOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeOutput)
}

// GetDatabasesDatabaseNodeArrayInput is an input type that accepts GetDatabasesDatabaseNodeArray and GetDatabasesDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeArrayInput` via:
//
//	GetDatabasesDatabaseNodeArray{ GetDatabasesDatabaseNodeArgs{...} }
type GetDatabasesDatabaseNodeArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput
	ToGetDatabasesDatabaseNodeArrayOutputWithContext(context.Context) GetDatabasesDatabaseNodeArrayOutput
}

type GetDatabasesDatabaseNodeArray []GetDatabasesDatabaseNodeInput

func (GetDatabasesDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseNode)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeArray) ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput {
	return i.ToGetDatabasesDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeArray) ToGetDatabasesDatabaseNodeArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeArrayOutput)
}

type GetDatabasesDatabaseNodeOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNode)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeOutput) ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput {
	return o
}

func (o GetDatabasesDatabaseNodeOutput) ToGetDatabasesDatabaseNodeOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeOutput {
	return o
}

func (o GetDatabasesDatabaseNodeOutput) Connection() GetDatabasesDatabaseNodeConnectionOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeConnection { return v.Connection }).(GetDatabasesDatabaseNodeConnectionOutput)
}

func (o GetDatabasesDatabaseNodeOutput) Location() GetDatabasesDatabaseNodeLocationOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeLocation { return v.Location }).(GetDatabasesDatabaseNodeLocationOutput)
}

// Name of the database
func (o GetDatabasesDatabaseNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) string { return v.Name }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseNode)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeArrayOutput) ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput {
	return o
}

func (o GetDatabasesDatabaseNodeArrayOutput) ToGetDatabasesDatabaseNodeArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeArrayOutput {
	return o
}

func (o GetDatabasesDatabaseNodeArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseNode {
		return vs[0].([]GetDatabasesDatabaseNode)[vs[1].(int)]
	}).(GetDatabasesDatabaseNodeOutput)
}

type GetDatabasesDatabaseNodeConnection struct {
	// Database of the node
	Database string `pulumi:"database"`
	// Host of the node
	Host string `pulumi:"host"`
	// Password of the node
	Password string `pulumi:"password"`
	// Port of the node
	Port int `pulumi:"port"`
	// Username of the node
	Username string `pulumi:"username"`
}

// GetDatabasesDatabaseNodeConnectionInput is an input type that accepts GetDatabasesDatabaseNodeConnectionArgs and GetDatabasesDatabaseNodeConnectionOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeConnectionInput` via:
//
//	GetDatabasesDatabaseNodeConnectionArgs{...}
type GetDatabasesDatabaseNodeConnectionInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput
	ToGetDatabasesDatabaseNodeConnectionOutputWithContext(context.Context) GetDatabasesDatabaseNodeConnectionOutput
}

type GetDatabasesDatabaseNodeConnectionArgs struct {
	// Database of the node
	Database pulumi.StringInput `pulumi:"database"`
	// Host of the node
	Host pulumi.StringInput `pulumi:"host"`
	// Password of the node
	Password pulumi.StringInput `pulumi:"password"`
	// Port of the node
	Port pulumi.IntInput `pulumi:"port"`
	// Username of the node
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetDatabasesDatabaseNodeConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeConnection)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeConnectionArgs) ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput {
	return i.ToGetDatabasesDatabaseNodeConnectionOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeConnectionArgs) ToGetDatabasesDatabaseNodeConnectionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeConnectionOutput)
}

type GetDatabasesDatabaseNodeConnectionOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeConnection)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeConnectionOutput) ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput {
	return o
}

func (o GetDatabasesDatabaseNodeConnectionOutput) ToGetDatabasesDatabaseNodeConnectionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeConnectionOutput {
	return o
}

// Database of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Database }).(pulumi.StringOutput)
}

// Host of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Host }).(pulumi.StringOutput)
}

// Password of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) int { return v.Port }).(pulumi.IntOutput)
}

// Username of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Username }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseNodeLocation struct {
	// Code of the location
	Code string `pulumi:"code"`
	// Country of the location
	Country string `pulumi:"country"`
	// Latitude of the location
	Latitude float64 `pulumi:"latitude"`
	// Longitude of the location
	Longitude float64 `pulumi:"longitude"`
	// Name of the database
	Name string `pulumi:"name"`
	// Region of the location
	Region string `pulumi:"region"`
}

// GetDatabasesDatabaseNodeLocationInput is an input type that accepts GetDatabasesDatabaseNodeLocationArgs and GetDatabasesDatabaseNodeLocationOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeLocationInput` via:
//
//	GetDatabasesDatabaseNodeLocationArgs{...}
type GetDatabasesDatabaseNodeLocationInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput
	ToGetDatabasesDatabaseNodeLocationOutputWithContext(context.Context) GetDatabasesDatabaseNodeLocationOutput
}

type GetDatabasesDatabaseNodeLocationArgs struct {
	// Code of the location
	Code pulumi.StringInput `pulumi:"code"`
	// Country of the location
	Country pulumi.StringInput `pulumi:"country"`
	// Latitude of the location
	Latitude pulumi.Float64Input `pulumi:"latitude"`
	// Longitude of the location
	Longitude pulumi.Float64Input `pulumi:"longitude"`
	// Name of the database
	Name pulumi.StringInput `pulumi:"name"`
	// Region of the location
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetDatabasesDatabaseNodeLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeLocation)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeLocationArgs) ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput {
	return i.ToGetDatabasesDatabaseNodeLocationOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeLocationArgs) ToGetDatabasesDatabaseNodeLocationOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeLocationOutput)
}

type GetDatabasesDatabaseNodeLocationOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeLocation)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeLocationOutput) ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput {
	return o
}

func (o GetDatabasesDatabaseNodeLocationOutput) ToGetDatabasesDatabaseNodeLocationOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeLocationOutput {
	return o
}

// Code of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Code }).(pulumi.StringOutput)
}

// Country of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Country }).(pulumi.StringOutput)
}

// Latitude of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// Longitude of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) float64 { return v.Longitude }).(pulumi.Float64Output)
}

// Name of the database
func (o GetDatabasesDatabaseNodeLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Name }).(pulumi.StringOutput)
}

// Region of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFirewallInput)(nil)).Elem(), ClusterFirewallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFirewallArrayInput)(nil)).Elem(), ClusterFirewallArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsInput)(nil)).Elem(), ClusterNodeGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsPtrInput)(nil)).Elem(), ClusterNodeGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsAwInput)(nil)).Elem(), ClusterNodeGroupsAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsAwArrayInput)(nil)).Elem(), ClusterNodeGroupsAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsAwNodeInput)(nil)).Elem(), ClusterNodeGroupsAwNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsAwNodeArrayInput)(nil)).Elem(), ClusterNodeGroupsAwNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsAzureInput)(nil)).Elem(), ClusterNodeGroupsAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsAzureArrayInput)(nil)).Elem(), ClusterNodeGroupsAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsAzureNodeInput)(nil)).Elem(), ClusterNodeGroupsAzureNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsAzureNodeArrayInput)(nil)).Elem(), ClusterNodeGroupsAzureNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsGoogleInput)(nil)).Elem(), ClusterNodeGroupsGoogleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsGoogleArrayInput)(nil)).Elem(), ClusterNodeGroupsGoogleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsGoogleNodeInput)(nil)).Elem(), ClusterNodeGroupsGoogleNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeGroupsGoogleNodeArrayInput)(nil)).Elem(), ClusterNodeGroupsGoogleNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeInput)(nil)).Elem(), DatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeArrayInput)(nil)).Elem(), DatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeConnectionInput)(nil)).Elem(), DatabaseNodeConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeConnectionPtrInput)(nil)).Elem(), DatabaseNodeConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeLocationInput)(nil)).Elem(), DatabaseNodeLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeLocationPtrInput)(nil)).Elem(), DatabaseNodeLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterInput)(nil)).Elem(), GetClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterArrayInput)(nil)).Elem(), GetClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterFirewallInput)(nil)).Elem(), GetClustersClusterFirewallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterFirewallArrayInput)(nil)).Elem(), GetClustersClusterFirewallArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsInput)(nil)).Elem(), GetClustersClusterNodeGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsAwInput)(nil)).Elem(), GetClustersClusterNodeGroupsAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsAwArrayInput)(nil)).Elem(), GetClustersClusterNodeGroupsAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsAwNodeInput)(nil)).Elem(), GetClustersClusterNodeGroupsAwNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsAwNodeArrayInput)(nil)).Elem(), GetClustersClusterNodeGroupsAwNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsAzureInput)(nil)).Elem(), GetClustersClusterNodeGroupsAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsAzureArrayInput)(nil)).Elem(), GetClustersClusterNodeGroupsAzureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsAzureNodeInput)(nil)).Elem(), GetClustersClusterNodeGroupsAzureNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsAzureNodeArrayInput)(nil)).Elem(), GetClustersClusterNodeGroupsAzureNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsGoogleInput)(nil)).Elem(), GetClustersClusterNodeGroupsGoogleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsGoogleArrayInput)(nil)).Elem(), GetClustersClusterNodeGroupsGoogleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsGoogleNodeInput)(nil)).Elem(), GetClustersClusterNodeGroupsGoogleNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeGroupsGoogleNodeArrayInput)(nil)).Elem(), GetClustersClusterNodeGroupsGoogleNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseInput)(nil)).Elem(), GetDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseArrayInput)(nil)).Elem(), GetDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeInput)(nil)).Elem(), GetDatabasesDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeArrayInput)(nil)).Elem(), GetDatabasesDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeConnectionInput)(nil)).Elem(), GetDatabasesDatabaseNodeConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeLocationInput)(nil)).Elem(), GetDatabasesDatabaseNodeLocationArgs{})
	pulumi.RegisterOutputType(ClusterFirewallOutput{})
	pulumi.RegisterOutputType(ClusterFirewallArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsAwOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsAwArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsAwNodeOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsAwNodeArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsAzureOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsAzureArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsAzureNodeOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsAzureNodeArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsGoogleOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsGoogleArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsGoogleNodeOutput{})
	pulumi.RegisterOutputType(ClusterNodeGroupsGoogleNodeArrayOutput{})
	pulumi.RegisterOutputType(DatabaseNodeOutput{})
	pulumi.RegisterOutputType(DatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(DatabaseNodeConnectionOutput{})
	pulumi.RegisterOutputType(DatabaseNodeConnectionPtrOutput{})
	pulumi.RegisterOutputType(DatabaseNodeLocationOutput{})
	pulumi.RegisterOutputType(DatabaseNodeLocationPtrOutput{})
	pulumi.RegisterOutputType(GetClustersClusterOutput{})
	pulumi.RegisterOutputType(GetClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterFirewallOutput{})
	pulumi.RegisterOutputType(GetClustersClusterFirewallArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsAwOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsAwArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsAwNodeOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsAwNodeArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsAzureOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsAzureArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsAzureNodeOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsAzureNodeArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsGoogleOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsGoogleArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsGoogleNodeOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeGroupsGoogleNodeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeConnectionOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeLocationOutput{})
}
