// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pgedge

import (
	"context"
	"reflect"

	"github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterFirewallRule struct {
	// Port whose traffic is allowed
	Port int `pulumi:"port"`
	// CIDRs and/or IP addresses allowed
	Sources []string `pulumi:"sources"`
}

// ClusterFirewallRuleInput is an input type that accepts ClusterFirewallRuleArgs and ClusterFirewallRuleOutput values.
// You can construct a concrete instance of `ClusterFirewallRuleInput` via:
//
//	ClusterFirewallRuleArgs{...}
type ClusterFirewallRuleInput interface {
	pulumi.Input

	ToClusterFirewallRuleOutput() ClusterFirewallRuleOutput
	ToClusterFirewallRuleOutputWithContext(context.Context) ClusterFirewallRuleOutput
}

type ClusterFirewallRuleArgs struct {
	// Port whose traffic is allowed
	Port pulumi.IntInput `pulumi:"port"`
	// CIDRs and/or IP addresses allowed
	Sources pulumi.StringArrayInput `pulumi:"sources"`
}

func (ClusterFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFirewallRule)(nil)).Elem()
}

func (i ClusterFirewallRuleArgs) ToClusterFirewallRuleOutput() ClusterFirewallRuleOutput {
	return i.ToClusterFirewallRuleOutputWithContext(context.Background())
}

func (i ClusterFirewallRuleArgs) ToClusterFirewallRuleOutputWithContext(ctx context.Context) ClusterFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirewallRuleOutput)
}

// ClusterFirewallRuleArrayInput is an input type that accepts ClusterFirewallRuleArray and ClusterFirewallRuleArrayOutput values.
// You can construct a concrete instance of `ClusterFirewallRuleArrayInput` via:
//
//	ClusterFirewallRuleArray{ ClusterFirewallRuleArgs{...} }
type ClusterFirewallRuleArrayInput interface {
	pulumi.Input

	ToClusterFirewallRuleArrayOutput() ClusterFirewallRuleArrayOutput
	ToClusterFirewallRuleArrayOutputWithContext(context.Context) ClusterFirewallRuleArrayOutput
}

type ClusterFirewallRuleArray []ClusterFirewallRuleInput

func (ClusterFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFirewallRule)(nil)).Elem()
}

func (i ClusterFirewallRuleArray) ToClusterFirewallRuleArrayOutput() ClusterFirewallRuleArrayOutput {
	return i.ToClusterFirewallRuleArrayOutputWithContext(context.Background())
}

func (i ClusterFirewallRuleArray) ToClusterFirewallRuleArrayOutputWithContext(ctx context.Context) ClusterFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirewallRuleArrayOutput)
}

type ClusterFirewallRuleOutput struct{ *pulumi.OutputState }

func (ClusterFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFirewallRule)(nil)).Elem()
}

func (o ClusterFirewallRuleOutput) ToClusterFirewallRuleOutput() ClusterFirewallRuleOutput {
	return o
}

func (o ClusterFirewallRuleOutput) ToClusterFirewallRuleOutputWithContext(ctx context.Context) ClusterFirewallRuleOutput {
	return o
}

// Port whose traffic is allowed
func (o ClusterFirewallRuleOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterFirewallRule) int { return v.Port }).(pulumi.IntOutput)
}

// CIDRs and/or IP addresses allowed
func (o ClusterFirewallRuleOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFirewallRule) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

type ClusterFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (ClusterFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFirewallRule)(nil)).Elem()
}

func (o ClusterFirewallRuleArrayOutput) ToClusterFirewallRuleArrayOutput() ClusterFirewallRuleArrayOutput {
	return o
}

func (o ClusterFirewallRuleArrayOutput) ToClusterFirewallRuleArrayOutputWithContext(ctx context.Context) ClusterFirewallRuleArrayOutput {
	return o
}

func (o ClusterFirewallRuleArrayOutput) Index(i pulumi.IntInput) ClusterFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterFirewallRule {
		return vs[0].([]ClusterFirewallRule)[vs[1].(int)]
	}).(ClusterFirewallRuleOutput)
}

type ClusterNetwork struct {
	// CIDR range for the network
	Cidr *string `pulumi:"cidr"`
	// Is the network externally defined
	External *bool `pulumi:"external"`
	// ID of the network, if externally defined
	ExternalId *string `pulumi:"externalId"`
	// Name of the network
	Name           *string  `pulumi:"name"`
	PrivateSubnets []string `pulumi:"privateSubnets"`
	PublicSubnets  []string `pulumi:"publicSubnets"`
	// Region of the network
	Region string `pulumi:"region"`
}

// ClusterNetworkInput is an input type that accepts ClusterNetworkArgs and ClusterNetworkOutput values.
// You can construct a concrete instance of `ClusterNetworkInput` via:
//
//	ClusterNetworkArgs{...}
type ClusterNetworkInput interface {
	pulumi.Input

	ToClusterNetworkOutput() ClusterNetworkOutput
	ToClusterNetworkOutputWithContext(context.Context) ClusterNetworkOutput
}

type ClusterNetworkArgs struct {
	// CIDR range for the network
	Cidr pulumi.StringPtrInput `pulumi:"cidr"`
	// Is the network externally defined
	External pulumi.BoolPtrInput `pulumi:"external"`
	// ID of the network, if externally defined
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// Name of the network
	Name           pulumi.StringPtrInput   `pulumi:"name"`
	PrivateSubnets pulumi.StringArrayInput `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput `pulumi:"publicSubnets"`
	// Region of the network
	Region pulumi.StringInput `pulumi:"region"`
}

func (ClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetwork)(nil)).Elem()
}

func (i ClusterNetworkArgs) ToClusterNetworkOutput() ClusterNetworkOutput {
	return i.ToClusterNetworkOutputWithContext(context.Background())
}

func (i ClusterNetworkArgs) ToClusterNetworkOutputWithContext(ctx context.Context) ClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkOutput)
}

// ClusterNetworkArrayInput is an input type that accepts ClusterNetworkArray and ClusterNetworkArrayOutput values.
// You can construct a concrete instance of `ClusterNetworkArrayInput` via:
//
//	ClusterNetworkArray{ ClusterNetworkArgs{...} }
type ClusterNetworkArrayInput interface {
	pulumi.Input

	ToClusterNetworkArrayOutput() ClusterNetworkArrayOutput
	ToClusterNetworkArrayOutputWithContext(context.Context) ClusterNetworkArrayOutput
}

type ClusterNetworkArray []ClusterNetworkInput

func (ClusterNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNetwork)(nil)).Elem()
}

func (i ClusterNetworkArray) ToClusterNetworkArrayOutput() ClusterNetworkArrayOutput {
	return i.ToClusterNetworkArrayOutputWithContext(context.Background())
}

func (i ClusterNetworkArray) ToClusterNetworkArrayOutputWithContext(ctx context.Context) ClusterNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkArrayOutput)
}

type ClusterNetworkOutput struct{ *pulumi.OutputState }

func (ClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetwork)(nil)).Elem()
}

func (o ClusterNetworkOutput) ToClusterNetworkOutput() ClusterNetworkOutput {
	return o
}

func (o ClusterNetworkOutput) ToClusterNetworkOutputWithContext(ctx context.Context) ClusterNetworkOutput {
	return o
}

// CIDR range for the network
func (o ClusterNetworkOutput) Cidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.Cidr }).(pulumi.StringPtrOutput)
}

// Is the network externally defined
func (o ClusterNetworkOutput) External() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *bool { return v.External }).(pulumi.BoolPtrOutput)
}

// ID of the network, if externally defined
func (o ClusterNetworkOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Name of the network
func (o ClusterNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterNetworkOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetwork) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o ClusterNetworkOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetwork) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the network
func (o ClusterNetworkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetwork) string { return v.Region }).(pulumi.StringOutput)
}

type ClusterNetworkArrayOutput struct{ *pulumi.OutputState }

func (ClusterNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNetwork)(nil)).Elem()
}

func (o ClusterNetworkArrayOutput) ToClusterNetworkArrayOutput() ClusterNetworkArrayOutput {
	return o
}

func (o ClusterNetworkArrayOutput) ToClusterNetworkArrayOutputWithContext(ctx context.Context) ClusterNetworkArrayOutput {
	return o
}

func (o ClusterNetworkArrayOutput) Index(i pulumi.IntInput) ClusterNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNetwork {
		return vs[0].([]ClusterNetwork)[vs[1].(int)]
	}).(ClusterNetworkOutput)
}

type ClusterNode struct {
	// Cloud provider availability zone name
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Instance type used for the node
	InstanceType *string `pulumi:"instanceType"`
	// Node name
	Name    *string  `pulumi:"name"`
	Options []string `pulumi:"options"`
	// Cloud provider region
	Region string `pulumi:"region"`
	// Volume IOPS of the node data volume
	VolumeIops *int `pulumi:"volumeIops"`
	// Volume size of the node data volume
	VolumeSize *int `pulumi:"volumeSize"`
	// Volume type of the node data volume
	VolumeType *string `pulumi:"volumeType"`
}

// ClusterNodeInput is an input type that accepts ClusterNodeArgs and ClusterNodeOutput values.
// You can construct a concrete instance of `ClusterNodeInput` via:
//
//	ClusterNodeArgs{...}
type ClusterNodeInput interface {
	pulumi.Input

	ToClusterNodeOutput() ClusterNodeOutput
	ToClusterNodeOutputWithContext(context.Context) ClusterNodeOutput
}

type ClusterNodeArgs struct {
	// Cloud provider availability zone name
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Instance type used for the node
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Node name
	Name    pulumi.StringPtrInput   `pulumi:"name"`
	Options pulumi.StringArrayInput `pulumi:"options"`
	// Cloud provider region
	Region pulumi.StringInput `pulumi:"region"`
	// Volume IOPS of the node data volume
	VolumeIops pulumi.IntPtrInput `pulumi:"volumeIops"`
	// Volume size of the node data volume
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// Volume type of the node data volume
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNode)(nil)).Elem()
}

func (i ClusterNodeArgs) ToClusterNodeOutput() ClusterNodeOutput {
	return i.ToClusterNodeOutputWithContext(context.Background())
}

func (i ClusterNodeArgs) ToClusterNodeOutputWithContext(ctx context.Context) ClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeOutput)
}

// ClusterNodeArrayInput is an input type that accepts ClusterNodeArray and ClusterNodeArrayOutput values.
// You can construct a concrete instance of `ClusterNodeArrayInput` via:
//
//	ClusterNodeArray{ ClusterNodeArgs{...} }
type ClusterNodeArrayInput interface {
	pulumi.Input

	ToClusterNodeArrayOutput() ClusterNodeArrayOutput
	ToClusterNodeArrayOutputWithContext(context.Context) ClusterNodeArrayOutput
}

type ClusterNodeArray []ClusterNodeInput

func (ClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNode)(nil)).Elem()
}

func (i ClusterNodeArray) ToClusterNodeArrayOutput() ClusterNodeArrayOutput {
	return i.ToClusterNodeArrayOutputWithContext(context.Background())
}

func (i ClusterNodeArray) ToClusterNodeArrayOutputWithContext(ctx context.Context) ClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeArrayOutput)
}

type ClusterNodeOutput struct{ *pulumi.OutputState }

func (ClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNode)(nil)).Elem()
}

func (o ClusterNodeOutput) ToClusterNodeOutput() ClusterNodeOutput {
	return o
}

func (o ClusterNodeOutput) ToClusterNodeOutputWithContext(ctx context.Context) ClusterNodeOutput {
	return o
}

// Cloud provider availability zone name
func (o ClusterNodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Instance type used for the node
func (o ClusterNodeOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Node name
func (o ClusterNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterNodeOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNode) []string { return v.Options }).(pulumi.StringArrayOutput)
}

// Cloud provider region
func (o ClusterNodeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNode) string { return v.Region }).(pulumi.StringOutput)
}

// Volume IOPS of the node data volume
func (o ClusterNodeOutput) VolumeIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNode) *int { return v.VolumeIops }).(pulumi.IntPtrOutput)
}

// Volume size of the node data volume
func (o ClusterNodeOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNode) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// Volume type of the node data volume
func (o ClusterNodeOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNode)(nil)).Elem()
}

func (o ClusterNodeArrayOutput) ToClusterNodeArrayOutput() ClusterNodeArrayOutput {
	return o
}

func (o ClusterNodeArrayOutput) ToClusterNodeArrayOutputWithContext(ctx context.Context) ClusterNodeArrayOutput {
	return o
}

func (o ClusterNodeArrayOutput) Index(i pulumi.IntInput) ClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNode {
		return vs[0].([]ClusterNode)[vs[1].(int)]
	}).(ClusterNodeOutput)
}

type GetClustersCluster struct {
	CloudAccount GetClustersClusterCloudAccount `pulumi:"cloudAccount"`
	// Cloud account ID of the cluster
	CloudAccountId string `pulumi:"cloudAccountId"`
	// Created at of the cluster
	CreatedAt     string                           `pulumi:"createdAt"`
	FirewallRules []GetClustersClusterFirewallRule `pulumi:"firewallRules"`
	// ID of the cluster
	Id string `pulumi:"id"`
	// Name of the cluster
	Name     string                      `pulumi:"name"`
	Networks []GetClustersClusterNetwork `pulumi:"networks"`
	// Node location of the cluster
	NodeLocation string                   `pulumi:"nodeLocation"`
	Nodes        []GetClustersClusterNode `pulumi:"nodes"`
	Regions      []string                 `pulumi:"regions"`
	// SSH key ID of the cluster
	SshKeyId string `pulumi:"sshKeyId"`
	// Status of the cluster
	Status string `pulumi:"status"`
}

// GetClustersClusterInput is an input type that accepts GetClustersClusterArgs and GetClustersClusterOutput values.
// You can construct a concrete instance of `GetClustersClusterInput` via:
//
//	GetClustersClusterArgs{...}
type GetClustersClusterInput interface {
	pulumi.Input

	ToGetClustersClusterOutput() GetClustersClusterOutput
	ToGetClustersClusterOutputWithContext(context.Context) GetClustersClusterOutput
}

type GetClustersClusterArgs struct {
	CloudAccount GetClustersClusterCloudAccountInput `pulumi:"cloudAccount"`
	// Cloud account ID of the cluster
	CloudAccountId pulumi.StringInput `pulumi:"cloudAccountId"`
	// Created at of the cluster
	CreatedAt     pulumi.StringInput                       `pulumi:"createdAt"`
	FirewallRules GetClustersClusterFirewallRuleArrayInput `pulumi:"firewallRules"`
	// ID of the cluster
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the cluster
	Name     pulumi.StringInput                  `pulumi:"name"`
	Networks GetClustersClusterNetworkArrayInput `pulumi:"networks"`
	// Node location of the cluster
	NodeLocation pulumi.StringInput               `pulumi:"nodeLocation"`
	Nodes        GetClustersClusterNodeArrayInput `pulumi:"nodes"`
	Regions      pulumi.StringArrayInput          `pulumi:"regions"`
	// SSH key ID of the cluster
	SshKeyId pulumi.StringInput `pulumi:"sshKeyId"`
	// Status of the cluster
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return i.ToGetClustersClusterOutputWithContext(context.Background())
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterOutput)
}

// GetClustersClusterArrayInput is an input type that accepts GetClustersClusterArray and GetClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterArrayInput` via:
//
//	GetClustersClusterArray{ GetClustersClusterArgs{...} }
type GetClustersClusterArrayInput interface {
	pulumi.Input

	ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput
	ToGetClustersClusterArrayOutputWithContext(context.Context) GetClustersClusterArrayOutput
}

type GetClustersClusterArray []GetClustersClusterInput

func (GetClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return i.ToGetClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterArrayOutput)
}

type GetClustersClusterOutput struct{ *pulumi.OutputState }

func (GetClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return o
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return o
}

func (o GetClustersClusterOutput) CloudAccount() GetClustersClusterCloudAccountOutput {
	return o.ApplyT(func(v GetClustersCluster) GetClustersClusterCloudAccount { return v.CloudAccount }).(GetClustersClusterCloudAccountOutput)
}

// Cloud account ID of the cluster
func (o GetClustersClusterOutput) CloudAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CloudAccountId }).(pulumi.StringOutput)
}

// Created at of the cluster
func (o GetClustersClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) FirewallRules() GetClustersClusterFirewallRuleArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterFirewallRule { return v.FirewallRules }).(GetClustersClusterFirewallRuleArrayOutput)
}

// ID of the cluster
func (o GetClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the cluster
func (o GetClustersClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) Networks() GetClustersClusterNetworkArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterNetwork { return v.Networks }).(GetClustersClusterNetworkArrayOutput)
}

// Node location of the cluster
func (o GetClustersClusterOutput) NodeLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.NodeLocation }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) Nodes() GetClustersClusterNodeArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterNode { return v.Nodes }).(GetClustersClusterNodeArrayOutput)
}

func (o GetClustersClusterOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// SSH key ID of the cluster
func (o GetClustersClusterOutput) SshKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.SshKeyId }).(pulumi.StringOutput)
}

// Status of the cluster
func (o GetClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

type GetClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) Index(i pulumi.IntInput) GetClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersCluster {
		return vs[0].([]GetClustersCluster)[vs[1].(int)]
	}).(GetClustersClusterOutput)
}

type GetClustersClusterCloudAccount struct {
	// Display name of the node
	Id string `pulumi:"id"`
	// IP address of the node
	Name string `pulumi:"name"`
	// Type of the node
	Type string `pulumi:"type"`
}

// GetClustersClusterCloudAccountInput is an input type that accepts GetClustersClusterCloudAccountArgs and GetClustersClusterCloudAccountOutput values.
// You can construct a concrete instance of `GetClustersClusterCloudAccountInput` via:
//
//	GetClustersClusterCloudAccountArgs{...}
type GetClustersClusterCloudAccountInput interface {
	pulumi.Input

	ToGetClustersClusterCloudAccountOutput() GetClustersClusterCloudAccountOutput
	ToGetClustersClusterCloudAccountOutputWithContext(context.Context) GetClustersClusterCloudAccountOutput
}

type GetClustersClusterCloudAccountArgs struct {
	// Display name of the node
	Id pulumi.StringInput `pulumi:"id"`
	// IP address of the node
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the node
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClustersClusterCloudAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterCloudAccount)(nil)).Elem()
}

func (i GetClustersClusterCloudAccountArgs) ToGetClustersClusterCloudAccountOutput() GetClustersClusterCloudAccountOutput {
	return i.ToGetClustersClusterCloudAccountOutputWithContext(context.Background())
}

func (i GetClustersClusterCloudAccountArgs) ToGetClustersClusterCloudAccountOutputWithContext(ctx context.Context) GetClustersClusterCloudAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterCloudAccountOutput)
}

type GetClustersClusterCloudAccountOutput struct{ *pulumi.OutputState }

func (GetClustersClusterCloudAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterCloudAccount)(nil)).Elem()
}

func (o GetClustersClusterCloudAccountOutput) ToGetClustersClusterCloudAccountOutput() GetClustersClusterCloudAccountOutput {
	return o
}

func (o GetClustersClusterCloudAccountOutput) ToGetClustersClusterCloudAccountOutputWithContext(ctx context.Context) GetClustersClusterCloudAccountOutput {
	return o
}

// Display name of the node
func (o GetClustersClusterCloudAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterCloudAccount) string { return v.Id }).(pulumi.StringOutput)
}

// IP address of the node
func (o GetClustersClusterCloudAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterCloudAccount) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the node
func (o GetClustersClusterCloudAccountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterCloudAccount) string { return v.Type }).(pulumi.StringOutput)
}

type GetClustersClusterFirewallRule struct {
	// IP address of the node
	Name string `pulumi:"name"`
	// Port for the firewall rule
	Port int `pulumi:"port"`
	// Sources for the firewall rule
	Sources []string `pulumi:"sources"`
}

// GetClustersClusterFirewallRuleInput is an input type that accepts GetClustersClusterFirewallRuleArgs and GetClustersClusterFirewallRuleOutput values.
// You can construct a concrete instance of `GetClustersClusterFirewallRuleInput` via:
//
//	GetClustersClusterFirewallRuleArgs{...}
type GetClustersClusterFirewallRuleInput interface {
	pulumi.Input

	ToGetClustersClusterFirewallRuleOutput() GetClustersClusterFirewallRuleOutput
	ToGetClustersClusterFirewallRuleOutputWithContext(context.Context) GetClustersClusterFirewallRuleOutput
}

type GetClustersClusterFirewallRuleArgs struct {
	// IP address of the node
	Name pulumi.StringInput `pulumi:"name"`
	// Port for the firewall rule
	Port pulumi.IntInput `pulumi:"port"`
	// Sources for the firewall rule
	Sources pulumi.StringArrayInput `pulumi:"sources"`
}

func (GetClustersClusterFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterFirewallRule)(nil)).Elem()
}

func (i GetClustersClusterFirewallRuleArgs) ToGetClustersClusterFirewallRuleOutput() GetClustersClusterFirewallRuleOutput {
	return i.ToGetClustersClusterFirewallRuleOutputWithContext(context.Background())
}

func (i GetClustersClusterFirewallRuleArgs) ToGetClustersClusterFirewallRuleOutputWithContext(ctx context.Context) GetClustersClusterFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterFirewallRuleOutput)
}

// GetClustersClusterFirewallRuleArrayInput is an input type that accepts GetClustersClusterFirewallRuleArray and GetClustersClusterFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterFirewallRuleArrayInput` via:
//
//	GetClustersClusterFirewallRuleArray{ GetClustersClusterFirewallRuleArgs{...} }
type GetClustersClusterFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetClustersClusterFirewallRuleArrayOutput() GetClustersClusterFirewallRuleArrayOutput
	ToGetClustersClusterFirewallRuleArrayOutputWithContext(context.Context) GetClustersClusterFirewallRuleArrayOutput
}

type GetClustersClusterFirewallRuleArray []GetClustersClusterFirewallRuleInput

func (GetClustersClusterFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterFirewallRule)(nil)).Elem()
}

func (i GetClustersClusterFirewallRuleArray) ToGetClustersClusterFirewallRuleArrayOutput() GetClustersClusterFirewallRuleArrayOutput {
	return i.ToGetClustersClusterFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterFirewallRuleArray) ToGetClustersClusterFirewallRuleArrayOutputWithContext(ctx context.Context) GetClustersClusterFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterFirewallRuleArrayOutput)
}

type GetClustersClusterFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetClustersClusterFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterFirewallRule)(nil)).Elem()
}

func (o GetClustersClusterFirewallRuleOutput) ToGetClustersClusterFirewallRuleOutput() GetClustersClusterFirewallRuleOutput {
	return o
}

func (o GetClustersClusterFirewallRuleOutput) ToGetClustersClusterFirewallRuleOutputWithContext(ctx context.Context) GetClustersClusterFirewallRuleOutput {
	return o
}

// IP address of the node
func (o GetClustersClusterFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// Port for the firewall rule
func (o GetClustersClusterFirewallRuleOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterFirewallRule) int { return v.Port }).(pulumi.IntOutput)
}

// Sources for the firewall rule
func (o GetClustersClusterFirewallRuleOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterFirewallRule) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

type GetClustersClusterFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterFirewallRule)(nil)).Elem()
}

func (o GetClustersClusterFirewallRuleArrayOutput) ToGetClustersClusterFirewallRuleArrayOutput() GetClustersClusterFirewallRuleArrayOutput {
	return o
}

func (o GetClustersClusterFirewallRuleArrayOutput) ToGetClustersClusterFirewallRuleArrayOutputWithContext(ctx context.Context) GetClustersClusterFirewallRuleArrayOutput {
	return o
}

func (o GetClustersClusterFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetClustersClusterFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterFirewallRule {
		return vs[0].([]GetClustersClusterFirewallRule)[vs[1].(int)]
	}).(GetClustersClusterFirewallRuleOutput)
}

type GetClustersClusterNetwork struct {
	// CIDR of the AWS node group
	Cidr string `pulumi:"cidr"`
	// Is the network external
	External bool `pulumi:"external"`
	// External ID of the network
	ExternalId string `pulumi:"externalId"`
	// IP address of the node
	Name           string   `pulumi:"name"`
	PrivateSubnets []string `pulumi:"privateSubnets"`
	PublicSubnets  []string `pulumi:"publicSubnets"`
	// Region of the network
	Region string `pulumi:"region"`
}

// GetClustersClusterNetworkInput is an input type that accepts GetClustersClusterNetworkArgs and GetClustersClusterNetworkOutput values.
// You can construct a concrete instance of `GetClustersClusterNetworkInput` via:
//
//	GetClustersClusterNetworkArgs{...}
type GetClustersClusterNetworkInput interface {
	pulumi.Input

	ToGetClustersClusterNetworkOutput() GetClustersClusterNetworkOutput
	ToGetClustersClusterNetworkOutputWithContext(context.Context) GetClustersClusterNetworkOutput
}

type GetClustersClusterNetworkArgs struct {
	// CIDR of the AWS node group
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Is the network external
	External pulumi.BoolInput `pulumi:"external"`
	// External ID of the network
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// IP address of the node
	Name           pulumi.StringInput      `pulumi:"name"`
	PrivateSubnets pulumi.StringArrayInput `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput `pulumi:"publicSubnets"`
	// Region of the network
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetClustersClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNetwork)(nil)).Elem()
}

func (i GetClustersClusterNetworkArgs) ToGetClustersClusterNetworkOutput() GetClustersClusterNetworkOutput {
	return i.ToGetClustersClusterNetworkOutputWithContext(context.Background())
}

func (i GetClustersClusterNetworkArgs) ToGetClustersClusterNetworkOutputWithContext(ctx context.Context) GetClustersClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNetworkOutput)
}

// GetClustersClusterNetworkArrayInput is an input type that accepts GetClustersClusterNetworkArray and GetClustersClusterNetworkArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNetworkArrayInput` via:
//
//	GetClustersClusterNetworkArray{ GetClustersClusterNetworkArgs{...} }
type GetClustersClusterNetworkArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNetworkArrayOutput() GetClustersClusterNetworkArrayOutput
	ToGetClustersClusterNetworkArrayOutputWithContext(context.Context) GetClustersClusterNetworkArrayOutput
}

type GetClustersClusterNetworkArray []GetClustersClusterNetworkInput

func (GetClustersClusterNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNetwork)(nil)).Elem()
}

func (i GetClustersClusterNetworkArray) ToGetClustersClusterNetworkArrayOutput() GetClustersClusterNetworkArrayOutput {
	return i.ToGetClustersClusterNetworkArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNetworkArray) ToGetClustersClusterNetworkArrayOutputWithContext(ctx context.Context) GetClustersClusterNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNetworkArrayOutput)
}

type GetClustersClusterNetworkOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNetwork)(nil)).Elem()
}

func (o GetClustersClusterNetworkOutput) ToGetClustersClusterNetworkOutput() GetClustersClusterNetworkOutput {
	return o
}

func (o GetClustersClusterNetworkOutput) ToGetClustersClusterNetworkOutputWithContext(ctx context.Context) GetClustersClusterNetworkOutput {
	return o
}

// CIDR of the AWS node group
func (o GetClustersClusterNetworkOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) string { return v.Cidr }).(pulumi.StringOutput)
}

// Is the network external
func (o GetClustersClusterNetworkOutput) External() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) bool { return v.External }).(pulumi.BoolOutput)
}

// External ID of the network
func (o GetClustersClusterNetworkOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) string { return v.ExternalId }).(pulumi.StringOutput)
}

// IP address of the node
func (o GetClustersClusterNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClustersClusterNetworkOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o GetClustersClusterNetworkOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the network
func (o GetClustersClusterNetworkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) string { return v.Region }).(pulumi.StringOutput)
}

type GetClustersClusterNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNetwork)(nil)).Elem()
}

func (o GetClustersClusterNetworkArrayOutput) ToGetClustersClusterNetworkArrayOutput() GetClustersClusterNetworkArrayOutput {
	return o
}

func (o GetClustersClusterNetworkArrayOutput) ToGetClustersClusterNetworkArrayOutputWithContext(ctx context.Context) GetClustersClusterNetworkArrayOutput {
	return o
}

func (o GetClustersClusterNetworkArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNetwork {
		return vs[0].([]GetClustersClusterNetwork)[vs[1].(int)]
	}).(GetClustersClusterNetworkOutput)
}

type GetClustersClusterNode struct {
	// Cloud provider availability zone name
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Instance type used for the node
	InstanceType string `pulumi:"instanceType"`
	// IP address of the node
	Name    string   `pulumi:"name"`
	Options []string `pulumi:"options"`
	// Region of the network
	Region string `pulumi:"region"`
	// Volume IOPS of the node data volume
	VolumeIops int `pulumi:"volumeIops"`
	// Volume size of the node data volume
	VolumeSize int `pulumi:"volumeSize"`
	// Volume type of the node data volume
	VolumeType string `pulumi:"volumeType"`
}

// GetClustersClusterNodeInput is an input type that accepts GetClustersClusterNodeArgs and GetClustersClusterNodeOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeInput` via:
//
//	GetClustersClusterNodeArgs{...}
type GetClustersClusterNodeInput interface {
	pulumi.Input

	ToGetClustersClusterNodeOutput() GetClustersClusterNodeOutput
	ToGetClustersClusterNodeOutputWithContext(context.Context) GetClustersClusterNodeOutput
}

type GetClustersClusterNodeArgs struct {
	// Cloud provider availability zone name
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Instance type used for the node
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// IP address of the node
	Name    pulumi.StringInput      `pulumi:"name"`
	Options pulumi.StringArrayInput `pulumi:"options"`
	// Region of the network
	Region pulumi.StringInput `pulumi:"region"`
	// Volume IOPS of the node data volume
	VolumeIops pulumi.IntInput `pulumi:"volumeIops"`
	// Volume size of the node data volume
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// Volume type of the node data volume
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetClustersClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNode)(nil)).Elem()
}

func (i GetClustersClusterNodeArgs) ToGetClustersClusterNodeOutput() GetClustersClusterNodeOutput {
	return i.ToGetClustersClusterNodeOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeArgs) ToGetClustersClusterNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeOutput)
}

// GetClustersClusterNodeArrayInput is an input type that accepts GetClustersClusterNodeArray and GetClustersClusterNodeArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeArrayInput` via:
//
//	GetClustersClusterNodeArray{ GetClustersClusterNodeArgs{...} }
type GetClustersClusterNodeArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNodeArrayOutput() GetClustersClusterNodeArrayOutput
	ToGetClustersClusterNodeArrayOutputWithContext(context.Context) GetClustersClusterNodeArrayOutput
}

type GetClustersClusterNodeArray []GetClustersClusterNodeInput

func (GetClustersClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNode)(nil)).Elem()
}

func (i GetClustersClusterNodeArray) ToGetClustersClusterNodeArrayOutput() GetClustersClusterNodeArrayOutput {
	return i.ToGetClustersClusterNodeArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeArray) ToGetClustersClusterNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeArrayOutput)
}

type GetClustersClusterNodeOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNode)(nil)).Elem()
}

func (o GetClustersClusterNodeOutput) ToGetClustersClusterNodeOutput() GetClustersClusterNodeOutput {
	return o
}

func (o GetClustersClusterNodeOutput) ToGetClustersClusterNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeOutput {
	return o
}

// Cloud provider availability zone name
func (o GetClustersClusterNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Instance type used for the node
func (o GetClustersClusterNodeOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.InstanceType }).(pulumi.StringOutput)
}

// IP address of the node
func (o GetClustersClusterNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClustersClusterNodeOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNode) []string { return v.Options }).(pulumi.StringArrayOutput)
}

// Region of the network
func (o GetClustersClusterNodeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.Region }).(pulumi.StringOutput)
}

// Volume IOPS of the node data volume
func (o GetClustersClusterNodeOutput) VolumeIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNode) int { return v.VolumeIops }).(pulumi.IntOutput)
}

// Volume size of the node data volume
func (o GetClustersClusterNodeOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNode) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// Volume type of the node data volume
func (o GetClustersClusterNodeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetClustersClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNode)(nil)).Elem()
}

func (o GetClustersClusterNodeArrayOutput) ToGetClustersClusterNodeArrayOutput() GetClustersClusterNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeArrayOutput) ToGetClustersClusterNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNode {
		return vs[0].([]GetClustersClusterNode)[vs[1].(int)]
	}).(GetClustersClusterNodeOutput)
}

type GetDatabasesDatabase struct {
	// Updated at of the database
	ClusterId  string                          `pulumi:"clusterId"`
	Components []GetDatabasesDatabaseComponent `pulumi:"components"`
	// Config version of the database
	ConfigVersion *string `pulumi:"configVersion"`
	// Created at of the database
	CreatedAt string `pulumi:"createdAt"`
	// Domain of the database
	Domain     string                         `pulumi:"domain"`
	Extensions GetDatabasesDatabaseExtensions `pulumi:"extensions"`
	// ID of the database
	Id string `pulumi:"id"`
	// Name of the database
	Name  string                     `pulumi:"name"`
	Nodes []GetDatabasesDatabaseNode `pulumi:"nodes"`
	// Options for creating the database
	Options []string `pulumi:"options"`
	// Postgres version of the database
	PgVersion string                     `pulumi:"pgVersion"`
	Roles     []GetDatabasesDatabaseRole `pulumi:"roles"`
	// Status of the database
	Status string `pulumi:"status"`
	// Storage used of the database
	StorageUsed int                         `pulumi:"storageUsed"`
	Tables      []GetDatabasesDatabaseTable `pulumi:"tables"`
	// Updated at of the database
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetDatabasesDatabaseInput is an input type that accepts GetDatabasesDatabaseArgs and GetDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseInput` via:
//
//	GetDatabasesDatabaseArgs{...}
type GetDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput
	ToGetDatabasesDatabaseOutputWithContext(context.Context) GetDatabasesDatabaseOutput
}

type GetDatabasesDatabaseArgs struct {
	// Updated at of the database
	ClusterId  pulumi.StringInput                      `pulumi:"clusterId"`
	Components GetDatabasesDatabaseComponentArrayInput `pulumi:"components"`
	// Config version of the database
	ConfigVersion pulumi.StringPtrInput `pulumi:"configVersion"`
	// Created at of the database
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Domain of the database
	Domain     pulumi.StringInput                  `pulumi:"domain"`
	Extensions GetDatabasesDatabaseExtensionsInput `pulumi:"extensions"`
	// ID of the database
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the database
	Name  pulumi.StringInput                 `pulumi:"name"`
	Nodes GetDatabasesDatabaseNodeArrayInput `pulumi:"nodes"`
	// Options for creating the database
	Options pulumi.StringArrayInput `pulumi:"options"`
	// Postgres version of the database
	PgVersion pulumi.StringInput                 `pulumi:"pgVersion"`
	Roles     GetDatabasesDatabaseRoleArrayInput `pulumi:"roles"`
	// Status of the database
	Status pulumi.StringInput `pulumi:"status"`
	// Storage used of the database
	StorageUsed pulumi.IntInput                     `pulumi:"storageUsed"`
	Tables      GetDatabasesDatabaseTableArrayInput `pulumi:"tables"`
	// Updated at of the database
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return i.ToGetDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseOutput)
}

// GetDatabasesDatabaseArrayInput is an input type that accepts GetDatabasesDatabaseArray and GetDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseArrayInput` via:
//
//	GetDatabasesDatabaseArray{ GetDatabasesDatabaseArgs{...} }
type GetDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput
	ToGetDatabasesDatabaseArrayOutputWithContext(context.Context) GetDatabasesDatabaseArrayOutput
}

type GetDatabasesDatabaseArray []GetDatabasesDatabaseInput

func (GetDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return i.ToGetDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseArrayOutput)
}

type GetDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return o
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return o
}

// Updated at of the database
func (o GetDatabasesDatabaseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseOutput) Components() GetDatabasesDatabaseComponentArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseComponent { return v.Components }).(GetDatabasesDatabaseComponentArrayOutput)
}

// Config version of the database
func (o GetDatabasesDatabaseOutput) ConfigVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) *string { return v.ConfigVersion }).(pulumi.StringPtrOutput)
}

// Created at of the database
func (o GetDatabasesDatabaseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Domain of the database
func (o GetDatabasesDatabaseOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseOutput) Extensions() GetDatabasesDatabaseExtensionsOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) GetDatabasesDatabaseExtensions { return v.Extensions }).(GetDatabasesDatabaseExtensionsOutput)
}

// ID of the database
func (o GetDatabasesDatabaseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the database
func (o GetDatabasesDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseOutput) Nodes() GetDatabasesDatabaseNodeArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseNode { return v.Nodes }).(GetDatabasesDatabaseNodeArrayOutput)
}

// Options for creating the database
func (o GetDatabasesDatabaseOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []string { return v.Options }).(pulumi.StringArrayOutput)
}

// Postgres version of the database
func (o GetDatabasesDatabaseOutput) PgVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.PgVersion }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseOutput) Roles() GetDatabasesDatabaseRoleArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseRole { return v.Roles }).(GetDatabasesDatabaseRoleArrayOutput)
}

// Status of the database
func (o GetDatabasesDatabaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Status }).(pulumi.StringOutput)
}

// Storage used of the database
func (o GetDatabasesDatabaseOutput) StorageUsed() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) int { return v.StorageUsed }).(pulumi.IntOutput)
}

func (o GetDatabasesDatabaseOutput) Tables() GetDatabasesDatabaseTableArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseTable { return v.Tables }).(GetDatabasesDatabaseTableArrayOutput)
}

// Updated at of the database
func (o GetDatabasesDatabaseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabase {
		return vs[0].([]GetDatabasesDatabase)[vs[1].(int)]
	}).(GetDatabasesDatabaseOutput)
}

type GetDatabasesDatabaseComponent struct {
	// Id of the component
	Id string `pulumi:"id"`
	// Name of the component
	Name string `pulumi:"name"`
	// Release date of the component
	ReleaseDate string `pulumi:"releaseDate"`
	// Status of the component
	Status string `pulumi:"status"`
	// Version of the component
	Version string `pulumi:"version"`
}

// GetDatabasesDatabaseComponentInput is an input type that accepts GetDatabasesDatabaseComponentArgs and GetDatabasesDatabaseComponentOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseComponentInput` via:
//
//	GetDatabasesDatabaseComponentArgs{...}
type GetDatabasesDatabaseComponentInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseComponentOutput() GetDatabasesDatabaseComponentOutput
	ToGetDatabasesDatabaseComponentOutputWithContext(context.Context) GetDatabasesDatabaseComponentOutput
}

type GetDatabasesDatabaseComponentArgs struct {
	// Id of the component
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the component
	Name pulumi.StringInput `pulumi:"name"`
	// Release date of the component
	ReleaseDate pulumi.StringInput `pulumi:"releaseDate"`
	// Status of the component
	Status pulumi.StringInput `pulumi:"status"`
	// Version of the component
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDatabasesDatabaseComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseComponent)(nil)).Elem()
}

func (i GetDatabasesDatabaseComponentArgs) ToGetDatabasesDatabaseComponentOutput() GetDatabasesDatabaseComponentOutput {
	return i.ToGetDatabasesDatabaseComponentOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseComponentArgs) ToGetDatabasesDatabaseComponentOutputWithContext(ctx context.Context) GetDatabasesDatabaseComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseComponentOutput)
}

// GetDatabasesDatabaseComponentArrayInput is an input type that accepts GetDatabasesDatabaseComponentArray and GetDatabasesDatabaseComponentArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseComponentArrayInput` via:
//
//	GetDatabasesDatabaseComponentArray{ GetDatabasesDatabaseComponentArgs{...} }
type GetDatabasesDatabaseComponentArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseComponentArrayOutput() GetDatabasesDatabaseComponentArrayOutput
	ToGetDatabasesDatabaseComponentArrayOutputWithContext(context.Context) GetDatabasesDatabaseComponentArrayOutput
}

type GetDatabasesDatabaseComponentArray []GetDatabasesDatabaseComponentInput

func (GetDatabasesDatabaseComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseComponent)(nil)).Elem()
}

func (i GetDatabasesDatabaseComponentArray) ToGetDatabasesDatabaseComponentArrayOutput() GetDatabasesDatabaseComponentArrayOutput {
	return i.ToGetDatabasesDatabaseComponentArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseComponentArray) ToGetDatabasesDatabaseComponentArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseComponentArrayOutput)
}

type GetDatabasesDatabaseComponentOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseComponent)(nil)).Elem()
}

func (o GetDatabasesDatabaseComponentOutput) ToGetDatabasesDatabaseComponentOutput() GetDatabasesDatabaseComponentOutput {
	return o
}

func (o GetDatabasesDatabaseComponentOutput) ToGetDatabasesDatabaseComponentOutputWithContext(ctx context.Context) GetDatabasesDatabaseComponentOutput {
	return o
}

// Id of the component
func (o GetDatabasesDatabaseComponentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the component
func (o GetDatabasesDatabaseComponentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.Name }).(pulumi.StringOutput)
}

// Release date of the component
func (o GetDatabasesDatabaseComponentOutput) ReleaseDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.ReleaseDate }).(pulumi.StringOutput)
}

// Status of the component
func (o GetDatabasesDatabaseComponentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.Status }).(pulumi.StringOutput)
}

// Version of the component
func (o GetDatabasesDatabaseComponentOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.Version }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseComponentArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseComponent)(nil)).Elem()
}

func (o GetDatabasesDatabaseComponentArrayOutput) ToGetDatabasesDatabaseComponentArrayOutput() GetDatabasesDatabaseComponentArrayOutput {
	return o
}

func (o GetDatabasesDatabaseComponentArrayOutput) ToGetDatabasesDatabaseComponentArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseComponentArrayOutput {
	return o
}

func (o GetDatabasesDatabaseComponentArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseComponent {
		return vs[0].([]GetDatabasesDatabaseComponent)[vs[1].(int)]
	}).(GetDatabasesDatabaseComponentOutput)
}

type GetDatabasesDatabaseExtensions struct {
	// Auto manage of the extension
	AutoManage bool `pulumi:"autoManage"`
	// Available of the extension
	Availables []string `pulumi:"availables"`
	// Requested of the extension
	Requesteds []string `pulumi:"requesteds"`
}

// GetDatabasesDatabaseExtensionsInput is an input type that accepts GetDatabasesDatabaseExtensionsArgs and GetDatabasesDatabaseExtensionsOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseExtensionsInput` via:
//
//	GetDatabasesDatabaseExtensionsArgs{...}
type GetDatabasesDatabaseExtensionsInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseExtensionsOutput() GetDatabasesDatabaseExtensionsOutput
	ToGetDatabasesDatabaseExtensionsOutputWithContext(context.Context) GetDatabasesDatabaseExtensionsOutput
}

type GetDatabasesDatabaseExtensionsArgs struct {
	// Auto manage of the extension
	AutoManage pulumi.BoolInput `pulumi:"autoManage"`
	// Available of the extension
	Availables pulumi.StringArrayInput `pulumi:"availables"`
	// Requested of the extension
	Requesteds pulumi.StringArrayInput `pulumi:"requesteds"`
}

func (GetDatabasesDatabaseExtensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseExtensions)(nil)).Elem()
}

func (i GetDatabasesDatabaseExtensionsArgs) ToGetDatabasesDatabaseExtensionsOutput() GetDatabasesDatabaseExtensionsOutput {
	return i.ToGetDatabasesDatabaseExtensionsOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseExtensionsArgs) ToGetDatabasesDatabaseExtensionsOutputWithContext(ctx context.Context) GetDatabasesDatabaseExtensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseExtensionsOutput)
}

type GetDatabasesDatabaseExtensionsOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseExtensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseExtensions)(nil)).Elem()
}

func (o GetDatabasesDatabaseExtensionsOutput) ToGetDatabasesDatabaseExtensionsOutput() GetDatabasesDatabaseExtensionsOutput {
	return o
}

func (o GetDatabasesDatabaseExtensionsOutput) ToGetDatabasesDatabaseExtensionsOutputWithContext(ctx context.Context) GetDatabasesDatabaseExtensionsOutput {
	return o
}

// Auto manage of the extension
func (o GetDatabasesDatabaseExtensionsOutput) AutoManage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseExtensions) bool { return v.AutoManage }).(pulumi.BoolOutput)
}

// Available of the extension
func (o GetDatabasesDatabaseExtensionsOutput) Availables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseExtensions) []string { return v.Availables }).(pulumi.StringArrayOutput)
}

// Requested of the extension
func (o GetDatabasesDatabaseExtensionsOutput) Requesteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseExtensions) []string { return v.Requesteds }).(pulumi.StringArrayOutput)
}

type GetDatabasesDatabaseNode struct {
	Connection          GetDatabasesDatabaseNodeConnection          `pulumi:"connection"`
	DistanceMeasurement GetDatabasesDatabaseNodeDistanceMeasurement `pulumi:"distanceMeasurement"`
	Extensions          GetDatabasesDatabaseNodeExtensions          `pulumi:"extensions"`
	Location            GetDatabasesDatabaseNodeLocation            `pulumi:"location"`
	// Name of the component
	Name string `pulumi:"name"`
	// Region of the location
	Region GetDatabasesDatabaseNodeRegion `pulumi:"region"`
}

// GetDatabasesDatabaseNodeInput is an input type that accepts GetDatabasesDatabaseNodeArgs and GetDatabasesDatabaseNodeOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeInput` via:
//
//	GetDatabasesDatabaseNodeArgs{...}
type GetDatabasesDatabaseNodeInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput
	ToGetDatabasesDatabaseNodeOutputWithContext(context.Context) GetDatabasesDatabaseNodeOutput
}

type GetDatabasesDatabaseNodeArgs struct {
	Connection          GetDatabasesDatabaseNodeConnectionInput          `pulumi:"connection"`
	DistanceMeasurement GetDatabasesDatabaseNodeDistanceMeasurementInput `pulumi:"distanceMeasurement"`
	Extensions          GetDatabasesDatabaseNodeExtensionsInput          `pulumi:"extensions"`
	Location            GetDatabasesDatabaseNodeLocationInput            `pulumi:"location"`
	// Name of the component
	Name pulumi.StringInput `pulumi:"name"`
	// Region of the location
	Region GetDatabasesDatabaseNodeRegionInput `pulumi:"region"`
}

func (GetDatabasesDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNode)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeArgs) ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput {
	return i.ToGetDatabasesDatabaseNodeOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeArgs) ToGetDatabasesDatabaseNodeOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeOutput)
}

// GetDatabasesDatabaseNodeArrayInput is an input type that accepts GetDatabasesDatabaseNodeArray and GetDatabasesDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeArrayInput` via:
//
//	GetDatabasesDatabaseNodeArray{ GetDatabasesDatabaseNodeArgs{...} }
type GetDatabasesDatabaseNodeArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput
	ToGetDatabasesDatabaseNodeArrayOutputWithContext(context.Context) GetDatabasesDatabaseNodeArrayOutput
}

type GetDatabasesDatabaseNodeArray []GetDatabasesDatabaseNodeInput

func (GetDatabasesDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseNode)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeArray) ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput {
	return i.ToGetDatabasesDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeArray) ToGetDatabasesDatabaseNodeArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeArrayOutput)
}

type GetDatabasesDatabaseNodeOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNode)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeOutput) ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput {
	return o
}

func (o GetDatabasesDatabaseNodeOutput) ToGetDatabasesDatabaseNodeOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeOutput {
	return o
}

func (o GetDatabasesDatabaseNodeOutput) Connection() GetDatabasesDatabaseNodeConnectionOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeConnection { return v.Connection }).(GetDatabasesDatabaseNodeConnectionOutput)
}

func (o GetDatabasesDatabaseNodeOutput) DistanceMeasurement() GetDatabasesDatabaseNodeDistanceMeasurementOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeDistanceMeasurement {
		return v.DistanceMeasurement
	}).(GetDatabasesDatabaseNodeDistanceMeasurementOutput)
}

func (o GetDatabasesDatabaseNodeOutput) Extensions() GetDatabasesDatabaseNodeExtensionsOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeExtensions { return v.Extensions }).(GetDatabasesDatabaseNodeExtensionsOutput)
}

func (o GetDatabasesDatabaseNodeOutput) Location() GetDatabasesDatabaseNodeLocationOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeLocation { return v.Location }).(GetDatabasesDatabaseNodeLocationOutput)
}

// Name of the component
func (o GetDatabasesDatabaseNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) string { return v.Name }).(pulumi.StringOutput)
}

// Region of the location
func (o GetDatabasesDatabaseNodeOutput) Region() GetDatabasesDatabaseNodeRegionOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeRegion { return v.Region }).(GetDatabasesDatabaseNodeRegionOutput)
}

type GetDatabasesDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseNode)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeArrayOutput) ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput {
	return o
}

func (o GetDatabasesDatabaseNodeArrayOutput) ToGetDatabasesDatabaseNodeArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeArrayOutput {
	return o
}

func (o GetDatabasesDatabaseNodeArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseNode {
		return vs[0].([]GetDatabasesDatabaseNode)[vs[1].(int)]
	}).(GetDatabasesDatabaseNodeOutput)
}

type GetDatabasesDatabaseNodeConnection struct {
	// Database of the node
	Database string `pulumi:"database"`
	// External IP of the node
	ExternalIpAddress string `pulumi:"externalIpAddress"`
	// Host of the node
	Host string `pulumi:"host"`
	// Internal Host of the node
	InternalHost string `pulumi:"internalHost"`
	// Internal IP of the node
	InternalIpAddress string `pulumi:"internalIpAddress"`
	// Password of the node
	Password string `pulumi:"password"`
	// Port of the node
	Port int `pulumi:"port"`
	// Username of the node
	Username string `pulumi:"username"`
}

// GetDatabasesDatabaseNodeConnectionInput is an input type that accepts GetDatabasesDatabaseNodeConnectionArgs and GetDatabasesDatabaseNodeConnectionOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeConnectionInput` via:
//
//	GetDatabasesDatabaseNodeConnectionArgs{...}
type GetDatabasesDatabaseNodeConnectionInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput
	ToGetDatabasesDatabaseNodeConnectionOutputWithContext(context.Context) GetDatabasesDatabaseNodeConnectionOutput
}

type GetDatabasesDatabaseNodeConnectionArgs struct {
	// Database of the node
	Database pulumi.StringInput `pulumi:"database"`
	// External IP of the node
	ExternalIpAddress pulumi.StringInput `pulumi:"externalIpAddress"`
	// Host of the node
	Host pulumi.StringInput `pulumi:"host"`
	// Internal Host of the node
	InternalHost pulumi.StringInput `pulumi:"internalHost"`
	// Internal IP of the node
	InternalIpAddress pulumi.StringInput `pulumi:"internalIpAddress"`
	// Password of the node
	Password pulumi.StringInput `pulumi:"password"`
	// Port of the node
	Port pulumi.IntInput `pulumi:"port"`
	// Username of the node
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetDatabasesDatabaseNodeConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeConnection)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeConnectionArgs) ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput {
	return i.ToGetDatabasesDatabaseNodeConnectionOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeConnectionArgs) ToGetDatabasesDatabaseNodeConnectionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeConnectionOutput)
}

type GetDatabasesDatabaseNodeConnectionOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeConnection)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeConnectionOutput) ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput {
	return o
}

func (o GetDatabasesDatabaseNodeConnectionOutput) ToGetDatabasesDatabaseNodeConnectionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeConnectionOutput {
	return o
}

// Database of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Database }).(pulumi.StringOutput)
}

// External IP of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) ExternalIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.ExternalIpAddress }).(pulumi.StringOutput)
}

// Host of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Host }).(pulumi.StringOutput)
}

// Internal Host of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) InternalHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.InternalHost }).(pulumi.StringOutput)
}

// Internal IP of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) InternalIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.InternalIpAddress }).(pulumi.StringOutput)
}

// Password of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Password }).(pulumi.StringOutput)
}

// Port of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) int { return v.Port }).(pulumi.IntOutput)
}

// Username of the node
func (o GetDatabasesDatabaseNodeConnectionOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Username }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseNodeDistanceMeasurement struct {
	// Distance from a reference point
	Distance float64 `pulumi:"distance"`
	// Latitude of the reference point
	FromLatitude float64 `pulumi:"fromLatitude"`
	// Longitude of the reference point
	FromLongitude float64 `pulumi:"fromLongitude"`
	// Unit of distance measurement
	Unit string `pulumi:"unit"`
}

// GetDatabasesDatabaseNodeDistanceMeasurementInput is an input type that accepts GetDatabasesDatabaseNodeDistanceMeasurementArgs and GetDatabasesDatabaseNodeDistanceMeasurementOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeDistanceMeasurementInput` via:
//
//	GetDatabasesDatabaseNodeDistanceMeasurementArgs{...}
type GetDatabasesDatabaseNodeDistanceMeasurementInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeDistanceMeasurementOutput() GetDatabasesDatabaseNodeDistanceMeasurementOutput
	ToGetDatabasesDatabaseNodeDistanceMeasurementOutputWithContext(context.Context) GetDatabasesDatabaseNodeDistanceMeasurementOutput
}

type GetDatabasesDatabaseNodeDistanceMeasurementArgs struct {
	// Distance from a reference point
	Distance pulumi.Float64Input `pulumi:"distance"`
	// Latitude of the reference point
	FromLatitude pulumi.Float64Input `pulumi:"fromLatitude"`
	// Longitude of the reference point
	FromLongitude pulumi.Float64Input `pulumi:"fromLongitude"`
	// Unit of distance measurement
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (GetDatabasesDatabaseNodeDistanceMeasurementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeDistanceMeasurement)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeDistanceMeasurementArgs) ToGetDatabasesDatabaseNodeDistanceMeasurementOutput() GetDatabasesDatabaseNodeDistanceMeasurementOutput {
	return i.ToGetDatabasesDatabaseNodeDistanceMeasurementOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeDistanceMeasurementArgs) ToGetDatabasesDatabaseNodeDistanceMeasurementOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeDistanceMeasurementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeDistanceMeasurementOutput)
}

type GetDatabasesDatabaseNodeDistanceMeasurementOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeDistanceMeasurementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeDistanceMeasurement)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeDistanceMeasurementOutput) ToGetDatabasesDatabaseNodeDistanceMeasurementOutput() GetDatabasesDatabaseNodeDistanceMeasurementOutput {
	return o
}

func (o GetDatabasesDatabaseNodeDistanceMeasurementOutput) ToGetDatabasesDatabaseNodeDistanceMeasurementOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeDistanceMeasurementOutput {
	return o
}

// Distance from a reference point
func (o GetDatabasesDatabaseNodeDistanceMeasurementOutput) Distance() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeDistanceMeasurement) float64 { return v.Distance }).(pulumi.Float64Output)
}

// Latitude of the reference point
func (o GetDatabasesDatabaseNodeDistanceMeasurementOutput) FromLatitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeDistanceMeasurement) float64 { return v.FromLatitude }).(pulumi.Float64Output)
}

// Longitude of the reference point
func (o GetDatabasesDatabaseNodeDistanceMeasurementOutput) FromLongitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeDistanceMeasurement) float64 { return v.FromLongitude }).(pulumi.Float64Output)
}

// Unit of distance measurement
func (o GetDatabasesDatabaseNodeDistanceMeasurementOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeDistanceMeasurement) string { return v.Unit }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseNodeExtensions struct {
	Errors GetDatabasesDatabaseNodeExtensionsErrors `pulumi:"errors"`
	// List of installed extensions
	Installeds []string `pulumi:"installeds"`
}

// GetDatabasesDatabaseNodeExtensionsInput is an input type that accepts GetDatabasesDatabaseNodeExtensionsArgs and GetDatabasesDatabaseNodeExtensionsOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeExtensionsInput` via:
//
//	GetDatabasesDatabaseNodeExtensionsArgs{...}
type GetDatabasesDatabaseNodeExtensionsInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeExtensionsOutput() GetDatabasesDatabaseNodeExtensionsOutput
	ToGetDatabasesDatabaseNodeExtensionsOutputWithContext(context.Context) GetDatabasesDatabaseNodeExtensionsOutput
}

type GetDatabasesDatabaseNodeExtensionsArgs struct {
	Errors GetDatabasesDatabaseNodeExtensionsErrorsInput `pulumi:"errors"`
	// List of installed extensions
	Installeds pulumi.StringArrayInput `pulumi:"installeds"`
}

func (GetDatabasesDatabaseNodeExtensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeExtensions)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeExtensionsArgs) ToGetDatabasesDatabaseNodeExtensionsOutput() GetDatabasesDatabaseNodeExtensionsOutput {
	return i.ToGetDatabasesDatabaseNodeExtensionsOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeExtensionsArgs) ToGetDatabasesDatabaseNodeExtensionsOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeExtensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeExtensionsOutput)
}

type GetDatabasesDatabaseNodeExtensionsOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeExtensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeExtensions)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeExtensionsOutput) ToGetDatabasesDatabaseNodeExtensionsOutput() GetDatabasesDatabaseNodeExtensionsOutput {
	return o
}

func (o GetDatabasesDatabaseNodeExtensionsOutput) ToGetDatabasesDatabaseNodeExtensionsOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeExtensionsOutput {
	return o
}

func (o GetDatabasesDatabaseNodeExtensionsOutput) Errors() GetDatabasesDatabaseNodeExtensionsErrorsOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeExtensions) GetDatabasesDatabaseNodeExtensionsErrors { return v.Errors }).(GetDatabasesDatabaseNodeExtensionsErrorsOutput)
}

// List of installed extensions
func (o GetDatabasesDatabaseNodeExtensionsOutput) Installeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeExtensions) []string { return v.Installeds }).(pulumi.StringArrayOutput)
}

type GetDatabasesDatabaseNodeExtensionsErrors struct {
	// Error code anim9ef
	Anim9ef string `pulumi:"anim9ef"`
	// Error code enim3b
	Enim3b string `pulumi:"enim3b"`
	// Error code laborumd
	Laborumd string `pulumi:"laborumd"`
	// Error code mollit267
	Mollit267 string `pulumi:"mollit267"`
}

// GetDatabasesDatabaseNodeExtensionsErrorsInput is an input type that accepts GetDatabasesDatabaseNodeExtensionsErrorsArgs and GetDatabasesDatabaseNodeExtensionsErrorsOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeExtensionsErrorsInput` via:
//
//	GetDatabasesDatabaseNodeExtensionsErrorsArgs{...}
type GetDatabasesDatabaseNodeExtensionsErrorsInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeExtensionsErrorsOutput() GetDatabasesDatabaseNodeExtensionsErrorsOutput
	ToGetDatabasesDatabaseNodeExtensionsErrorsOutputWithContext(context.Context) GetDatabasesDatabaseNodeExtensionsErrorsOutput
}

type GetDatabasesDatabaseNodeExtensionsErrorsArgs struct {
	// Error code anim9ef
	Anim9ef pulumi.StringInput `pulumi:"anim9ef"`
	// Error code enim3b
	Enim3b pulumi.StringInput `pulumi:"enim3b"`
	// Error code laborumd
	Laborumd pulumi.StringInput `pulumi:"laborumd"`
	// Error code mollit267
	Mollit267 pulumi.StringInput `pulumi:"mollit267"`
}

func (GetDatabasesDatabaseNodeExtensionsErrorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeExtensionsErrors)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeExtensionsErrorsArgs) ToGetDatabasesDatabaseNodeExtensionsErrorsOutput() GetDatabasesDatabaseNodeExtensionsErrorsOutput {
	return i.ToGetDatabasesDatabaseNodeExtensionsErrorsOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeExtensionsErrorsArgs) ToGetDatabasesDatabaseNodeExtensionsErrorsOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeExtensionsErrorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeExtensionsErrorsOutput)
}

type GetDatabasesDatabaseNodeExtensionsErrorsOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeExtensionsErrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeExtensionsErrors)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeExtensionsErrorsOutput) ToGetDatabasesDatabaseNodeExtensionsErrorsOutput() GetDatabasesDatabaseNodeExtensionsErrorsOutput {
	return o
}

func (o GetDatabasesDatabaseNodeExtensionsErrorsOutput) ToGetDatabasesDatabaseNodeExtensionsErrorsOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeExtensionsErrorsOutput {
	return o
}

// Error code anim9ef
func (o GetDatabasesDatabaseNodeExtensionsErrorsOutput) Anim9ef() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeExtensionsErrors) string { return v.Anim9ef }).(pulumi.StringOutput)
}

// Error code enim3b
func (o GetDatabasesDatabaseNodeExtensionsErrorsOutput) Enim3b() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeExtensionsErrors) string { return v.Enim3b }).(pulumi.StringOutput)
}

// Error code laborumd
func (o GetDatabasesDatabaseNodeExtensionsErrorsOutput) Laborumd() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeExtensionsErrors) string { return v.Laborumd }).(pulumi.StringOutput)
}

// Error code mollit267
func (o GetDatabasesDatabaseNodeExtensionsErrorsOutput) Mollit267() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeExtensionsErrors) string { return v.Mollit267 }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseNodeLocation struct {
	// City of the location
	City string `pulumi:"city"`
	// Code of the location
	Code string `pulumi:"code"`
	// Country of the location
	Country string `pulumi:"country"`
	// Latitude of the location
	Latitude float64 `pulumi:"latitude"`
	// Longitude of the location
	Longitude float64 `pulumi:"longitude"`
	// Metro code of the location
	MetroCode string `pulumi:"metroCode"`
	// Name of the component
	Name string `pulumi:"name"`
	// Postal code of the location
	PostalCode string `pulumi:"postalCode"`
	// Region of the location
	Region string `pulumi:"region"`
	// Region code of the location
	RegionCode string `pulumi:"regionCode"`
	// Timezone of the location
	Timezone string `pulumi:"timezone"`
}

// GetDatabasesDatabaseNodeLocationInput is an input type that accepts GetDatabasesDatabaseNodeLocationArgs and GetDatabasesDatabaseNodeLocationOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeLocationInput` via:
//
//	GetDatabasesDatabaseNodeLocationArgs{...}
type GetDatabasesDatabaseNodeLocationInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput
	ToGetDatabasesDatabaseNodeLocationOutputWithContext(context.Context) GetDatabasesDatabaseNodeLocationOutput
}

type GetDatabasesDatabaseNodeLocationArgs struct {
	// City of the location
	City pulumi.StringInput `pulumi:"city"`
	// Code of the location
	Code pulumi.StringInput `pulumi:"code"`
	// Country of the location
	Country pulumi.StringInput `pulumi:"country"`
	// Latitude of the location
	Latitude pulumi.Float64Input `pulumi:"latitude"`
	// Longitude of the location
	Longitude pulumi.Float64Input `pulumi:"longitude"`
	// Metro code of the location
	MetroCode pulumi.StringInput `pulumi:"metroCode"`
	// Name of the component
	Name pulumi.StringInput `pulumi:"name"`
	// Postal code of the location
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	// Region of the location
	Region pulumi.StringInput `pulumi:"region"`
	// Region code of the location
	RegionCode pulumi.StringInput `pulumi:"regionCode"`
	// Timezone of the location
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetDatabasesDatabaseNodeLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeLocation)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeLocationArgs) ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput {
	return i.ToGetDatabasesDatabaseNodeLocationOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeLocationArgs) ToGetDatabasesDatabaseNodeLocationOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeLocationOutput)
}

type GetDatabasesDatabaseNodeLocationOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeLocation)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeLocationOutput) ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput {
	return o
}

func (o GetDatabasesDatabaseNodeLocationOutput) ToGetDatabasesDatabaseNodeLocationOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeLocationOutput {
	return o
}

// City of the location
func (o GetDatabasesDatabaseNodeLocationOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.City }).(pulumi.StringOutput)
}

// Code of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Code }).(pulumi.StringOutput)
}

// Country of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Country }).(pulumi.StringOutput)
}

// Latitude of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) float64 { return v.Latitude }).(pulumi.Float64Output)
}

// Longitude of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) float64 { return v.Longitude }).(pulumi.Float64Output)
}

// Metro code of the location
func (o GetDatabasesDatabaseNodeLocationOutput) MetroCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.MetroCode }).(pulumi.StringOutput)
}

// Name of the component
func (o GetDatabasesDatabaseNodeLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Name }).(pulumi.StringOutput)
}

// Postal code of the location
func (o GetDatabasesDatabaseNodeLocationOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.PostalCode }).(pulumi.StringOutput)
}

// Region of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Region }).(pulumi.StringOutput)
}

// Region code of the location
func (o GetDatabasesDatabaseNodeLocationOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.RegionCode }).(pulumi.StringOutput)
}

// Timezone of the location
func (o GetDatabasesDatabaseNodeLocationOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Timezone }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseNodeRegion struct {
	// Active status of the region
	Active bool `pulumi:"active"`
	// Availability zones of the region
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Cloud provider of the region
	Cloud string `pulumi:"cloud"`
	// Code of the location
	Code string `pulumi:"code"`
	// Name of the component
	Name string `pulumi:"name"`
	// Parent region
	Parent string `pulumi:"parent"`
}

// GetDatabasesDatabaseNodeRegionInput is an input type that accepts GetDatabasesDatabaseNodeRegionArgs and GetDatabasesDatabaseNodeRegionOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeRegionInput` via:
//
//	GetDatabasesDatabaseNodeRegionArgs{...}
type GetDatabasesDatabaseNodeRegionInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeRegionOutput() GetDatabasesDatabaseNodeRegionOutput
	ToGetDatabasesDatabaseNodeRegionOutputWithContext(context.Context) GetDatabasesDatabaseNodeRegionOutput
}

type GetDatabasesDatabaseNodeRegionArgs struct {
	// Active status of the region
	Active pulumi.BoolInput `pulumi:"active"`
	// Availability zones of the region
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// Cloud provider of the region
	Cloud pulumi.StringInput `pulumi:"cloud"`
	// Code of the location
	Code pulumi.StringInput `pulumi:"code"`
	// Name of the component
	Name pulumi.StringInput `pulumi:"name"`
	// Parent region
	Parent pulumi.StringInput `pulumi:"parent"`
}

func (GetDatabasesDatabaseNodeRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeRegion)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeRegionArgs) ToGetDatabasesDatabaseNodeRegionOutput() GetDatabasesDatabaseNodeRegionOutput {
	return i.ToGetDatabasesDatabaseNodeRegionOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeRegionArgs) ToGetDatabasesDatabaseNodeRegionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeRegionOutput)
}

type GetDatabasesDatabaseNodeRegionOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeRegion)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeRegionOutput) ToGetDatabasesDatabaseNodeRegionOutput() GetDatabasesDatabaseNodeRegionOutput {
	return o
}

func (o GetDatabasesDatabaseNodeRegionOutput) ToGetDatabasesDatabaseNodeRegionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeRegionOutput {
	return o
}

// Active status of the region
func (o GetDatabasesDatabaseNodeRegionOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) bool { return v.Active }).(pulumi.BoolOutput)
}

// Availability zones of the region
func (o GetDatabasesDatabaseNodeRegionOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Cloud provider of the region
func (o GetDatabasesDatabaseNodeRegionOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) string { return v.Cloud }).(pulumi.StringOutput)
}

// Code of the location
func (o GetDatabasesDatabaseNodeRegionOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) string { return v.Code }).(pulumi.StringOutput)
}

// Name of the component
func (o GetDatabasesDatabaseNodeRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) string { return v.Name }).(pulumi.StringOutput)
}

// Parent region
func (o GetDatabasesDatabaseNodeRegionOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) string { return v.Parent }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseRole struct {
	// Bypass RLS
	BypassRls bool `pulumi:"bypassRls"`
	// Connection limit
	ConnectionLimit int `pulumi:"connectionLimit"`
	// Create database
	CreateDb bool `pulumi:"createDb"`
	// Create role
	CreateRole bool `pulumi:"createRole"`
	// Inherit
	Inherit bool `pulumi:"inherit"`
	// Login
	Login bool `pulumi:"login"`
	// Name of the component
	Name string `pulumi:"name"`
	// Replication
	Replication bool `pulumi:"replication"`
	// Superuser
	Superuser bool `pulumi:"superuser"`
}

// GetDatabasesDatabaseRoleInput is an input type that accepts GetDatabasesDatabaseRoleArgs and GetDatabasesDatabaseRoleOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseRoleInput` via:
//
//	GetDatabasesDatabaseRoleArgs{...}
type GetDatabasesDatabaseRoleInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseRoleOutput() GetDatabasesDatabaseRoleOutput
	ToGetDatabasesDatabaseRoleOutputWithContext(context.Context) GetDatabasesDatabaseRoleOutput
}

type GetDatabasesDatabaseRoleArgs struct {
	// Bypass RLS
	BypassRls pulumi.BoolInput `pulumi:"bypassRls"`
	// Connection limit
	ConnectionLimit pulumi.IntInput `pulumi:"connectionLimit"`
	// Create database
	CreateDb pulumi.BoolInput `pulumi:"createDb"`
	// Create role
	CreateRole pulumi.BoolInput `pulumi:"createRole"`
	// Inherit
	Inherit pulumi.BoolInput `pulumi:"inherit"`
	// Login
	Login pulumi.BoolInput `pulumi:"login"`
	// Name of the component
	Name pulumi.StringInput `pulumi:"name"`
	// Replication
	Replication pulumi.BoolInput `pulumi:"replication"`
	// Superuser
	Superuser pulumi.BoolInput `pulumi:"superuser"`
}

func (GetDatabasesDatabaseRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseRole)(nil)).Elem()
}

func (i GetDatabasesDatabaseRoleArgs) ToGetDatabasesDatabaseRoleOutput() GetDatabasesDatabaseRoleOutput {
	return i.ToGetDatabasesDatabaseRoleOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseRoleArgs) ToGetDatabasesDatabaseRoleOutputWithContext(ctx context.Context) GetDatabasesDatabaseRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseRoleOutput)
}

// GetDatabasesDatabaseRoleArrayInput is an input type that accepts GetDatabasesDatabaseRoleArray and GetDatabasesDatabaseRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseRoleArrayInput` via:
//
//	GetDatabasesDatabaseRoleArray{ GetDatabasesDatabaseRoleArgs{...} }
type GetDatabasesDatabaseRoleArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseRoleArrayOutput() GetDatabasesDatabaseRoleArrayOutput
	ToGetDatabasesDatabaseRoleArrayOutputWithContext(context.Context) GetDatabasesDatabaseRoleArrayOutput
}

type GetDatabasesDatabaseRoleArray []GetDatabasesDatabaseRoleInput

func (GetDatabasesDatabaseRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseRole)(nil)).Elem()
}

func (i GetDatabasesDatabaseRoleArray) ToGetDatabasesDatabaseRoleArrayOutput() GetDatabasesDatabaseRoleArrayOutput {
	return i.ToGetDatabasesDatabaseRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseRoleArray) ToGetDatabasesDatabaseRoleArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseRoleArrayOutput)
}

type GetDatabasesDatabaseRoleOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseRole)(nil)).Elem()
}

func (o GetDatabasesDatabaseRoleOutput) ToGetDatabasesDatabaseRoleOutput() GetDatabasesDatabaseRoleOutput {
	return o
}

func (o GetDatabasesDatabaseRoleOutput) ToGetDatabasesDatabaseRoleOutputWithContext(ctx context.Context) GetDatabasesDatabaseRoleOutput {
	return o
}

// Bypass RLS
func (o GetDatabasesDatabaseRoleOutput) BypassRls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.BypassRls }).(pulumi.BoolOutput)
}

// Connection limit
func (o GetDatabasesDatabaseRoleOutput) ConnectionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) int { return v.ConnectionLimit }).(pulumi.IntOutput)
}

// Create database
func (o GetDatabasesDatabaseRoleOutput) CreateDb() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.CreateDb }).(pulumi.BoolOutput)
}

// Create role
func (o GetDatabasesDatabaseRoleOutput) CreateRole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.CreateRole }).(pulumi.BoolOutput)
}

// Inherit
func (o GetDatabasesDatabaseRoleOutput) Inherit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.Inherit }).(pulumi.BoolOutput)
}

// Login
func (o GetDatabasesDatabaseRoleOutput) Login() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.Login }).(pulumi.BoolOutput)
}

// Name of the component
func (o GetDatabasesDatabaseRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) string { return v.Name }).(pulumi.StringOutput)
}

// Replication
func (o GetDatabasesDatabaseRoleOutput) Replication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.Replication }).(pulumi.BoolOutput)
}

// Superuser
func (o GetDatabasesDatabaseRoleOutput) Superuser() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.Superuser }).(pulumi.BoolOutput)
}

type GetDatabasesDatabaseRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseRole)(nil)).Elem()
}

func (o GetDatabasesDatabaseRoleArrayOutput) ToGetDatabasesDatabaseRoleArrayOutput() GetDatabasesDatabaseRoleArrayOutput {
	return o
}

func (o GetDatabasesDatabaseRoleArrayOutput) ToGetDatabasesDatabaseRoleArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseRoleArrayOutput {
	return o
}

func (o GetDatabasesDatabaseRoleArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseRole {
		return vs[0].([]GetDatabasesDatabaseRole)[vs[1].(int)]
	}).(GetDatabasesDatabaseRoleOutput)
}

type GetDatabasesDatabaseTable struct {
	Columns []GetDatabasesDatabaseTableColumn `pulumi:"columns"`
	// Name of the component
	Name string `pulumi:"name"`
	// Primary key of the table
	PrimaryKeys []string `pulumi:"primaryKeys"`
	// Replication sets of the table
	ReplicationSets []string `pulumi:"replicationSets"`
	// Schema of the table
	Schema string `pulumi:"schema"`
	// Status of the component
	Statuses []GetDatabasesDatabaseTableStatus `pulumi:"statuses"`
}

// GetDatabasesDatabaseTableInput is an input type that accepts GetDatabasesDatabaseTableArgs and GetDatabasesDatabaseTableOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseTableInput` via:
//
//	GetDatabasesDatabaseTableArgs{...}
type GetDatabasesDatabaseTableInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseTableOutput() GetDatabasesDatabaseTableOutput
	ToGetDatabasesDatabaseTableOutputWithContext(context.Context) GetDatabasesDatabaseTableOutput
}

type GetDatabasesDatabaseTableArgs struct {
	Columns GetDatabasesDatabaseTableColumnArrayInput `pulumi:"columns"`
	// Name of the component
	Name pulumi.StringInput `pulumi:"name"`
	// Primary key of the table
	PrimaryKeys pulumi.StringArrayInput `pulumi:"primaryKeys"`
	// Replication sets of the table
	ReplicationSets pulumi.StringArrayInput `pulumi:"replicationSets"`
	// Schema of the table
	Schema pulumi.StringInput `pulumi:"schema"`
	// Status of the component
	Statuses GetDatabasesDatabaseTableStatusArrayInput `pulumi:"statuses"`
}

func (GetDatabasesDatabaseTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseTable)(nil)).Elem()
}

func (i GetDatabasesDatabaseTableArgs) ToGetDatabasesDatabaseTableOutput() GetDatabasesDatabaseTableOutput {
	return i.ToGetDatabasesDatabaseTableOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseTableArgs) ToGetDatabasesDatabaseTableOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseTableOutput)
}

// GetDatabasesDatabaseTableArrayInput is an input type that accepts GetDatabasesDatabaseTableArray and GetDatabasesDatabaseTableArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseTableArrayInput` via:
//
//	GetDatabasesDatabaseTableArray{ GetDatabasesDatabaseTableArgs{...} }
type GetDatabasesDatabaseTableArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseTableArrayOutput() GetDatabasesDatabaseTableArrayOutput
	ToGetDatabasesDatabaseTableArrayOutputWithContext(context.Context) GetDatabasesDatabaseTableArrayOutput
}

type GetDatabasesDatabaseTableArray []GetDatabasesDatabaseTableInput

func (GetDatabasesDatabaseTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseTable)(nil)).Elem()
}

func (i GetDatabasesDatabaseTableArray) ToGetDatabasesDatabaseTableArrayOutput() GetDatabasesDatabaseTableArrayOutput {
	return i.ToGetDatabasesDatabaseTableArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseTableArray) ToGetDatabasesDatabaseTableArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseTableArrayOutput)
}

type GetDatabasesDatabaseTableOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseTable)(nil)).Elem()
}

func (o GetDatabasesDatabaseTableOutput) ToGetDatabasesDatabaseTableOutput() GetDatabasesDatabaseTableOutput {
	return o
}

func (o GetDatabasesDatabaseTableOutput) ToGetDatabasesDatabaseTableOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableOutput {
	return o
}

func (o GetDatabasesDatabaseTableOutput) Columns() GetDatabasesDatabaseTableColumnArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTable) []GetDatabasesDatabaseTableColumn { return v.Columns }).(GetDatabasesDatabaseTableColumnArrayOutput)
}

// Name of the component
func (o GetDatabasesDatabaseTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTable) string { return v.Name }).(pulumi.StringOutput)
}

// Primary key of the table
func (o GetDatabasesDatabaseTableOutput) PrimaryKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTable) []string { return v.PrimaryKeys }).(pulumi.StringArrayOutput)
}

// Replication sets of the table
func (o GetDatabasesDatabaseTableOutput) ReplicationSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTable) []string { return v.ReplicationSets }).(pulumi.StringArrayOutput)
}

// Schema of the table
func (o GetDatabasesDatabaseTableOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTable) string { return v.Schema }).(pulumi.StringOutput)
}

// Status of the component
func (o GetDatabasesDatabaseTableOutput) Statuses() GetDatabasesDatabaseTableStatusArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTable) []GetDatabasesDatabaseTableStatus { return v.Statuses }).(GetDatabasesDatabaseTableStatusArrayOutput)
}

type GetDatabasesDatabaseTableArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseTable)(nil)).Elem()
}

func (o GetDatabasesDatabaseTableArrayOutput) ToGetDatabasesDatabaseTableArrayOutput() GetDatabasesDatabaseTableArrayOutput {
	return o
}

func (o GetDatabasesDatabaseTableArrayOutput) ToGetDatabasesDatabaseTableArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableArrayOutput {
	return o
}

func (o GetDatabasesDatabaseTableArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseTable {
		return vs[0].([]GetDatabasesDatabaseTable)[vs[1].(int)]
	}).(GetDatabasesDatabaseTableOutput)
}

type GetDatabasesDatabaseTableColumn struct {
	// Data type of the column
	DataType string `pulumi:"dataType"`
	// Default of the column
	Default string `pulumi:"default"`
	// Is nullable of the column
	IsNullable bool `pulumi:"isNullable"`
	// Is primary key of the column
	IsPrimaryKey bool `pulumi:"isPrimaryKey"`
	// Name of the component
	Name string `pulumi:"name"`
	// Ordinal position of the column
	OrdinalPosition int `pulumi:"ordinalPosition"`
}

// GetDatabasesDatabaseTableColumnInput is an input type that accepts GetDatabasesDatabaseTableColumnArgs and GetDatabasesDatabaseTableColumnOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseTableColumnInput` via:
//
//	GetDatabasesDatabaseTableColumnArgs{...}
type GetDatabasesDatabaseTableColumnInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseTableColumnOutput() GetDatabasesDatabaseTableColumnOutput
	ToGetDatabasesDatabaseTableColumnOutputWithContext(context.Context) GetDatabasesDatabaseTableColumnOutput
}

type GetDatabasesDatabaseTableColumnArgs struct {
	// Data type of the column
	DataType pulumi.StringInput `pulumi:"dataType"`
	// Default of the column
	Default pulumi.StringInput `pulumi:"default"`
	// Is nullable of the column
	IsNullable pulumi.BoolInput `pulumi:"isNullable"`
	// Is primary key of the column
	IsPrimaryKey pulumi.BoolInput `pulumi:"isPrimaryKey"`
	// Name of the component
	Name pulumi.StringInput `pulumi:"name"`
	// Ordinal position of the column
	OrdinalPosition pulumi.IntInput `pulumi:"ordinalPosition"`
}

func (GetDatabasesDatabaseTableColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseTableColumn)(nil)).Elem()
}

func (i GetDatabasesDatabaseTableColumnArgs) ToGetDatabasesDatabaseTableColumnOutput() GetDatabasesDatabaseTableColumnOutput {
	return i.ToGetDatabasesDatabaseTableColumnOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseTableColumnArgs) ToGetDatabasesDatabaseTableColumnOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseTableColumnOutput)
}

// GetDatabasesDatabaseTableColumnArrayInput is an input type that accepts GetDatabasesDatabaseTableColumnArray and GetDatabasesDatabaseTableColumnArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseTableColumnArrayInput` via:
//
//	GetDatabasesDatabaseTableColumnArray{ GetDatabasesDatabaseTableColumnArgs{...} }
type GetDatabasesDatabaseTableColumnArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseTableColumnArrayOutput() GetDatabasesDatabaseTableColumnArrayOutput
	ToGetDatabasesDatabaseTableColumnArrayOutputWithContext(context.Context) GetDatabasesDatabaseTableColumnArrayOutput
}

type GetDatabasesDatabaseTableColumnArray []GetDatabasesDatabaseTableColumnInput

func (GetDatabasesDatabaseTableColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseTableColumn)(nil)).Elem()
}

func (i GetDatabasesDatabaseTableColumnArray) ToGetDatabasesDatabaseTableColumnArrayOutput() GetDatabasesDatabaseTableColumnArrayOutput {
	return i.ToGetDatabasesDatabaseTableColumnArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseTableColumnArray) ToGetDatabasesDatabaseTableColumnArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseTableColumnArrayOutput)
}

type GetDatabasesDatabaseTableColumnOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseTableColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseTableColumn)(nil)).Elem()
}

func (o GetDatabasesDatabaseTableColumnOutput) ToGetDatabasesDatabaseTableColumnOutput() GetDatabasesDatabaseTableColumnOutput {
	return o
}

func (o GetDatabasesDatabaseTableColumnOutput) ToGetDatabasesDatabaseTableColumnOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableColumnOutput {
	return o
}

// Data type of the column
func (o GetDatabasesDatabaseTableColumnOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableColumn) string { return v.DataType }).(pulumi.StringOutput)
}

// Default of the column
func (o GetDatabasesDatabaseTableColumnOutput) Default() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableColumn) string { return v.Default }).(pulumi.StringOutput)
}

// Is nullable of the column
func (o GetDatabasesDatabaseTableColumnOutput) IsNullable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableColumn) bool { return v.IsNullable }).(pulumi.BoolOutput)
}

// Is primary key of the column
func (o GetDatabasesDatabaseTableColumnOutput) IsPrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableColumn) bool { return v.IsPrimaryKey }).(pulumi.BoolOutput)
}

// Name of the component
func (o GetDatabasesDatabaseTableColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableColumn) string { return v.Name }).(pulumi.StringOutput)
}

// Ordinal position of the column
func (o GetDatabasesDatabaseTableColumnOutput) OrdinalPosition() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableColumn) int { return v.OrdinalPosition }).(pulumi.IntOutput)
}

type GetDatabasesDatabaseTableColumnArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseTableColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseTableColumn)(nil)).Elem()
}

func (o GetDatabasesDatabaseTableColumnArrayOutput) ToGetDatabasesDatabaseTableColumnArrayOutput() GetDatabasesDatabaseTableColumnArrayOutput {
	return o
}

func (o GetDatabasesDatabaseTableColumnArrayOutput) ToGetDatabasesDatabaseTableColumnArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableColumnArrayOutput {
	return o
}

func (o GetDatabasesDatabaseTableColumnArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseTableColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseTableColumn {
		return vs[0].([]GetDatabasesDatabaseTableColumn)[vs[1].(int)]
	}).(GetDatabasesDatabaseTableColumnOutput)
}

type GetDatabasesDatabaseTableStatus struct {
	// Aligned of the table
	Aligned bool `pulumi:"aligned"`
	// Node name of the table
	NodeName string `pulumi:"nodeName"`
	// Present of the table
	Present bool `pulumi:"present"`
	// Replicating of the table
	Replicating bool `pulumi:"replicating"`
}

// GetDatabasesDatabaseTableStatusInput is an input type that accepts GetDatabasesDatabaseTableStatusArgs and GetDatabasesDatabaseTableStatusOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseTableStatusInput` via:
//
//	GetDatabasesDatabaseTableStatusArgs{...}
type GetDatabasesDatabaseTableStatusInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseTableStatusOutput() GetDatabasesDatabaseTableStatusOutput
	ToGetDatabasesDatabaseTableStatusOutputWithContext(context.Context) GetDatabasesDatabaseTableStatusOutput
}

type GetDatabasesDatabaseTableStatusArgs struct {
	// Aligned of the table
	Aligned pulumi.BoolInput `pulumi:"aligned"`
	// Node name of the table
	NodeName pulumi.StringInput `pulumi:"nodeName"`
	// Present of the table
	Present pulumi.BoolInput `pulumi:"present"`
	// Replicating of the table
	Replicating pulumi.BoolInput `pulumi:"replicating"`
}

func (GetDatabasesDatabaseTableStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseTableStatus)(nil)).Elem()
}

func (i GetDatabasesDatabaseTableStatusArgs) ToGetDatabasesDatabaseTableStatusOutput() GetDatabasesDatabaseTableStatusOutput {
	return i.ToGetDatabasesDatabaseTableStatusOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseTableStatusArgs) ToGetDatabasesDatabaseTableStatusOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseTableStatusOutput)
}

// GetDatabasesDatabaseTableStatusArrayInput is an input type that accepts GetDatabasesDatabaseTableStatusArray and GetDatabasesDatabaseTableStatusArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseTableStatusArrayInput` via:
//
//	GetDatabasesDatabaseTableStatusArray{ GetDatabasesDatabaseTableStatusArgs{...} }
type GetDatabasesDatabaseTableStatusArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseTableStatusArrayOutput() GetDatabasesDatabaseTableStatusArrayOutput
	ToGetDatabasesDatabaseTableStatusArrayOutputWithContext(context.Context) GetDatabasesDatabaseTableStatusArrayOutput
}

type GetDatabasesDatabaseTableStatusArray []GetDatabasesDatabaseTableStatusInput

func (GetDatabasesDatabaseTableStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseTableStatus)(nil)).Elem()
}

func (i GetDatabasesDatabaseTableStatusArray) ToGetDatabasesDatabaseTableStatusArrayOutput() GetDatabasesDatabaseTableStatusArrayOutput {
	return i.ToGetDatabasesDatabaseTableStatusArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseTableStatusArray) ToGetDatabasesDatabaseTableStatusArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseTableStatusArrayOutput)
}

type GetDatabasesDatabaseTableStatusOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseTableStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseTableStatus)(nil)).Elem()
}

func (o GetDatabasesDatabaseTableStatusOutput) ToGetDatabasesDatabaseTableStatusOutput() GetDatabasesDatabaseTableStatusOutput {
	return o
}

func (o GetDatabasesDatabaseTableStatusOutput) ToGetDatabasesDatabaseTableStatusOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableStatusOutput {
	return o
}

// Aligned of the table
func (o GetDatabasesDatabaseTableStatusOutput) Aligned() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableStatus) bool { return v.Aligned }).(pulumi.BoolOutput)
}

// Node name of the table
func (o GetDatabasesDatabaseTableStatusOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableStatus) string { return v.NodeName }).(pulumi.StringOutput)
}

// Present of the table
func (o GetDatabasesDatabaseTableStatusOutput) Present() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableStatus) bool { return v.Present }).(pulumi.BoolOutput)
}

// Replicating of the table
func (o GetDatabasesDatabaseTableStatusOutput) Replicating() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseTableStatus) bool { return v.Replicating }).(pulumi.BoolOutput)
}

type GetDatabasesDatabaseTableStatusArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseTableStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseTableStatus)(nil)).Elem()
}

func (o GetDatabasesDatabaseTableStatusArrayOutput) ToGetDatabasesDatabaseTableStatusArrayOutput() GetDatabasesDatabaseTableStatusArrayOutput {
	return o
}

func (o GetDatabasesDatabaseTableStatusArrayOutput) ToGetDatabasesDatabaseTableStatusArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseTableStatusArrayOutput {
	return o
}

func (o GetDatabasesDatabaseTableStatusArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseTableStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseTableStatus {
		return vs[0].([]GetDatabasesDatabaseTableStatus)[vs[1].(int)]
	}).(GetDatabasesDatabaseTableStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFirewallRuleInput)(nil)).Elem(), ClusterFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFirewallRuleArrayInput)(nil)).Elem(), ClusterFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkInput)(nil)).Elem(), ClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkArrayInput)(nil)).Elem(), ClusterNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeInput)(nil)).Elem(), ClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeArrayInput)(nil)).Elem(), ClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterInput)(nil)).Elem(), GetClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterArrayInput)(nil)).Elem(), GetClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterCloudAccountInput)(nil)).Elem(), GetClustersClusterCloudAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterFirewallRuleInput)(nil)).Elem(), GetClustersClusterFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterFirewallRuleArrayInput)(nil)).Elem(), GetClustersClusterFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNetworkInput)(nil)).Elem(), GetClustersClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNetworkArrayInput)(nil)).Elem(), GetClustersClusterNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeInput)(nil)).Elem(), GetClustersClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeArrayInput)(nil)).Elem(), GetClustersClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseInput)(nil)).Elem(), GetDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseArrayInput)(nil)).Elem(), GetDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseComponentInput)(nil)).Elem(), GetDatabasesDatabaseComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseComponentArrayInput)(nil)).Elem(), GetDatabasesDatabaseComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseExtensionsInput)(nil)).Elem(), GetDatabasesDatabaseExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeInput)(nil)).Elem(), GetDatabasesDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeArrayInput)(nil)).Elem(), GetDatabasesDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeConnectionInput)(nil)).Elem(), GetDatabasesDatabaseNodeConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeDistanceMeasurementInput)(nil)).Elem(), GetDatabasesDatabaseNodeDistanceMeasurementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeExtensionsInput)(nil)).Elem(), GetDatabasesDatabaseNodeExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeExtensionsErrorsInput)(nil)).Elem(), GetDatabasesDatabaseNodeExtensionsErrorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeLocationInput)(nil)).Elem(), GetDatabasesDatabaseNodeLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeRegionInput)(nil)).Elem(), GetDatabasesDatabaseNodeRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseRoleInput)(nil)).Elem(), GetDatabasesDatabaseRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseRoleArrayInput)(nil)).Elem(), GetDatabasesDatabaseRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseTableInput)(nil)).Elem(), GetDatabasesDatabaseTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseTableArrayInput)(nil)).Elem(), GetDatabasesDatabaseTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseTableColumnInput)(nil)).Elem(), GetDatabasesDatabaseTableColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseTableColumnArrayInput)(nil)).Elem(), GetDatabasesDatabaseTableColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseTableStatusInput)(nil)).Elem(), GetDatabasesDatabaseTableStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseTableStatusArrayInput)(nil)).Elem(), GetDatabasesDatabaseTableStatusArray{})
	pulumi.RegisterOutputType(ClusterFirewallRuleOutput{})
	pulumi.RegisterOutputType(ClusterFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(ClusterNetworkOutput{})
	pulumi.RegisterOutputType(ClusterNetworkArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeOutput{})
	pulumi.RegisterOutputType(ClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterOutput{})
	pulumi.RegisterOutputType(GetClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterCloudAccountOutput{})
	pulumi.RegisterOutputType(GetClustersClusterFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetClustersClusterFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNetworkOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseComponentOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseComponentArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseExtensionsOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeConnectionOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeDistanceMeasurementOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeExtensionsOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeExtensionsErrorsOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeLocationOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeRegionOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseRoleOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseTableOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseTableArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseTableColumnOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseTableColumnArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseTableStatusOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseTableStatusArrayOutput{})
}
