// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pgedge

import (
	"context"
	"reflect"

	"github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterFirewallRule struct {
	Name    string   `pulumi:"name"`
	Port    int      `pulumi:"port"`
	Sources []string `pulumi:"sources"`
}

// ClusterFirewallRuleInput is an input type that accepts ClusterFirewallRuleArgs and ClusterFirewallRuleOutput values.
// You can construct a concrete instance of `ClusterFirewallRuleInput` via:
//
//	ClusterFirewallRuleArgs{...}
type ClusterFirewallRuleInput interface {
	pulumi.Input

	ToClusterFirewallRuleOutput() ClusterFirewallRuleOutput
	ToClusterFirewallRuleOutputWithContext(context.Context) ClusterFirewallRuleOutput
}

type ClusterFirewallRuleArgs struct {
	Name    pulumi.StringInput      `pulumi:"name"`
	Port    pulumi.IntInput         `pulumi:"port"`
	Sources pulumi.StringArrayInput `pulumi:"sources"`
}

func (ClusterFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFirewallRule)(nil)).Elem()
}

func (i ClusterFirewallRuleArgs) ToClusterFirewallRuleOutput() ClusterFirewallRuleOutput {
	return i.ToClusterFirewallRuleOutputWithContext(context.Background())
}

func (i ClusterFirewallRuleArgs) ToClusterFirewallRuleOutputWithContext(ctx context.Context) ClusterFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirewallRuleOutput)
}

// ClusterFirewallRuleArrayInput is an input type that accepts ClusterFirewallRuleArray and ClusterFirewallRuleArrayOutput values.
// You can construct a concrete instance of `ClusterFirewallRuleArrayInput` via:
//
//	ClusterFirewallRuleArray{ ClusterFirewallRuleArgs{...} }
type ClusterFirewallRuleArrayInput interface {
	pulumi.Input

	ToClusterFirewallRuleArrayOutput() ClusterFirewallRuleArrayOutput
	ToClusterFirewallRuleArrayOutputWithContext(context.Context) ClusterFirewallRuleArrayOutput
}

type ClusterFirewallRuleArray []ClusterFirewallRuleInput

func (ClusterFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFirewallRule)(nil)).Elem()
}

func (i ClusterFirewallRuleArray) ToClusterFirewallRuleArrayOutput() ClusterFirewallRuleArrayOutput {
	return i.ToClusterFirewallRuleArrayOutputWithContext(context.Background())
}

func (i ClusterFirewallRuleArray) ToClusterFirewallRuleArrayOutputWithContext(ctx context.Context) ClusterFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirewallRuleArrayOutput)
}

type ClusterFirewallRuleOutput struct{ *pulumi.OutputState }

func (ClusterFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFirewallRule)(nil)).Elem()
}

func (o ClusterFirewallRuleOutput) ToClusterFirewallRuleOutput() ClusterFirewallRuleOutput {
	return o
}

func (o ClusterFirewallRuleOutput) ToClusterFirewallRuleOutputWithContext(ctx context.Context) ClusterFirewallRuleOutput {
	return o
}

func (o ClusterFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o ClusterFirewallRuleOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterFirewallRule) int { return v.Port }).(pulumi.IntOutput)
}

func (o ClusterFirewallRuleOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterFirewallRule) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

type ClusterFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (ClusterFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterFirewallRule)(nil)).Elem()
}

func (o ClusterFirewallRuleArrayOutput) ToClusterFirewallRuleArrayOutput() ClusterFirewallRuleArrayOutput {
	return o
}

func (o ClusterFirewallRuleArrayOutput) ToClusterFirewallRuleArrayOutputWithContext(ctx context.Context) ClusterFirewallRuleArrayOutput {
	return o
}

func (o ClusterFirewallRuleArrayOutput) Index(i pulumi.IntInput) ClusterFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterFirewallRule {
		return vs[0].([]ClusterFirewallRule)[vs[1].(int)]
	}).(ClusterFirewallRuleOutput)
}

type ClusterNetwork struct {
	// CIDR of the network
	Cidr string `pulumi:"cidr"`
	// Whether the network is external
	External *bool `pulumi:"external"`
	// External ID of the network
	ExternalId *string `pulumi:"externalId"`
	// Name of the network
	Name *string `pulumi:"name"`
	// List of private subnets
	PrivateSubnets []string `pulumi:"privateSubnets"`
	// List of public subnets
	PublicSubnets []string `pulumi:"publicSubnets"`
	// Region of the network
	Region string `pulumi:"region"`
}

// ClusterNetworkInput is an input type that accepts ClusterNetworkArgs and ClusterNetworkOutput values.
// You can construct a concrete instance of `ClusterNetworkInput` via:
//
//	ClusterNetworkArgs{...}
type ClusterNetworkInput interface {
	pulumi.Input

	ToClusterNetworkOutput() ClusterNetworkOutput
	ToClusterNetworkOutputWithContext(context.Context) ClusterNetworkOutput
}

type ClusterNetworkArgs struct {
	// CIDR of the network
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Whether the network is external
	External pulumi.BoolPtrInput `pulumi:"external"`
	// External ID of the network
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// Name of the network
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of private subnets
	PrivateSubnets pulumi.StringArrayInput `pulumi:"privateSubnets"`
	// List of public subnets
	PublicSubnets pulumi.StringArrayInput `pulumi:"publicSubnets"`
	// Region of the network
	Region pulumi.StringInput `pulumi:"region"`
}

func (ClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetwork)(nil)).Elem()
}

func (i ClusterNetworkArgs) ToClusterNetworkOutput() ClusterNetworkOutput {
	return i.ToClusterNetworkOutputWithContext(context.Background())
}

func (i ClusterNetworkArgs) ToClusterNetworkOutputWithContext(ctx context.Context) ClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkOutput)
}

// ClusterNetworkArrayInput is an input type that accepts ClusterNetworkArray and ClusterNetworkArrayOutput values.
// You can construct a concrete instance of `ClusterNetworkArrayInput` via:
//
//	ClusterNetworkArray{ ClusterNetworkArgs{...} }
type ClusterNetworkArrayInput interface {
	pulumi.Input

	ToClusterNetworkArrayOutput() ClusterNetworkArrayOutput
	ToClusterNetworkArrayOutputWithContext(context.Context) ClusterNetworkArrayOutput
}

type ClusterNetworkArray []ClusterNetworkInput

func (ClusterNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNetwork)(nil)).Elem()
}

func (i ClusterNetworkArray) ToClusterNetworkArrayOutput() ClusterNetworkArrayOutput {
	return i.ToClusterNetworkArrayOutputWithContext(context.Background())
}

func (i ClusterNetworkArray) ToClusterNetworkArrayOutputWithContext(ctx context.Context) ClusterNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkArrayOutput)
}

type ClusterNetworkOutput struct{ *pulumi.OutputState }

func (ClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetwork)(nil)).Elem()
}

func (o ClusterNetworkOutput) ToClusterNetworkOutput() ClusterNetworkOutput {
	return o
}

func (o ClusterNetworkOutput) ToClusterNetworkOutputWithContext(ctx context.Context) ClusterNetworkOutput {
	return o
}

// CIDR of the network
func (o ClusterNetworkOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetwork) string { return v.Cidr }).(pulumi.StringOutput)
}

// Whether the network is external
func (o ClusterNetworkOutput) External() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *bool { return v.External }).(pulumi.BoolPtrOutput)
}

// External ID of the network
func (o ClusterNetworkOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// Name of the network
func (o ClusterNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of private subnets
func (o ClusterNetworkOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetwork) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

// List of public subnets
func (o ClusterNetworkOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetwork) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the network
func (o ClusterNetworkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetwork) string { return v.Region }).(pulumi.StringOutput)
}

type ClusterNetworkArrayOutput struct{ *pulumi.OutputState }

func (ClusterNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNetwork)(nil)).Elem()
}

func (o ClusterNetworkArrayOutput) ToClusterNetworkArrayOutput() ClusterNetworkArrayOutput {
	return o
}

func (o ClusterNetworkArrayOutput) ToClusterNetworkArrayOutputWithContext(ctx context.Context) ClusterNetworkArrayOutput {
	return o
}

func (o ClusterNetworkArrayOutput) Index(i pulumi.IntInput) ClusterNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNetwork {
		return vs[0].([]ClusterNetwork)[vs[1].(int)]
	}).(ClusterNetworkOutput)
}

type ClusterNode struct {
	AvailabilityZone *string `pulumi:"availabilityZone"`
	InstanceType     string  `pulumi:"instanceType"`
	Name             string  `pulumi:"name"`
	Region           string  `pulumi:"region"`
	VolumeIops       *int    `pulumi:"volumeIops"`
	VolumeSize       *int    `pulumi:"volumeSize"`
	VolumeType       *string `pulumi:"volumeType"`
}

// ClusterNodeInput is an input type that accepts ClusterNodeArgs and ClusterNodeOutput values.
// You can construct a concrete instance of `ClusterNodeInput` via:
//
//	ClusterNodeArgs{...}
type ClusterNodeInput interface {
	pulumi.Input

	ToClusterNodeOutput() ClusterNodeOutput
	ToClusterNodeOutputWithContext(context.Context) ClusterNodeOutput
}

type ClusterNodeArgs struct {
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	InstanceType     pulumi.StringInput    `pulumi:"instanceType"`
	Name             pulumi.StringInput    `pulumi:"name"`
	Region           pulumi.StringInput    `pulumi:"region"`
	VolumeIops       pulumi.IntPtrInput    `pulumi:"volumeIops"`
	VolumeSize       pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType       pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNode)(nil)).Elem()
}

func (i ClusterNodeArgs) ToClusterNodeOutput() ClusterNodeOutput {
	return i.ToClusterNodeOutputWithContext(context.Background())
}

func (i ClusterNodeArgs) ToClusterNodeOutputWithContext(ctx context.Context) ClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeOutput)
}

// ClusterNodeArrayInput is an input type that accepts ClusterNodeArray and ClusterNodeArrayOutput values.
// You can construct a concrete instance of `ClusterNodeArrayInput` via:
//
//	ClusterNodeArray{ ClusterNodeArgs{...} }
type ClusterNodeArrayInput interface {
	pulumi.Input

	ToClusterNodeArrayOutput() ClusterNodeArrayOutput
	ToClusterNodeArrayOutputWithContext(context.Context) ClusterNodeArrayOutput
}

type ClusterNodeArray []ClusterNodeInput

func (ClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNode)(nil)).Elem()
}

func (i ClusterNodeArray) ToClusterNodeArrayOutput() ClusterNodeArrayOutput {
	return i.ToClusterNodeArrayOutputWithContext(context.Background())
}

func (i ClusterNodeArray) ToClusterNodeArrayOutputWithContext(ctx context.Context) ClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeArrayOutput)
}

type ClusterNodeOutput struct{ *pulumi.OutputState }

func (ClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNode)(nil)).Elem()
}

func (o ClusterNodeOutput) ToClusterNodeOutput() ClusterNodeOutput {
	return o
}

func (o ClusterNodeOutput) ToClusterNodeOutputWithContext(ctx context.Context) ClusterNodeOutput {
	return o
}

func (o ClusterNodeOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o ClusterNodeOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNode) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o ClusterNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNode) string { return v.Name }).(pulumi.StringOutput)
}

func (o ClusterNodeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNode) string { return v.Region }).(pulumi.StringOutput)
}

func (o ClusterNodeOutput) VolumeIops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNode) *int { return v.VolumeIops }).(pulumi.IntPtrOutput)
}

func (o ClusterNodeOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNode) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o ClusterNodeOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNode)(nil)).Elem()
}

func (o ClusterNodeArrayOutput) ToClusterNodeArrayOutput() ClusterNodeArrayOutput {
	return o
}

func (o ClusterNodeArrayOutput) ToClusterNodeArrayOutputWithContext(ctx context.Context) ClusterNodeArrayOutput {
	return o
}

func (o ClusterNodeArrayOutput) Index(i pulumi.IntInput) ClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNode {
		return vs[0].([]ClusterNode)[vs[1].(int)]
	}).(ClusterNodeOutput)
}

type DatabaseBackups struct {
	// List of backup configurations.
	Configs []DatabaseBackupsConfig `pulumi:"configs"`
	// The backup provider.
	Provider *string `pulumi:"provider"`
}

// DatabaseBackupsInput is an input type that accepts DatabaseBackupsArgs and DatabaseBackupsOutput values.
// You can construct a concrete instance of `DatabaseBackupsInput` via:
//
//	DatabaseBackupsArgs{...}
type DatabaseBackupsInput interface {
	pulumi.Input

	ToDatabaseBackupsOutput() DatabaseBackupsOutput
	ToDatabaseBackupsOutputWithContext(context.Context) DatabaseBackupsOutput
}

type DatabaseBackupsArgs struct {
	// List of backup configurations.
	Configs DatabaseBackupsConfigArrayInput `pulumi:"configs"`
	// The backup provider.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (DatabaseBackupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackups)(nil)).Elem()
}

func (i DatabaseBackupsArgs) ToDatabaseBackupsOutput() DatabaseBackupsOutput {
	return i.ToDatabaseBackupsOutputWithContext(context.Background())
}

func (i DatabaseBackupsArgs) ToDatabaseBackupsOutputWithContext(ctx context.Context) DatabaseBackupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsOutput)
}

func (i DatabaseBackupsArgs) ToDatabaseBackupsPtrOutput() DatabaseBackupsPtrOutput {
	return i.ToDatabaseBackupsPtrOutputWithContext(context.Background())
}

func (i DatabaseBackupsArgs) ToDatabaseBackupsPtrOutputWithContext(ctx context.Context) DatabaseBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsOutput).ToDatabaseBackupsPtrOutputWithContext(ctx)
}

// DatabaseBackupsPtrInput is an input type that accepts DatabaseBackupsArgs, DatabaseBackupsPtr and DatabaseBackupsPtrOutput values.
// You can construct a concrete instance of `DatabaseBackupsPtrInput` via:
//
//	        DatabaseBackupsArgs{...}
//
//	or:
//
//	        nil
type DatabaseBackupsPtrInput interface {
	pulumi.Input

	ToDatabaseBackupsPtrOutput() DatabaseBackupsPtrOutput
	ToDatabaseBackupsPtrOutputWithContext(context.Context) DatabaseBackupsPtrOutput
}

type databaseBackupsPtrType DatabaseBackupsArgs

func DatabaseBackupsPtr(v *DatabaseBackupsArgs) DatabaseBackupsPtrInput {
	return (*databaseBackupsPtrType)(v)
}

func (*databaseBackupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackups)(nil)).Elem()
}

func (i *databaseBackupsPtrType) ToDatabaseBackupsPtrOutput() DatabaseBackupsPtrOutput {
	return i.ToDatabaseBackupsPtrOutputWithContext(context.Background())
}

func (i *databaseBackupsPtrType) ToDatabaseBackupsPtrOutputWithContext(ctx context.Context) DatabaseBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsPtrOutput)
}

type DatabaseBackupsOutput struct{ *pulumi.OutputState }

func (DatabaseBackupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackups)(nil)).Elem()
}

func (o DatabaseBackupsOutput) ToDatabaseBackupsOutput() DatabaseBackupsOutput {
	return o
}

func (o DatabaseBackupsOutput) ToDatabaseBackupsOutputWithContext(ctx context.Context) DatabaseBackupsOutput {
	return o
}

func (o DatabaseBackupsOutput) ToDatabaseBackupsPtrOutput() DatabaseBackupsPtrOutput {
	return o.ToDatabaseBackupsPtrOutputWithContext(context.Background())
}

func (o DatabaseBackupsOutput) ToDatabaseBackupsPtrOutputWithContext(ctx context.Context) DatabaseBackupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseBackups) *DatabaseBackups {
		return &v
	}).(DatabaseBackupsPtrOutput)
}

// List of backup configurations.
func (o DatabaseBackupsOutput) Configs() DatabaseBackupsConfigArrayOutput {
	return o.ApplyT(func(v DatabaseBackups) []DatabaseBackupsConfig { return v.Configs }).(DatabaseBackupsConfigArrayOutput)
}

// The backup provider.
func (o DatabaseBackupsOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackups) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type DatabaseBackupsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseBackupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackups)(nil)).Elem()
}

func (o DatabaseBackupsPtrOutput) ToDatabaseBackupsPtrOutput() DatabaseBackupsPtrOutput {
	return o
}

func (o DatabaseBackupsPtrOutput) ToDatabaseBackupsPtrOutputWithContext(ctx context.Context) DatabaseBackupsPtrOutput {
	return o
}

func (o DatabaseBackupsPtrOutput) Elem() DatabaseBackupsOutput {
	return o.ApplyT(func(v *DatabaseBackups) DatabaseBackups {
		if v != nil {
			return *v
		}
		var ret DatabaseBackups
		return ret
	}).(DatabaseBackupsOutput)
}

// List of backup configurations.
func (o DatabaseBackupsPtrOutput) Configs() DatabaseBackupsConfigArrayOutput {
	return o.ApplyT(func(v *DatabaseBackups) []DatabaseBackupsConfig {
		if v == nil {
			return nil
		}
		return v.Configs
	}).(DatabaseBackupsConfigArrayOutput)
}

// The backup provider.
func (o DatabaseBackupsPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseBackups) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type DatabaseBackupsConfig struct {
	// Unique identifier for the backup config.
	Id *string `pulumi:"id"`
	// Name of the node.
	NodeName *string `pulumi:"nodeName"`
	// List of backup repositories.
	Repositories []DatabaseBackupsConfigRepository `pulumi:"repositories"`
	// List of backup schedules.
	Schedules []DatabaseBackupsConfigSchedule `pulumi:"schedules"`
}

// DatabaseBackupsConfigInput is an input type that accepts DatabaseBackupsConfigArgs and DatabaseBackupsConfigOutput values.
// You can construct a concrete instance of `DatabaseBackupsConfigInput` via:
//
//	DatabaseBackupsConfigArgs{...}
type DatabaseBackupsConfigInput interface {
	pulumi.Input

	ToDatabaseBackupsConfigOutput() DatabaseBackupsConfigOutput
	ToDatabaseBackupsConfigOutputWithContext(context.Context) DatabaseBackupsConfigOutput
}

type DatabaseBackupsConfigArgs struct {
	// Unique identifier for the backup config.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the node.
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
	// List of backup repositories.
	Repositories DatabaseBackupsConfigRepositoryArrayInput `pulumi:"repositories"`
	// List of backup schedules.
	Schedules DatabaseBackupsConfigScheduleArrayInput `pulumi:"schedules"`
}

func (DatabaseBackupsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupsConfig)(nil)).Elem()
}

func (i DatabaseBackupsConfigArgs) ToDatabaseBackupsConfigOutput() DatabaseBackupsConfigOutput {
	return i.ToDatabaseBackupsConfigOutputWithContext(context.Background())
}

func (i DatabaseBackupsConfigArgs) ToDatabaseBackupsConfigOutputWithContext(ctx context.Context) DatabaseBackupsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsConfigOutput)
}

// DatabaseBackupsConfigArrayInput is an input type that accepts DatabaseBackupsConfigArray and DatabaseBackupsConfigArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupsConfigArrayInput` via:
//
//	DatabaseBackupsConfigArray{ DatabaseBackupsConfigArgs{...} }
type DatabaseBackupsConfigArrayInput interface {
	pulumi.Input

	ToDatabaseBackupsConfigArrayOutput() DatabaseBackupsConfigArrayOutput
	ToDatabaseBackupsConfigArrayOutputWithContext(context.Context) DatabaseBackupsConfigArrayOutput
}

type DatabaseBackupsConfigArray []DatabaseBackupsConfigInput

func (DatabaseBackupsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupsConfig)(nil)).Elem()
}

func (i DatabaseBackupsConfigArray) ToDatabaseBackupsConfigArrayOutput() DatabaseBackupsConfigArrayOutput {
	return i.ToDatabaseBackupsConfigArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupsConfigArray) ToDatabaseBackupsConfigArrayOutputWithContext(ctx context.Context) DatabaseBackupsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsConfigArrayOutput)
}

type DatabaseBackupsConfigOutput struct{ *pulumi.OutputState }

func (DatabaseBackupsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupsConfig)(nil)).Elem()
}

func (o DatabaseBackupsConfigOutput) ToDatabaseBackupsConfigOutput() DatabaseBackupsConfigOutput {
	return o
}

func (o DatabaseBackupsConfigOutput) ToDatabaseBackupsConfigOutputWithContext(ctx context.Context) DatabaseBackupsConfigOutput {
	return o
}

// Unique identifier for the backup config.
func (o DatabaseBackupsConfigOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfig) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the node.
func (o DatabaseBackupsConfigOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfig) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

// List of backup repositories.
func (o DatabaseBackupsConfigOutput) Repositories() DatabaseBackupsConfigRepositoryArrayOutput {
	return o.ApplyT(func(v DatabaseBackupsConfig) []DatabaseBackupsConfigRepository { return v.Repositories }).(DatabaseBackupsConfigRepositoryArrayOutput)
}

// List of backup schedules.
func (o DatabaseBackupsConfigOutput) Schedules() DatabaseBackupsConfigScheduleArrayOutput {
	return o.ApplyT(func(v DatabaseBackupsConfig) []DatabaseBackupsConfigSchedule { return v.Schedules }).(DatabaseBackupsConfigScheduleArrayOutput)
}

type DatabaseBackupsConfigArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupsConfig)(nil)).Elem()
}

func (o DatabaseBackupsConfigArrayOutput) ToDatabaseBackupsConfigArrayOutput() DatabaseBackupsConfigArrayOutput {
	return o
}

func (o DatabaseBackupsConfigArrayOutput) ToDatabaseBackupsConfigArrayOutputWithContext(ctx context.Context) DatabaseBackupsConfigArrayOutput {
	return o
}

func (o DatabaseBackupsConfigArrayOutput) Index(i pulumi.IntInput) DatabaseBackupsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupsConfig {
		return vs[0].([]DatabaseBackupsConfig)[vs[1].(int)]
	}).(DatabaseBackupsConfigOutput)
}

type DatabaseBackupsConfigRepository struct {
	// Azure account.
	AzureAccount *string `pulumi:"azureAccount"`
	// Azure container.
	AzureContainer *string `pulumi:"azureContainer"`
	// Azure endpoint.
	AzureEndpoint *string `pulumi:"azureEndpoint"`
	// ID of the backup store.
	BackupStoreId *string `pulumi:"backupStoreId"`
	// Base path for the repository.
	BasePath *string `pulumi:"basePath"`
	// GCS bucket name.
	GcsBucket *string `pulumi:"gcsBucket"`
	// GCS endpoint.
	GcsEndpoint *string `pulumi:"gcsEndpoint"`
	// Unique identifier for the backup config.
	Id *string `pulumi:"id"`
	// Retention period for full backups.
	RetentionFull *int `pulumi:"retentionFull"`
	// Type of retention for full backups.
	RetentionFullType *string `pulumi:"retentionFullType"`
	// S3 bucket name.
	S3Bucket *string `pulumi:"s3Bucket"`
	// S3 endpoint.
	S3Endpoint *string `pulumi:"s3Endpoint"`
	// S3 region.
	S3Region *string `pulumi:"s3Region"`
	// Type of the repository.
	Type *string `pulumi:"type"`
}

// DatabaseBackupsConfigRepositoryInput is an input type that accepts DatabaseBackupsConfigRepositoryArgs and DatabaseBackupsConfigRepositoryOutput values.
// You can construct a concrete instance of `DatabaseBackupsConfigRepositoryInput` via:
//
//	DatabaseBackupsConfigRepositoryArgs{...}
type DatabaseBackupsConfigRepositoryInput interface {
	pulumi.Input

	ToDatabaseBackupsConfigRepositoryOutput() DatabaseBackupsConfigRepositoryOutput
	ToDatabaseBackupsConfigRepositoryOutputWithContext(context.Context) DatabaseBackupsConfigRepositoryOutput
}

type DatabaseBackupsConfigRepositoryArgs struct {
	// Azure account.
	AzureAccount pulumi.StringPtrInput `pulumi:"azureAccount"`
	// Azure container.
	AzureContainer pulumi.StringPtrInput `pulumi:"azureContainer"`
	// Azure endpoint.
	AzureEndpoint pulumi.StringPtrInput `pulumi:"azureEndpoint"`
	// ID of the backup store.
	BackupStoreId pulumi.StringPtrInput `pulumi:"backupStoreId"`
	// Base path for the repository.
	BasePath pulumi.StringPtrInput `pulumi:"basePath"`
	// GCS bucket name.
	GcsBucket pulumi.StringPtrInput `pulumi:"gcsBucket"`
	// GCS endpoint.
	GcsEndpoint pulumi.StringPtrInput `pulumi:"gcsEndpoint"`
	// Unique identifier for the backup config.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Retention period for full backups.
	RetentionFull pulumi.IntPtrInput `pulumi:"retentionFull"`
	// Type of retention for full backups.
	RetentionFullType pulumi.StringPtrInput `pulumi:"retentionFullType"`
	// S3 bucket name.
	S3Bucket pulumi.StringPtrInput `pulumi:"s3Bucket"`
	// S3 endpoint.
	S3Endpoint pulumi.StringPtrInput `pulumi:"s3Endpoint"`
	// S3 region.
	S3Region pulumi.StringPtrInput `pulumi:"s3Region"`
	// Type of the repository.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatabaseBackupsConfigRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupsConfigRepository)(nil)).Elem()
}

func (i DatabaseBackupsConfigRepositoryArgs) ToDatabaseBackupsConfigRepositoryOutput() DatabaseBackupsConfigRepositoryOutput {
	return i.ToDatabaseBackupsConfigRepositoryOutputWithContext(context.Background())
}

func (i DatabaseBackupsConfigRepositoryArgs) ToDatabaseBackupsConfigRepositoryOutputWithContext(ctx context.Context) DatabaseBackupsConfigRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsConfigRepositoryOutput)
}

// DatabaseBackupsConfigRepositoryArrayInput is an input type that accepts DatabaseBackupsConfigRepositoryArray and DatabaseBackupsConfigRepositoryArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupsConfigRepositoryArrayInput` via:
//
//	DatabaseBackupsConfigRepositoryArray{ DatabaseBackupsConfigRepositoryArgs{...} }
type DatabaseBackupsConfigRepositoryArrayInput interface {
	pulumi.Input

	ToDatabaseBackupsConfigRepositoryArrayOutput() DatabaseBackupsConfigRepositoryArrayOutput
	ToDatabaseBackupsConfigRepositoryArrayOutputWithContext(context.Context) DatabaseBackupsConfigRepositoryArrayOutput
}

type DatabaseBackupsConfigRepositoryArray []DatabaseBackupsConfigRepositoryInput

func (DatabaseBackupsConfigRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupsConfigRepository)(nil)).Elem()
}

func (i DatabaseBackupsConfigRepositoryArray) ToDatabaseBackupsConfigRepositoryArrayOutput() DatabaseBackupsConfigRepositoryArrayOutput {
	return i.ToDatabaseBackupsConfigRepositoryArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupsConfigRepositoryArray) ToDatabaseBackupsConfigRepositoryArrayOutputWithContext(ctx context.Context) DatabaseBackupsConfigRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsConfigRepositoryArrayOutput)
}

type DatabaseBackupsConfigRepositoryOutput struct{ *pulumi.OutputState }

func (DatabaseBackupsConfigRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupsConfigRepository)(nil)).Elem()
}

func (o DatabaseBackupsConfigRepositoryOutput) ToDatabaseBackupsConfigRepositoryOutput() DatabaseBackupsConfigRepositoryOutput {
	return o
}

func (o DatabaseBackupsConfigRepositoryOutput) ToDatabaseBackupsConfigRepositoryOutputWithContext(ctx context.Context) DatabaseBackupsConfigRepositoryOutput {
	return o
}

// Azure account.
func (o DatabaseBackupsConfigRepositoryOutput) AzureAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.AzureAccount }).(pulumi.StringPtrOutput)
}

// Azure container.
func (o DatabaseBackupsConfigRepositoryOutput) AzureContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.AzureContainer }).(pulumi.StringPtrOutput)
}

// Azure endpoint.
func (o DatabaseBackupsConfigRepositoryOutput) AzureEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.AzureEndpoint }).(pulumi.StringPtrOutput)
}

// ID of the backup store.
func (o DatabaseBackupsConfigRepositoryOutput) BackupStoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.BackupStoreId }).(pulumi.StringPtrOutput)
}

// Base path for the repository.
func (o DatabaseBackupsConfigRepositoryOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.BasePath }).(pulumi.StringPtrOutput)
}

// GCS bucket name.
func (o DatabaseBackupsConfigRepositoryOutput) GcsBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.GcsBucket }).(pulumi.StringPtrOutput)
}

// GCS endpoint.
func (o DatabaseBackupsConfigRepositoryOutput) GcsEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.GcsEndpoint }).(pulumi.StringPtrOutput)
}

// Unique identifier for the backup config.
func (o DatabaseBackupsConfigRepositoryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Retention period for full backups.
func (o DatabaseBackupsConfigRepositoryOutput) RetentionFull() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *int { return v.RetentionFull }).(pulumi.IntPtrOutput)
}

// Type of retention for full backups.
func (o DatabaseBackupsConfigRepositoryOutput) RetentionFullType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.RetentionFullType }).(pulumi.StringPtrOutput)
}

// S3 bucket name.
func (o DatabaseBackupsConfigRepositoryOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.S3Bucket }).(pulumi.StringPtrOutput)
}

// S3 endpoint.
func (o DatabaseBackupsConfigRepositoryOutput) S3Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.S3Endpoint }).(pulumi.StringPtrOutput)
}

// S3 region.
func (o DatabaseBackupsConfigRepositoryOutput) S3Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.S3Region }).(pulumi.StringPtrOutput)
}

// Type of the repository.
func (o DatabaseBackupsConfigRepositoryOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigRepository) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatabaseBackupsConfigRepositoryArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupsConfigRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupsConfigRepository)(nil)).Elem()
}

func (o DatabaseBackupsConfigRepositoryArrayOutput) ToDatabaseBackupsConfigRepositoryArrayOutput() DatabaseBackupsConfigRepositoryArrayOutput {
	return o
}

func (o DatabaseBackupsConfigRepositoryArrayOutput) ToDatabaseBackupsConfigRepositoryArrayOutputWithContext(ctx context.Context) DatabaseBackupsConfigRepositoryArrayOutput {
	return o
}

func (o DatabaseBackupsConfigRepositoryArrayOutput) Index(i pulumi.IntInput) DatabaseBackupsConfigRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupsConfigRepository {
		return vs[0].([]DatabaseBackupsConfigRepository)[vs[1].(int)]
	}).(DatabaseBackupsConfigRepositoryOutput)
}

type DatabaseBackupsConfigSchedule struct {
	// Cron expression for the schedule.
	CronExpression *string `pulumi:"cronExpression"`
	// Unique identifier for the backup config.
	Id *string `pulumi:"id"`
	// Type of the repository.
	Type *string `pulumi:"type"`
}

// DatabaseBackupsConfigScheduleInput is an input type that accepts DatabaseBackupsConfigScheduleArgs and DatabaseBackupsConfigScheduleOutput values.
// You can construct a concrete instance of `DatabaseBackupsConfigScheduleInput` via:
//
//	DatabaseBackupsConfigScheduleArgs{...}
type DatabaseBackupsConfigScheduleInput interface {
	pulumi.Input

	ToDatabaseBackupsConfigScheduleOutput() DatabaseBackupsConfigScheduleOutput
	ToDatabaseBackupsConfigScheduleOutputWithContext(context.Context) DatabaseBackupsConfigScheduleOutput
}

type DatabaseBackupsConfigScheduleArgs struct {
	// Cron expression for the schedule.
	CronExpression pulumi.StringPtrInput `pulumi:"cronExpression"`
	// Unique identifier for the backup config.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Type of the repository.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DatabaseBackupsConfigScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupsConfigSchedule)(nil)).Elem()
}

func (i DatabaseBackupsConfigScheduleArgs) ToDatabaseBackupsConfigScheduleOutput() DatabaseBackupsConfigScheduleOutput {
	return i.ToDatabaseBackupsConfigScheduleOutputWithContext(context.Background())
}

func (i DatabaseBackupsConfigScheduleArgs) ToDatabaseBackupsConfigScheduleOutputWithContext(ctx context.Context) DatabaseBackupsConfigScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsConfigScheduleOutput)
}

// DatabaseBackupsConfigScheduleArrayInput is an input type that accepts DatabaseBackupsConfigScheduleArray and DatabaseBackupsConfigScheduleArrayOutput values.
// You can construct a concrete instance of `DatabaseBackupsConfigScheduleArrayInput` via:
//
//	DatabaseBackupsConfigScheduleArray{ DatabaseBackupsConfigScheduleArgs{...} }
type DatabaseBackupsConfigScheduleArrayInput interface {
	pulumi.Input

	ToDatabaseBackupsConfigScheduleArrayOutput() DatabaseBackupsConfigScheduleArrayOutput
	ToDatabaseBackupsConfigScheduleArrayOutputWithContext(context.Context) DatabaseBackupsConfigScheduleArrayOutput
}

type DatabaseBackupsConfigScheduleArray []DatabaseBackupsConfigScheduleInput

func (DatabaseBackupsConfigScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupsConfigSchedule)(nil)).Elem()
}

func (i DatabaseBackupsConfigScheduleArray) ToDatabaseBackupsConfigScheduleArrayOutput() DatabaseBackupsConfigScheduleArrayOutput {
	return i.ToDatabaseBackupsConfigScheduleArrayOutputWithContext(context.Background())
}

func (i DatabaseBackupsConfigScheduleArray) ToDatabaseBackupsConfigScheduleArrayOutputWithContext(ctx context.Context) DatabaseBackupsConfigScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupsConfigScheduleArrayOutput)
}

type DatabaseBackupsConfigScheduleOutput struct{ *pulumi.OutputState }

func (DatabaseBackupsConfigScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackupsConfigSchedule)(nil)).Elem()
}

func (o DatabaseBackupsConfigScheduleOutput) ToDatabaseBackupsConfigScheduleOutput() DatabaseBackupsConfigScheduleOutput {
	return o
}

func (o DatabaseBackupsConfigScheduleOutput) ToDatabaseBackupsConfigScheduleOutputWithContext(ctx context.Context) DatabaseBackupsConfigScheduleOutput {
	return o
}

// Cron expression for the schedule.
func (o DatabaseBackupsConfigScheduleOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigSchedule) *string { return v.CronExpression }).(pulumi.StringPtrOutput)
}

// Unique identifier for the backup config.
func (o DatabaseBackupsConfigScheduleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigSchedule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Type of the repository.
func (o DatabaseBackupsConfigScheduleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseBackupsConfigSchedule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DatabaseBackupsConfigScheduleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseBackupsConfigScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseBackupsConfigSchedule)(nil)).Elem()
}

func (o DatabaseBackupsConfigScheduleArrayOutput) ToDatabaseBackupsConfigScheduleArrayOutput() DatabaseBackupsConfigScheduleArrayOutput {
	return o
}

func (o DatabaseBackupsConfigScheduleArrayOutput) ToDatabaseBackupsConfigScheduleArrayOutputWithContext(ctx context.Context) DatabaseBackupsConfigScheduleArrayOutput {
	return o
}

func (o DatabaseBackupsConfigScheduleArrayOutput) Index(i pulumi.IntInput) DatabaseBackupsConfigScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseBackupsConfigSchedule {
		return vs[0].([]DatabaseBackupsConfigSchedule)[vs[1].(int)]
	}).(DatabaseBackupsConfigScheduleOutput)
}

type DatabaseComponent struct {
	Id          *string `pulumi:"id"`
	Name        *string `pulumi:"name"`
	ReleaseDate *string `pulumi:"releaseDate"`
	Status      *string `pulumi:"status"`
	Version     *string `pulumi:"version"`
}

// DatabaseComponentInput is an input type that accepts DatabaseComponentArgs and DatabaseComponentOutput values.
// You can construct a concrete instance of `DatabaseComponentInput` via:
//
//	DatabaseComponentArgs{...}
type DatabaseComponentInput interface {
	pulumi.Input

	ToDatabaseComponentOutput() DatabaseComponentOutput
	ToDatabaseComponentOutputWithContext(context.Context) DatabaseComponentOutput
}

type DatabaseComponentArgs struct {
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	ReleaseDate pulumi.StringPtrInput `pulumi:"releaseDate"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
	Version     pulumi.StringPtrInput `pulumi:"version"`
}

func (DatabaseComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseComponent)(nil)).Elem()
}

func (i DatabaseComponentArgs) ToDatabaseComponentOutput() DatabaseComponentOutput {
	return i.ToDatabaseComponentOutputWithContext(context.Background())
}

func (i DatabaseComponentArgs) ToDatabaseComponentOutputWithContext(ctx context.Context) DatabaseComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseComponentOutput)
}

// DatabaseComponentArrayInput is an input type that accepts DatabaseComponentArray and DatabaseComponentArrayOutput values.
// You can construct a concrete instance of `DatabaseComponentArrayInput` via:
//
//	DatabaseComponentArray{ DatabaseComponentArgs{...} }
type DatabaseComponentArrayInput interface {
	pulumi.Input

	ToDatabaseComponentArrayOutput() DatabaseComponentArrayOutput
	ToDatabaseComponentArrayOutputWithContext(context.Context) DatabaseComponentArrayOutput
}

type DatabaseComponentArray []DatabaseComponentInput

func (DatabaseComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseComponent)(nil)).Elem()
}

func (i DatabaseComponentArray) ToDatabaseComponentArrayOutput() DatabaseComponentArrayOutput {
	return i.ToDatabaseComponentArrayOutputWithContext(context.Background())
}

func (i DatabaseComponentArray) ToDatabaseComponentArrayOutputWithContext(ctx context.Context) DatabaseComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseComponentArrayOutput)
}

type DatabaseComponentOutput struct{ *pulumi.OutputState }

func (DatabaseComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseComponent)(nil)).Elem()
}

func (o DatabaseComponentOutput) ToDatabaseComponentOutput() DatabaseComponentOutput {
	return o
}

func (o DatabaseComponentOutput) ToDatabaseComponentOutputWithContext(ctx context.Context) DatabaseComponentOutput {
	return o
}

func (o DatabaseComponentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseComponent) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o DatabaseComponentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseComponent) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DatabaseComponentOutput) ReleaseDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseComponent) *string { return v.ReleaseDate }).(pulumi.StringPtrOutput)
}

func (o DatabaseComponentOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseComponent) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o DatabaseComponentOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseComponent) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type DatabaseComponentArrayOutput struct{ *pulumi.OutputState }

func (DatabaseComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseComponent)(nil)).Elem()
}

func (o DatabaseComponentArrayOutput) ToDatabaseComponentArrayOutput() DatabaseComponentArrayOutput {
	return o
}

func (o DatabaseComponentArrayOutput) ToDatabaseComponentArrayOutputWithContext(ctx context.Context) DatabaseComponentArrayOutput {
	return o
}

func (o DatabaseComponentArrayOutput) Index(i pulumi.IntInput) DatabaseComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseComponent {
		return vs[0].([]DatabaseComponent)[vs[1].(int)]
	}).(DatabaseComponentOutput)
}

type DatabaseExtensions struct {
	AutoManage *bool    `pulumi:"autoManage"`
	Availables []string `pulumi:"availables"`
	Requesteds []string `pulumi:"requesteds"`
}

// DatabaseExtensionsInput is an input type that accepts DatabaseExtensionsArgs and DatabaseExtensionsOutput values.
// You can construct a concrete instance of `DatabaseExtensionsInput` via:
//
//	DatabaseExtensionsArgs{...}
type DatabaseExtensionsInput interface {
	pulumi.Input

	ToDatabaseExtensionsOutput() DatabaseExtensionsOutput
	ToDatabaseExtensionsOutputWithContext(context.Context) DatabaseExtensionsOutput
}

type DatabaseExtensionsArgs struct {
	AutoManage pulumi.BoolPtrInput     `pulumi:"autoManage"`
	Availables pulumi.StringArrayInput `pulumi:"availables"`
	Requesteds pulumi.StringArrayInput `pulumi:"requesteds"`
}

func (DatabaseExtensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseExtensions)(nil)).Elem()
}

func (i DatabaseExtensionsArgs) ToDatabaseExtensionsOutput() DatabaseExtensionsOutput {
	return i.ToDatabaseExtensionsOutputWithContext(context.Background())
}

func (i DatabaseExtensionsArgs) ToDatabaseExtensionsOutputWithContext(ctx context.Context) DatabaseExtensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExtensionsOutput)
}

func (i DatabaseExtensionsArgs) ToDatabaseExtensionsPtrOutput() DatabaseExtensionsPtrOutput {
	return i.ToDatabaseExtensionsPtrOutputWithContext(context.Background())
}

func (i DatabaseExtensionsArgs) ToDatabaseExtensionsPtrOutputWithContext(ctx context.Context) DatabaseExtensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExtensionsOutput).ToDatabaseExtensionsPtrOutputWithContext(ctx)
}

// DatabaseExtensionsPtrInput is an input type that accepts DatabaseExtensionsArgs, DatabaseExtensionsPtr and DatabaseExtensionsPtrOutput values.
// You can construct a concrete instance of `DatabaseExtensionsPtrInput` via:
//
//	        DatabaseExtensionsArgs{...}
//
//	or:
//
//	        nil
type DatabaseExtensionsPtrInput interface {
	pulumi.Input

	ToDatabaseExtensionsPtrOutput() DatabaseExtensionsPtrOutput
	ToDatabaseExtensionsPtrOutputWithContext(context.Context) DatabaseExtensionsPtrOutput
}

type databaseExtensionsPtrType DatabaseExtensionsArgs

func DatabaseExtensionsPtr(v *DatabaseExtensionsArgs) DatabaseExtensionsPtrInput {
	return (*databaseExtensionsPtrType)(v)
}

func (*databaseExtensionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseExtensions)(nil)).Elem()
}

func (i *databaseExtensionsPtrType) ToDatabaseExtensionsPtrOutput() DatabaseExtensionsPtrOutput {
	return i.ToDatabaseExtensionsPtrOutputWithContext(context.Background())
}

func (i *databaseExtensionsPtrType) ToDatabaseExtensionsPtrOutputWithContext(ctx context.Context) DatabaseExtensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseExtensionsPtrOutput)
}

type DatabaseExtensionsOutput struct{ *pulumi.OutputState }

func (DatabaseExtensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseExtensions)(nil)).Elem()
}

func (o DatabaseExtensionsOutput) ToDatabaseExtensionsOutput() DatabaseExtensionsOutput {
	return o
}

func (o DatabaseExtensionsOutput) ToDatabaseExtensionsOutputWithContext(ctx context.Context) DatabaseExtensionsOutput {
	return o
}

func (o DatabaseExtensionsOutput) ToDatabaseExtensionsPtrOutput() DatabaseExtensionsPtrOutput {
	return o.ToDatabaseExtensionsPtrOutputWithContext(context.Background())
}

func (o DatabaseExtensionsOutput) ToDatabaseExtensionsPtrOutputWithContext(ctx context.Context) DatabaseExtensionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseExtensions) *DatabaseExtensions {
		return &v
	}).(DatabaseExtensionsPtrOutput)
}

func (o DatabaseExtensionsOutput) AutoManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseExtensions) *bool { return v.AutoManage }).(pulumi.BoolPtrOutput)
}

func (o DatabaseExtensionsOutput) Availables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseExtensions) []string { return v.Availables }).(pulumi.StringArrayOutput)
}

func (o DatabaseExtensionsOutput) Requesteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseExtensions) []string { return v.Requesteds }).(pulumi.StringArrayOutput)
}

type DatabaseExtensionsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseExtensionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseExtensions)(nil)).Elem()
}

func (o DatabaseExtensionsPtrOutput) ToDatabaseExtensionsPtrOutput() DatabaseExtensionsPtrOutput {
	return o
}

func (o DatabaseExtensionsPtrOutput) ToDatabaseExtensionsPtrOutputWithContext(ctx context.Context) DatabaseExtensionsPtrOutput {
	return o
}

func (o DatabaseExtensionsPtrOutput) Elem() DatabaseExtensionsOutput {
	return o.ApplyT(func(v *DatabaseExtensions) DatabaseExtensions {
		if v != nil {
			return *v
		}
		var ret DatabaseExtensions
		return ret
	}).(DatabaseExtensionsOutput)
}

func (o DatabaseExtensionsPtrOutput) AutoManage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseExtensions) *bool {
		if v == nil {
			return nil
		}
		return v.AutoManage
	}).(pulumi.BoolPtrOutput)
}

func (o DatabaseExtensionsPtrOutput) Availables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseExtensions) []string {
		if v == nil {
			return nil
		}
		return v.Availables
	}).(pulumi.StringArrayOutput)
}

func (o DatabaseExtensionsPtrOutput) Requesteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseExtensions) []string {
		if v == nil {
			return nil
		}
		return v.Requesteds
	}).(pulumi.StringArrayOutput)
}

type DatabaseNode struct {
	Connection *DatabaseNodeConnection `pulumi:"connection"`
	Extensions *DatabaseNodeExtensions `pulumi:"extensions"`
	Location   *DatabaseNodeLocation   `pulumi:"location"`
	Name       *string                 `pulumi:"name"`
	Region     *DatabaseNodeRegion     `pulumi:"region"`
}

// DatabaseNodeInput is an input type that accepts DatabaseNodeArgs and DatabaseNodeOutput values.
// You can construct a concrete instance of `DatabaseNodeInput` via:
//
//	DatabaseNodeArgs{...}
type DatabaseNodeInput interface {
	pulumi.Input

	ToDatabaseNodeOutput() DatabaseNodeOutput
	ToDatabaseNodeOutputWithContext(context.Context) DatabaseNodeOutput
}

type DatabaseNodeArgs struct {
	Connection DatabaseNodeConnectionPtrInput `pulumi:"connection"`
	Extensions DatabaseNodeExtensionsPtrInput `pulumi:"extensions"`
	Location   DatabaseNodeLocationPtrInput   `pulumi:"location"`
	Name       pulumi.StringPtrInput          `pulumi:"name"`
	Region     DatabaseNodeRegionPtrInput     `pulumi:"region"`
}

func (DatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNode)(nil)).Elem()
}

func (i DatabaseNodeArgs) ToDatabaseNodeOutput() DatabaseNodeOutput {
	return i.ToDatabaseNodeOutputWithContext(context.Background())
}

func (i DatabaseNodeArgs) ToDatabaseNodeOutputWithContext(ctx context.Context) DatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeOutput)
}

// DatabaseNodeArrayInput is an input type that accepts DatabaseNodeArray and DatabaseNodeArrayOutput values.
// You can construct a concrete instance of `DatabaseNodeArrayInput` via:
//
//	DatabaseNodeArray{ DatabaseNodeArgs{...} }
type DatabaseNodeArrayInput interface {
	pulumi.Input

	ToDatabaseNodeArrayOutput() DatabaseNodeArrayOutput
	ToDatabaseNodeArrayOutputWithContext(context.Context) DatabaseNodeArrayOutput
}

type DatabaseNodeArray []DatabaseNodeInput

func (DatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseNode)(nil)).Elem()
}

func (i DatabaseNodeArray) ToDatabaseNodeArrayOutput() DatabaseNodeArrayOutput {
	return i.ToDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i DatabaseNodeArray) ToDatabaseNodeArrayOutputWithContext(ctx context.Context) DatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeArrayOutput)
}

type DatabaseNodeOutput struct{ *pulumi.OutputState }

func (DatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNode)(nil)).Elem()
}

func (o DatabaseNodeOutput) ToDatabaseNodeOutput() DatabaseNodeOutput {
	return o
}

func (o DatabaseNodeOutput) ToDatabaseNodeOutputWithContext(ctx context.Context) DatabaseNodeOutput {
	return o
}

func (o DatabaseNodeOutput) Connection() DatabaseNodeConnectionPtrOutput {
	return o.ApplyT(func(v DatabaseNode) *DatabaseNodeConnection { return v.Connection }).(DatabaseNodeConnectionPtrOutput)
}

func (o DatabaseNodeOutput) Extensions() DatabaseNodeExtensionsPtrOutput {
	return o.ApplyT(func(v DatabaseNode) *DatabaseNodeExtensions { return v.Extensions }).(DatabaseNodeExtensionsPtrOutput)
}

func (o DatabaseNodeOutput) Location() DatabaseNodeLocationPtrOutput {
	return o.ApplyT(func(v DatabaseNode) *DatabaseNodeLocation { return v.Location }).(DatabaseNodeLocationPtrOutput)
}

func (o DatabaseNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeOutput) Region() DatabaseNodeRegionPtrOutput {
	return o.ApplyT(func(v DatabaseNode) *DatabaseNodeRegion { return v.Region }).(DatabaseNodeRegionPtrOutput)
}

type DatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (DatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseNode)(nil)).Elem()
}

func (o DatabaseNodeArrayOutput) ToDatabaseNodeArrayOutput() DatabaseNodeArrayOutput {
	return o
}

func (o DatabaseNodeArrayOutput) ToDatabaseNodeArrayOutputWithContext(ctx context.Context) DatabaseNodeArrayOutput {
	return o
}

func (o DatabaseNodeArrayOutput) Index(i pulumi.IntInput) DatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseNode {
		return vs[0].([]DatabaseNode)[vs[1].(int)]
	}).(DatabaseNodeOutput)
}

type DatabaseNodeConnection struct {
	Database          *string `pulumi:"database"`
	ExternalIpAddress *string `pulumi:"externalIpAddress"`
	Host              *string `pulumi:"host"`
	InternalHost      *string `pulumi:"internalHost"`
	InternalIpAddress *string `pulumi:"internalIpAddress"`
	Password          *string `pulumi:"password"`
	Port              *int    `pulumi:"port"`
	Username          *string `pulumi:"username"`
}

// DatabaseNodeConnectionInput is an input type that accepts DatabaseNodeConnectionArgs and DatabaseNodeConnectionOutput values.
// You can construct a concrete instance of `DatabaseNodeConnectionInput` via:
//
//	DatabaseNodeConnectionArgs{...}
type DatabaseNodeConnectionInput interface {
	pulumi.Input

	ToDatabaseNodeConnectionOutput() DatabaseNodeConnectionOutput
	ToDatabaseNodeConnectionOutputWithContext(context.Context) DatabaseNodeConnectionOutput
}

type DatabaseNodeConnectionArgs struct {
	Database          pulumi.StringPtrInput `pulumi:"database"`
	ExternalIpAddress pulumi.StringPtrInput `pulumi:"externalIpAddress"`
	Host              pulumi.StringPtrInput `pulumi:"host"`
	InternalHost      pulumi.StringPtrInput `pulumi:"internalHost"`
	InternalIpAddress pulumi.StringPtrInput `pulumi:"internalIpAddress"`
	Password          pulumi.StringPtrInput `pulumi:"password"`
	Port              pulumi.IntPtrInput    `pulumi:"port"`
	Username          pulumi.StringPtrInput `pulumi:"username"`
}

func (DatabaseNodeConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeConnection)(nil)).Elem()
}

func (i DatabaseNodeConnectionArgs) ToDatabaseNodeConnectionOutput() DatabaseNodeConnectionOutput {
	return i.ToDatabaseNodeConnectionOutputWithContext(context.Background())
}

func (i DatabaseNodeConnectionArgs) ToDatabaseNodeConnectionOutputWithContext(ctx context.Context) DatabaseNodeConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeConnectionOutput)
}

func (i DatabaseNodeConnectionArgs) ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput {
	return i.ToDatabaseNodeConnectionPtrOutputWithContext(context.Background())
}

func (i DatabaseNodeConnectionArgs) ToDatabaseNodeConnectionPtrOutputWithContext(ctx context.Context) DatabaseNodeConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeConnectionOutput).ToDatabaseNodeConnectionPtrOutputWithContext(ctx)
}

// DatabaseNodeConnectionPtrInput is an input type that accepts DatabaseNodeConnectionArgs, DatabaseNodeConnectionPtr and DatabaseNodeConnectionPtrOutput values.
// You can construct a concrete instance of `DatabaseNodeConnectionPtrInput` via:
//
//	        DatabaseNodeConnectionArgs{...}
//
//	or:
//
//	        nil
type DatabaseNodeConnectionPtrInput interface {
	pulumi.Input

	ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput
	ToDatabaseNodeConnectionPtrOutputWithContext(context.Context) DatabaseNodeConnectionPtrOutput
}

type databaseNodeConnectionPtrType DatabaseNodeConnectionArgs

func DatabaseNodeConnectionPtr(v *DatabaseNodeConnectionArgs) DatabaseNodeConnectionPtrInput {
	return (*databaseNodeConnectionPtrType)(v)
}

func (*databaseNodeConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeConnection)(nil)).Elem()
}

func (i *databaseNodeConnectionPtrType) ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput {
	return i.ToDatabaseNodeConnectionPtrOutputWithContext(context.Background())
}

func (i *databaseNodeConnectionPtrType) ToDatabaseNodeConnectionPtrOutputWithContext(ctx context.Context) DatabaseNodeConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeConnectionPtrOutput)
}

type DatabaseNodeConnectionOutput struct{ *pulumi.OutputState }

func (DatabaseNodeConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeConnection)(nil)).Elem()
}

func (o DatabaseNodeConnectionOutput) ToDatabaseNodeConnectionOutput() DatabaseNodeConnectionOutput {
	return o
}

func (o DatabaseNodeConnectionOutput) ToDatabaseNodeConnectionOutputWithContext(ctx context.Context) DatabaseNodeConnectionOutput {
	return o
}

func (o DatabaseNodeConnectionOutput) ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput {
	return o.ToDatabaseNodeConnectionPtrOutputWithContext(context.Background())
}

func (o DatabaseNodeConnectionOutput) ToDatabaseNodeConnectionPtrOutputWithContext(ctx context.Context) DatabaseNodeConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseNodeConnection) *DatabaseNodeConnection {
		return &v
	}).(DatabaseNodeConnectionPtrOutput)
}

func (o DatabaseNodeConnectionOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.Database }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionOutput) ExternalIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.ExternalIpAddress }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionOutput) InternalHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.InternalHost }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionOutput) InternalIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.InternalIpAddress }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o DatabaseNodeConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type DatabaseNodeConnectionPtrOutput struct{ *pulumi.OutputState }

func (DatabaseNodeConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeConnection)(nil)).Elem()
}

func (o DatabaseNodeConnectionPtrOutput) ToDatabaseNodeConnectionPtrOutput() DatabaseNodeConnectionPtrOutput {
	return o
}

func (o DatabaseNodeConnectionPtrOutput) ToDatabaseNodeConnectionPtrOutputWithContext(ctx context.Context) DatabaseNodeConnectionPtrOutput {
	return o
}

func (o DatabaseNodeConnectionPtrOutput) Elem() DatabaseNodeConnectionOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) DatabaseNodeConnection {
		if v != nil {
			return *v
		}
		var ret DatabaseNodeConnection
		return ret
	}).(DatabaseNodeConnectionOutput)
}

func (o DatabaseNodeConnectionPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.Database
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionPtrOutput) ExternalIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.ExternalIpAddress
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionPtrOutput) InternalHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.InternalHost
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionPtrOutput) InternalIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.InternalIpAddress
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeConnectionPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o DatabaseNodeConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type DatabaseNodeExtensions struct {
	Errors     map[string]string `pulumi:"errors"`
	Installeds []string          `pulumi:"installeds"`
}

// DatabaseNodeExtensionsInput is an input type that accepts DatabaseNodeExtensionsArgs and DatabaseNodeExtensionsOutput values.
// You can construct a concrete instance of `DatabaseNodeExtensionsInput` via:
//
//	DatabaseNodeExtensionsArgs{...}
type DatabaseNodeExtensionsInput interface {
	pulumi.Input

	ToDatabaseNodeExtensionsOutput() DatabaseNodeExtensionsOutput
	ToDatabaseNodeExtensionsOutputWithContext(context.Context) DatabaseNodeExtensionsOutput
}

type DatabaseNodeExtensionsArgs struct {
	Errors     pulumi.StringMapInput   `pulumi:"errors"`
	Installeds pulumi.StringArrayInput `pulumi:"installeds"`
}

func (DatabaseNodeExtensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeExtensions)(nil)).Elem()
}

func (i DatabaseNodeExtensionsArgs) ToDatabaseNodeExtensionsOutput() DatabaseNodeExtensionsOutput {
	return i.ToDatabaseNodeExtensionsOutputWithContext(context.Background())
}

func (i DatabaseNodeExtensionsArgs) ToDatabaseNodeExtensionsOutputWithContext(ctx context.Context) DatabaseNodeExtensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeExtensionsOutput)
}

func (i DatabaseNodeExtensionsArgs) ToDatabaseNodeExtensionsPtrOutput() DatabaseNodeExtensionsPtrOutput {
	return i.ToDatabaseNodeExtensionsPtrOutputWithContext(context.Background())
}

func (i DatabaseNodeExtensionsArgs) ToDatabaseNodeExtensionsPtrOutputWithContext(ctx context.Context) DatabaseNodeExtensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeExtensionsOutput).ToDatabaseNodeExtensionsPtrOutputWithContext(ctx)
}

// DatabaseNodeExtensionsPtrInput is an input type that accepts DatabaseNodeExtensionsArgs, DatabaseNodeExtensionsPtr and DatabaseNodeExtensionsPtrOutput values.
// You can construct a concrete instance of `DatabaseNodeExtensionsPtrInput` via:
//
//	        DatabaseNodeExtensionsArgs{...}
//
//	or:
//
//	        nil
type DatabaseNodeExtensionsPtrInput interface {
	pulumi.Input

	ToDatabaseNodeExtensionsPtrOutput() DatabaseNodeExtensionsPtrOutput
	ToDatabaseNodeExtensionsPtrOutputWithContext(context.Context) DatabaseNodeExtensionsPtrOutput
}

type databaseNodeExtensionsPtrType DatabaseNodeExtensionsArgs

func DatabaseNodeExtensionsPtr(v *DatabaseNodeExtensionsArgs) DatabaseNodeExtensionsPtrInput {
	return (*databaseNodeExtensionsPtrType)(v)
}

func (*databaseNodeExtensionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeExtensions)(nil)).Elem()
}

func (i *databaseNodeExtensionsPtrType) ToDatabaseNodeExtensionsPtrOutput() DatabaseNodeExtensionsPtrOutput {
	return i.ToDatabaseNodeExtensionsPtrOutputWithContext(context.Background())
}

func (i *databaseNodeExtensionsPtrType) ToDatabaseNodeExtensionsPtrOutputWithContext(ctx context.Context) DatabaseNodeExtensionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeExtensionsPtrOutput)
}

type DatabaseNodeExtensionsOutput struct{ *pulumi.OutputState }

func (DatabaseNodeExtensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeExtensions)(nil)).Elem()
}

func (o DatabaseNodeExtensionsOutput) ToDatabaseNodeExtensionsOutput() DatabaseNodeExtensionsOutput {
	return o
}

func (o DatabaseNodeExtensionsOutput) ToDatabaseNodeExtensionsOutputWithContext(ctx context.Context) DatabaseNodeExtensionsOutput {
	return o
}

func (o DatabaseNodeExtensionsOutput) ToDatabaseNodeExtensionsPtrOutput() DatabaseNodeExtensionsPtrOutput {
	return o.ToDatabaseNodeExtensionsPtrOutputWithContext(context.Background())
}

func (o DatabaseNodeExtensionsOutput) ToDatabaseNodeExtensionsPtrOutputWithContext(ctx context.Context) DatabaseNodeExtensionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseNodeExtensions) *DatabaseNodeExtensions {
		return &v
	}).(DatabaseNodeExtensionsPtrOutput)
}

func (o DatabaseNodeExtensionsOutput) Errors() pulumi.StringMapOutput {
	return o.ApplyT(func(v DatabaseNodeExtensions) map[string]string { return v.Errors }).(pulumi.StringMapOutput)
}

func (o DatabaseNodeExtensionsOutput) Installeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseNodeExtensions) []string { return v.Installeds }).(pulumi.StringArrayOutput)
}

type DatabaseNodeExtensionsPtrOutput struct{ *pulumi.OutputState }

func (DatabaseNodeExtensionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeExtensions)(nil)).Elem()
}

func (o DatabaseNodeExtensionsPtrOutput) ToDatabaseNodeExtensionsPtrOutput() DatabaseNodeExtensionsPtrOutput {
	return o
}

func (o DatabaseNodeExtensionsPtrOutput) ToDatabaseNodeExtensionsPtrOutputWithContext(ctx context.Context) DatabaseNodeExtensionsPtrOutput {
	return o
}

func (o DatabaseNodeExtensionsPtrOutput) Elem() DatabaseNodeExtensionsOutput {
	return o.ApplyT(func(v *DatabaseNodeExtensions) DatabaseNodeExtensions {
		if v != nil {
			return *v
		}
		var ret DatabaseNodeExtensions
		return ret
	}).(DatabaseNodeExtensionsOutput)
}

func (o DatabaseNodeExtensionsPtrOutput) Errors() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseNodeExtensions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Errors
	}).(pulumi.StringMapOutput)
}

func (o DatabaseNodeExtensionsPtrOutput) Installeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseNodeExtensions) []string {
		if v == nil {
			return nil
		}
		return v.Installeds
	}).(pulumi.StringArrayOutput)
}

type DatabaseNodeLocation struct {
	City       *string  `pulumi:"city"`
	Code       *string  `pulumi:"code"`
	Country    *string  `pulumi:"country"`
	Latitude   *float64 `pulumi:"latitude"`
	Longitude  *float64 `pulumi:"longitude"`
	MetroCode  *string  `pulumi:"metroCode"`
	Name       *string  `pulumi:"name"`
	PostalCode *string  `pulumi:"postalCode"`
	Region     *string  `pulumi:"region"`
	RegionCode *string  `pulumi:"regionCode"`
	Timezone   *string  `pulumi:"timezone"`
}

// DatabaseNodeLocationInput is an input type that accepts DatabaseNodeLocationArgs and DatabaseNodeLocationOutput values.
// You can construct a concrete instance of `DatabaseNodeLocationInput` via:
//
//	DatabaseNodeLocationArgs{...}
type DatabaseNodeLocationInput interface {
	pulumi.Input

	ToDatabaseNodeLocationOutput() DatabaseNodeLocationOutput
	ToDatabaseNodeLocationOutputWithContext(context.Context) DatabaseNodeLocationOutput
}

type DatabaseNodeLocationArgs struct {
	City       pulumi.StringPtrInput  `pulumi:"city"`
	Code       pulumi.StringPtrInput  `pulumi:"code"`
	Country    pulumi.StringPtrInput  `pulumi:"country"`
	Latitude   pulumi.Float64PtrInput `pulumi:"latitude"`
	Longitude  pulumi.Float64PtrInput `pulumi:"longitude"`
	MetroCode  pulumi.StringPtrInput  `pulumi:"metroCode"`
	Name       pulumi.StringPtrInput  `pulumi:"name"`
	PostalCode pulumi.StringPtrInput  `pulumi:"postalCode"`
	Region     pulumi.StringPtrInput  `pulumi:"region"`
	RegionCode pulumi.StringPtrInput  `pulumi:"regionCode"`
	Timezone   pulumi.StringPtrInput  `pulumi:"timezone"`
}

func (DatabaseNodeLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeLocation)(nil)).Elem()
}

func (i DatabaseNodeLocationArgs) ToDatabaseNodeLocationOutput() DatabaseNodeLocationOutput {
	return i.ToDatabaseNodeLocationOutputWithContext(context.Background())
}

func (i DatabaseNodeLocationArgs) ToDatabaseNodeLocationOutputWithContext(ctx context.Context) DatabaseNodeLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeLocationOutput)
}

func (i DatabaseNodeLocationArgs) ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput {
	return i.ToDatabaseNodeLocationPtrOutputWithContext(context.Background())
}

func (i DatabaseNodeLocationArgs) ToDatabaseNodeLocationPtrOutputWithContext(ctx context.Context) DatabaseNodeLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeLocationOutput).ToDatabaseNodeLocationPtrOutputWithContext(ctx)
}

// DatabaseNodeLocationPtrInput is an input type that accepts DatabaseNodeLocationArgs, DatabaseNodeLocationPtr and DatabaseNodeLocationPtrOutput values.
// You can construct a concrete instance of `DatabaseNodeLocationPtrInput` via:
//
//	        DatabaseNodeLocationArgs{...}
//
//	or:
//
//	        nil
type DatabaseNodeLocationPtrInput interface {
	pulumi.Input

	ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput
	ToDatabaseNodeLocationPtrOutputWithContext(context.Context) DatabaseNodeLocationPtrOutput
}

type databaseNodeLocationPtrType DatabaseNodeLocationArgs

func DatabaseNodeLocationPtr(v *DatabaseNodeLocationArgs) DatabaseNodeLocationPtrInput {
	return (*databaseNodeLocationPtrType)(v)
}

func (*databaseNodeLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeLocation)(nil)).Elem()
}

func (i *databaseNodeLocationPtrType) ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput {
	return i.ToDatabaseNodeLocationPtrOutputWithContext(context.Background())
}

func (i *databaseNodeLocationPtrType) ToDatabaseNodeLocationPtrOutputWithContext(ctx context.Context) DatabaseNodeLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeLocationPtrOutput)
}

type DatabaseNodeLocationOutput struct{ *pulumi.OutputState }

func (DatabaseNodeLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeLocation)(nil)).Elem()
}

func (o DatabaseNodeLocationOutput) ToDatabaseNodeLocationOutput() DatabaseNodeLocationOutput {
	return o
}

func (o DatabaseNodeLocationOutput) ToDatabaseNodeLocationOutputWithContext(ctx context.Context) DatabaseNodeLocationOutput {
	return o
}

func (o DatabaseNodeLocationOutput) ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput {
	return o.ToDatabaseNodeLocationPtrOutputWithContext(context.Background())
}

func (o DatabaseNodeLocationOutput) ToDatabaseNodeLocationPtrOutputWithContext(ctx context.Context) DatabaseNodeLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseNodeLocation) *DatabaseNodeLocation {
		return &v
	}).(DatabaseNodeLocationPtrOutput)
}

func (o DatabaseNodeLocationOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Country }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationOutput) Latitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *float64 { return v.Latitude }).(pulumi.Float64PtrOutput)
}

func (o DatabaseNodeLocationOutput) Longitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *float64 { return v.Longitude }).(pulumi.Float64PtrOutput)
}

func (o DatabaseNodeLocationOutput) MetroCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.MetroCode }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationOutput) RegionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.RegionCode }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeLocation) *string { return v.Timezone }).(pulumi.StringPtrOutput)
}

type DatabaseNodeLocationPtrOutput struct{ *pulumi.OutputState }

func (DatabaseNodeLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeLocation)(nil)).Elem()
}

func (o DatabaseNodeLocationPtrOutput) ToDatabaseNodeLocationPtrOutput() DatabaseNodeLocationPtrOutput {
	return o
}

func (o DatabaseNodeLocationPtrOutput) ToDatabaseNodeLocationPtrOutputWithContext(ctx context.Context) DatabaseNodeLocationPtrOutput {
	return o
}

func (o DatabaseNodeLocationPtrOutput) Elem() DatabaseNodeLocationOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) DatabaseNodeLocation {
		if v != nil {
			return *v
		}
		var ret DatabaseNodeLocation
		return ret
	}).(DatabaseNodeLocationOutput)
}

func (o DatabaseNodeLocationPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) Latitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *float64 {
		if v == nil {
			return nil
		}
		return v.Latitude
	}).(pulumi.Float64PtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) Longitude() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *float64 {
		if v == nil {
			return nil
		}
		return v.Longitude
	}).(pulumi.Float64PtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) MetroCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.MetroCode
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) RegionCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.RegionCode
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeLocationPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeLocation) *string {
		if v == nil {
			return nil
		}
		return v.Timezone
	}).(pulumi.StringPtrOutput)
}

type DatabaseNodeRegion struct {
	Active            *bool    `pulumi:"active"`
	AvailabilityZones []string `pulumi:"availabilityZones"`
	Cloud             *string  `pulumi:"cloud"`
	Code              *string  `pulumi:"code"`
	Name              *string  `pulumi:"name"`
	Parent            *string  `pulumi:"parent"`
}

// DatabaseNodeRegionInput is an input type that accepts DatabaseNodeRegionArgs and DatabaseNodeRegionOutput values.
// You can construct a concrete instance of `DatabaseNodeRegionInput` via:
//
//	DatabaseNodeRegionArgs{...}
type DatabaseNodeRegionInput interface {
	pulumi.Input

	ToDatabaseNodeRegionOutput() DatabaseNodeRegionOutput
	ToDatabaseNodeRegionOutputWithContext(context.Context) DatabaseNodeRegionOutput
}

type DatabaseNodeRegionArgs struct {
	Active            pulumi.BoolPtrInput     `pulumi:"active"`
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	Cloud             pulumi.StringPtrInput   `pulumi:"cloud"`
	Code              pulumi.StringPtrInput   `pulumi:"code"`
	Name              pulumi.StringPtrInput   `pulumi:"name"`
	Parent            pulumi.StringPtrInput   `pulumi:"parent"`
}

func (DatabaseNodeRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeRegion)(nil)).Elem()
}

func (i DatabaseNodeRegionArgs) ToDatabaseNodeRegionOutput() DatabaseNodeRegionOutput {
	return i.ToDatabaseNodeRegionOutputWithContext(context.Background())
}

func (i DatabaseNodeRegionArgs) ToDatabaseNodeRegionOutputWithContext(ctx context.Context) DatabaseNodeRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeRegionOutput)
}

func (i DatabaseNodeRegionArgs) ToDatabaseNodeRegionPtrOutput() DatabaseNodeRegionPtrOutput {
	return i.ToDatabaseNodeRegionPtrOutputWithContext(context.Background())
}

func (i DatabaseNodeRegionArgs) ToDatabaseNodeRegionPtrOutputWithContext(ctx context.Context) DatabaseNodeRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeRegionOutput).ToDatabaseNodeRegionPtrOutputWithContext(ctx)
}

// DatabaseNodeRegionPtrInput is an input type that accepts DatabaseNodeRegionArgs, DatabaseNodeRegionPtr and DatabaseNodeRegionPtrOutput values.
// You can construct a concrete instance of `DatabaseNodeRegionPtrInput` via:
//
//	        DatabaseNodeRegionArgs{...}
//
//	or:
//
//	        nil
type DatabaseNodeRegionPtrInput interface {
	pulumi.Input

	ToDatabaseNodeRegionPtrOutput() DatabaseNodeRegionPtrOutput
	ToDatabaseNodeRegionPtrOutputWithContext(context.Context) DatabaseNodeRegionPtrOutput
}

type databaseNodeRegionPtrType DatabaseNodeRegionArgs

func DatabaseNodeRegionPtr(v *DatabaseNodeRegionArgs) DatabaseNodeRegionPtrInput {
	return (*databaseNodeRegionPtrType)(v)
}

func (*databaseNodeRegionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeRegion)(nil)).Elem()
}

func (i *databaseNodeRegionPtrType) ToDatabaseNodeRegionPtrOutput() DatabaseNodeRegionPtrOutput {
	return i.ToDatabaseNodeRegionPtrOutputWithContext(context.Background())
}

func (i *databaseNodeRegionPtrType) ToDatabaseNodeRegionPtrOutputWithContext(ctx context.Context) DatabaseNodeRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNodeRegionPtrOutput)
}

type DatabaseNodeRegionOutput struct{ *pulumi.OutputState }

func (DatabaseNodeRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNodeRegion)(nil)).Elem()
}

func (o DatabaseNodeRegionOutput) ToDatabaseNodeRegionOutput() DatabaseNodeRegionOutput {
	return o
}

func (o DatabaseNodeRegionOutput) ToDatabaseNodeRegionOutputWithContext(ctx context.Context) DatabaseNodeRegionOutput {
	return o
}

func (o DatabaseNodeRegionOutput) ToDatabaseNodeRegionPtrOutput() DatabaseNodeRegionPtrOutput {
	return o.ToDatabaseNodeRegionPtrOutputWithContext(context.Background())
}

func (o DatabaseNodeRegionOutput) ToDatabaseNodeRegionPtrOutputWithContext(ctx context.Context) DatabaseNodeRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatabaseNodeRegion) *DatabaseNodeRegion {
		return &v
	}).(DatabaseNodeRegionPtrOutput)
}

func (o DatabaseNodeRegionOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseNodeRegion) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

func (o DatabaseNodeRegionOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DatabaseNodeRegion) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o DatabaseNodeRegionOutput) Cloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeRegion) *string { return v.Cloud }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeRegionOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeRegion) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeRegionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeRegion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeRegionOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseNodeRegion) *string { return v.Parent }).(pulumi.StringPtrOutput)
}

type DatabaseNodeRegionPtrOutput struct{ *pulumi.OutputState }

func (DatabaseNodeRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNodeRegion)(nil)).Elem()
}

func (o DatabaseNodeRegionPtrOutput) ToDatabaseNodeRegionPtrOutput() DatabaseNodeRegionPtrOutput {
	return o
}

func (o DatabaseNodeRegionPtrOutput) ToDatabaseNodeRegionPtrOutputWithContext(ctx context.Context) DatabaseNodeRegionPtrOutput {
	return o
}

func (o DatabaseNodeRegionPtrOutput) Elem() DatabaseNodeRegionOutput {
	return o.ApplyT(func(v *DatabaseNodeRegion) DatabaseNodeRegion {
		if v != nil {
			return *v
		}
		var ret DatabaseNodeRegion
		return ret
	}).(DatabaseNodeRegionOutput)
}

func (o DatabaseNodeRegionPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeRegion) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

func (o DatabaseNodeRegionPtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseNodeRegion) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

func (o DatabaseNodeRegionPtrOutput) Cloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeRegion) *string {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeRegionPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeRegion) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeRegionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeRegion) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DatabaseNodeRegionPtrOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseNodeRegion) *string {
		if v == nil {
			return nil
		}
		return v.Parent
	}).(pulumi.StringPtrOutput)
}

type DatabaseRole struct {
	BypassRls       *bool   `pulumi:"bypassRls"`
	ConnectionLimit *int    `pulumi:"connectionLimit"`
	CreateDb        *bool   `pulumi:"createDb"`
	CreateRole      *bool   `pulumi:"createRole"`
	Inherit         *bool   `pulumi:"inherit"`
	Login           *bool   `pulumi:"login"`
	Name            *string `pulumi:"name"`
	Replication     *bool   `pulumi:"replication"`
	Superuser       *bool   `pulumi:"superuser"`
}

// DatabaseRoleInput is an input type that accepts DatabaseRoleArgs and DatabaseRoleOutput values.
// You can construct a concrete instance of `DatabaseRoleInput` via:
//
//	DatabaseRoleArgs{...}
type DatabaseRoleInput interface {
	pulumi.Input

	ToDatabaseRoleOutput() DatabaseRoleOutput
	ToDatabaseRoleOutputWithContext(context.Context) DatabaseRoleOutput
}

type DatabaseRoleArgs struct {
	BypassRls       pulumi.BoolPtrInput   `pulumi:"bypassRls"`
	ConnectionLimit pulumi.IntPtrInput    `pulumi:"connectionLimit"`
	CreateDb        pulumi.BoolPtrInput   `pulumi:"createDb"`
	CreateRole      pulumi.BoolPtrInput   `pulumi:"createRole"`
	Inherit         pulumi.BoolPtrInput   `pulumi:"inherit"`
	Login           pulumi.BoolPtrInput   `pulumi:"login"`
	Name            pulumi.StringPtrInput `pulumi:"name"`
	Replication     pulumi.BoolPtrInput   `pulumi:"replication"`
	Superuser       pulumi.BoolPtrInput   `pulumi:"superuser"`
}

func (DatabaseRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRole)(nil)).Elem()
}

func (i DatabaseRoleArgs) ToDatabaseRoleOutput() DatabaseRoleOutput {
	return i.ToDatabaseRoleOutputWithContext(context.Background())
}

func (i DatabaseRoleArgs) ToDatabaseRoleOutputWithContext(ctx context.Context) DatabaseRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseRoleOutput)
}

// DatabaseRoleArrayInput is an input type that accepts DatabaseRoleArray and DatabaseRoleArrayOutput values.
// You can construct a concrete instance of `DatabaseRoleArrayInput` via:
//
//	DatabaseRoleArray{ DatabaseRoleArgs{...} }
type DatabaseRoleArrayInput interface {
	pulumi.Input

	ToDatabaseRoleArrayOutput() DatabaseRoleArrayOutput
	ToDatabaseRoleArrayOutputWithContext(context.Context) DatabaseRoleArrayOutput
}

type DatabaseRoleArray []DatabaseRoleInput

func (DatabaseRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseRole)(nil)).Elem()
}

func (i DatabaseRoleArray) ToDatabaseRoleArrayOutput() DatabaseRoleArrayOutput {
	return i.ToDatabaseRoleArrayOutputWithContext(context.Background())
}

func (i DatabaseRoleArray) ToDatabaseRoleArrayOutputWithContext(ctx context.Context) DatabaseRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseRoleArrayOutput)
}

type DatabaseRoleOutput struct{ *pulumi.OutputState }

func (DatabaseRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRole)(nil)).Elem()
}

func (o DatabaseRoleOutput) ToDatabaseRoleOutput() DatabaseRoleOutput {
	return o
}

func (o DatabaseRoleOutput) ToDatabaseRoleOutputWithContext(ctx context.Context) DatabaseRoleOutput {
	return o
}

func (o DatabaseRoleOutput) BypassRls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *bool { return v.BypassRls }).(pulumi.BoolPtrOutput)
}

func (o DatabaseRoleOutput) ConnectionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *int { return v.ConnectionLimit }).(pulumi.IntPtrOutput)
}

func (o DatabaseRoleOutput) CreateDb() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *bool { return v.CreateDb }).(pulumi.BoolPtrOutput)
}

func (o DatabaseRoleOutput) CreateRole() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *bool { return v.CreateRole }).(pulumi.BoolPtrOutput)
}

func (o DatabaseRoleOutput) Inherit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *bool { return v.Inherit }).(pulumi.BoolPtrOutput)
}

func (o DatabaseRoleOutput) Login() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *bool { return v.Login }).(pulumi.BoolPtrOutput)
}

func (o DatabaseRoleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DatabaseRoleOutput) Replication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *bool { return v.Replication }).(pulumi.BoolPtrOutput)
}

func (o DatabaseRoleOutput) Superuser() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseRole) *bool { return v.Superuser }).(pulumi.BoolPtrOutput)
}

type DatabaseRoleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseRole)(nil)).Elem()
}

func (o DatabaseRoleArrayOutput) ToDatabaseRoleArrayOutput() DatabaseRoleArrayOutput {
	return o
}

func (o DatabaseRoleArrayOutput) ToDatabaseRoleArrayOutputWithContext(ctx context.Context) DatabaseRoleArrayOutput {
	return o
}

func (o DatabaseRoleArrayOutput) Index(i pulumi.IntInput) DatabaseRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseRole {
		return vs[0].([]DatabaseRole)[vs[1].(int)]
	}).(DatabaseRoleOutput)
}

type GetBackupStoresBackupStore struct {
	CloudAccountId   string            `pulumi:"cloudAccountId"`
	CloudAccountType string            `pulumi:"cloudAccountType"`
	ClusterIds       []string          `pulumi:"clusterIds"`
	CreatedAt        string            `pulumi:"createdAt"`
	Id               string            `pulumi:"id"`
	Name             string            `pulumi:"name"`
	Properties       map[string]string `pulumi:"properties"`
	Status           string            `pulumi:"status"`
	UpdatedAt        string            `pulumi:"updatedAt"`
}

// GetBackupStoresBackupStoreInput is an input type that accepts GetBackupStoresBackupStoreArgs and GetBackupStoresBackupStoreOutput values.
// You can construct a concrete instance of `GetBackupStoresBackupStoreInput` via:
//
//	GetBackupStoresBackupStoreArgs{...}
type GetBackupStoresBackupStoreInput interface {
	pulumi.Input

	ToGetBackupStoresBackupStoreOutput() GetBackupStoresBackupStoreOutput
	ToGetBackupStoresBackupStoreOutputWithContext(context.Context) GetBackupStoresBackupStoreOutput
}

type GetBackupStoresBackupStoreArgs struct {
	CloudAccountId   pulumi.StringInput      `pulumi:"cloudAccountId"`
	CloudAccountType pulumi.StringInput      `pulumi:"cloudAccountType"`
	ClusterIds       pulumi.StringArrayInput `pulumi:"clusterIds"`
	CreatedAt        pulumi.StringInput      `pulumi:"createdAt"`
	Id               pulumi.StringInput      `pulumi:"id"`
	Name             pulumi.StringInput      `pulumi:"name"`
	Properties       pulumi.StringMapInput   `pulumi:"properties"`
	Status           pulumi.StringInput      `pulumi:"status"`
	UpdatedAt        pulumi.StringInput      `pulumi:"updatedAt"`
}

func (GetBackupStoresBackupStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupStoresBackupStore)(nil)).Elem()
}

func (i GetBackupStoresBackupStoreArgs) ToGetBackupStoresBackupStoreOutput() GetBackupStoresBackupStoreOutput {
	return i.ToGetBackupStoresBackupStoreOutputWithContext(context.Background())
}

func (i GetBackupStoresBackupStoreArgs) ToGetBackupStoresBackupStoreOutputWithContext(ctx context.Context) GetBackupStoresBackupStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupStoresBackupStoreOutput)
}

// GetBackupStoresBackupStoreArrayInput is an input type that accepts GetBackupStoresBackupStoreArray and GetBackupStoresBackupStoreArrayOutput values.
// You can construct a concrete instance of `GetBackupStoresBackupStoreArrayInput` via:
//
//	GetBackupStoresBackupStoreArray{ GetBackupStoresBackupStoreArgs{...} }
type GetBackupStoresBackupStoreArrayInput interface {
	pulumi.Input

	ToGetBackupStoresBackupStoreArrayOutput() GetBackupStoresBackupStoreArrayOutput
	ToGetBackupStoresBackupStoreArrayOutputWithContext(context.Context) GetBackupStoresBackupStoreArrayOutput
}

type GetBackupStoresBackupStoreArray []GetBackupStoresBackupStoreInput

func (GetBackupStoresBackupStoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupStoresBackupStore)(nil)).Elem()
}

func (i GetBackupStoresBackupStoreArray) ToGetBackupStoresBackupStoreArrayOutput() GetBackupStoresBackupStoreArrayOutput {
	return i.ToGetBackupStoresBackupStoreArrayOutputWithContext(context.Background())
}

func (i GetBackupStoresBackupStoreArray) ToGetBackupStoresBackupStoreArrayOutputWithContext(ctx context.Context) GetBackupStoresBackupStoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBackupStoresBackupStoreArrayOutput)
}

type GetBackupStoresBackupStoreOutput struct{ *pulumi.OutputState }

func (GetBackupStoresBackupStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBackupStoresBackupStore)(nil)).Elem()
}

func (o GetBackupStoresBackupStoreOutput) ToGetBackupStoresBackupStoreOutput() GetBackupStoresBackupStoreOutput {
	return o
}

func (o GetBackupStoresBackupStoreOutput) ToGetBackupStoresBackupStoreOutputWithContext(ctx context.Context) GetBackupStoresBackupStoreOutput {
	return o
}

func (o GetBackupStoresBackupStoreOutput) CloudAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) string { return v.CloudAccountId }).(pulumi.StringOutput)
}

func (o GetBackupStoresBackupStoreOutput) CloudAccountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) string { return v.CloudAccountType }).(pulumi.StringOutput)
}

func (o GetBackupStoresBackupStoreOutput) ClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) []string { return v.ClusterIds }).(pulumi.StringArrayOutput)
}

func (o GetBackupStoresBackupStoreOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetBackupStoresBackupStoreOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBackupStoresBackupStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetBackupStoresBackupStoreOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

func (o GetBackupStoresBackupStoreOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetBackupStoresBackupStoreOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetBackupStoresBackupStore) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetBackupStoresBackupStoreArrayOutput struct{ *pulumi.OutputState }

func (GetBackupStoresBackupStoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBackupStoresBackupStore)(nil)).Elem()
}

func (o GetBackupStoresBackupStoreArrayOutput) ToGetBackupStoresBackupStoreArrayOutput() GetBackupStoresBackupStoreArrayOutput {
	return o
}

func (o GetBackupStoresBackupStoreArrayOutput) ToGetBackupStoresBackupStoreArrayOutputWithContext(ctx context.Context) GetBackupStoresBackupStoreArrayOutput {
	return o
}

func (o GetBackupStoresBackupStoreArrayOutput) Index(i pulumi.IntInput) GetBackupStoresBackupStoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBackupStoresBackupStore {
		return vs[0].([]GetBackupStoresBackupStore)[vs[1].(int)]
	}).(GetBackupStoresBackupStoreOutput)
}

type GetCloudAccountsCloudAccount struct {
	// Creation time of the cloud account
	CreatedAt string `pulumi:"createdAt"`
	// Description of the cloud account
	Description string `pulumi:"description"`
	// ID of the cloud account
	Id string `pulumi:"id"`
	// Name of the cloud account
	Name string `pulumi:"name"`
	// Additional properties of the cloud account
	Properties map[string]string `pulumi:"properties"`
	// Type of the cloud account (e.g., AWS, Azure, GCP)
	Type string `pulumi:"type"`
	// Last update time of the cloud account
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetCloudAccountsCloudAccountInput is an input type that accepts GetCloudAccountsCloudAccountArgs and GetCloudAccountsCloudAccountOutput values.
// You can construct a concrete instance of `GetCloudAccountsCloudAccountInput` via:
//
//	GetCloudAccountsCloudAccountArgs{...}
type GetCloudAccountsCloudAccountInput interface {
	pulumi.Input

	ToGetCloudAccountsCloudAccountOutput() GetCloudAccountsCloudAccountOutput
	ToGetCloudAccountsCloudAccountOutputWithContext(context.Context) GetCloudAccountsCloudAccountOutput
}

type GetCloudAccountsCloudAccountArgs struct {
	// Creation time of the cloud account
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Description of the cloud account
	Description pulumi.StringInput `pulumi:"description"`
	// ID of the cloud account
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the cloud account
	Name pulumi.StringInput `pulumi:"name"`
	// Additional properties of the cloud account
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// Type of the cloud account (e.g., AWS, Azure, GCP)
	Type pulumi.StringInput `pulumi:"type"`
	// Last update time of the cloud account
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetCloudAccountsCloudAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudAccountsCloudAccount)(nil)).Elem()
}

func (i GetCloudAccountsCloudAccountArgs) ToGetCloudAccountsCloudAccountOutput() GetCloudAccountsCloudAccountOutput {
	return i.ToGetCloudAccountsCloudAccountOutputWithContext(context.Background())
}

func (i GetCloudAccountsCloudAccountArgs) ToGetCloudAccountsCloudAccountOutputWithContext(ctx context.Context) GetCloudAccountsCloudAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudAccountsCloudAccountOutput)
}

// GetCloudAccountsCloudAccountArrayInput is an input type that accepts GetCloudAccountsCloudAccountArray and GetCloudAccountsCloudAccountArrayOutput values.
// You can construct a concrete instance of `GetCloudAccountsCloudAccountArrayInput` via:
//
//	GetCloudAccountsCloudAccountArray{ GetCloudAccountsCloudAccountArgs{...} }
type GetCloudAccountsCloudAccountArrayInput interface {
	pulumi.Input

	ToGetCloudAccountsCloudAccountArrayOutput() GetCloudAccountsCloudAccountArrayOutput
	ToGetCloudAccountsCloudAccountArrayOutputWithContext(context.Context) GetCloudAccountsCloudAccountArrayOutput
}

type GetCloudAccountsCloudAccountArray []GetCloudAccountsCloudAccountInput

func (GetCloudAccountsCloudAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudAccountsCloudAccount)(nil)).Elem()
}

func (i GetCloudAccountsCloudAccountArray) ToGetCloudAccountsCloudAccountArrayOutput() GetCloudAccountsCloudAccountArrayOutput {
	return i.ToGetCloudAccountsCloudAccountArrayOutputWithContext(context.Background())
}

func (i GetCloudAccountsCloudAccountArray) ToGetCloudAccountsCloudAccountArrayOutputWithContext(ctx context.Context) GetCloudAccountsCloudAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudAccountsCloudAccountArrayOutput)
}

type GetCloudAccountsCloudAccountOutput struct{ *pulumi.OutputState }

func (GetCloudAccountsCloudAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudAccountsCloudAccount)(nil)).Elem()
}

func (o GetCloudAccountsCloudAccountOutput) ToGetCloudAccountsCloudAccountOutput() GetCloudAccountsCloudAccountOutput {
	return o
}

func (o GetCloudAccountsCloudAccountOutput) ToGetCloudAccountsCloudAccountOutputWithContext(ctx context.Context) GetCloudAccountsCloudAccountOutput {
	return o
}

// Creation time of the cloud account
func (o GetCloudAccountsCloudAccountOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudAccountsCloudAccount) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the cloud account
func (o GetCloudAccountsCloudAccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudAccountsCloudAccount) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the cloud account
func (o GetCloudAccountsCloudAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudAccountsCloudAccount) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the cloud account
func (o GetCloudAccountsCloudAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudAccountsCloudAccount) string { return v.Name }).(pulumi.StringOutput)
}

// Additional properties of the cloud account
func (o GetCloudAccountsCloudAccountOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCloudAccountsCloudAccount) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Type of the cloud account (e.g., AWS, Azure, GCP)
func (o GetCloudAccountsCloudAccountOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudAccountsCloudAccount) string { return v.Type }).(pulumi.StringOutput)
}

// Last update time of the cloud account
func (o GetCloudAccountsCloudAccountOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudAccountsCloudAccount) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetCloudAccountsCloudAccountArrayOutput struct{ *pulumi.OutputState }

func (GetCloudAccountsCloudAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudAccountsCloudAccount)(nil)).Elem()
}

func (o GetCloudAccountsCloudAccountArrayOutput) ToGetCloudAccountsCloudAccountArrayOutput() GetCloudAccountsCloudAccountArrayOutput {
	return o
}

func (o GetCloudAccountsCloudAccountArrayOutput) ToGetCloudAccountsCloudAccountArrayOutputWithContext(ctx context.Context) GetCloudAccountsCloudAccountArrayOutput {
	return o
}

func (o GetCloudAccountsCloudAccountArrayOutput) Index(i pulumi.IntInput) GetCloudAccountsCloudAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudAccountsCloudAccount {
		return vs[0].([]GetCloudAccountsCloudAccount)[vs[1].(int)]
	}).(GetCloudAccountsCloudAccountOutput)
}

type GetClustersCluster struct {
	// Backup store IDs of the cluster
	BackupStoreIds []string `pulumi:"backupStoreIds"`
	// Capacity of the cluster
	Capacity int `pulumi:"capacity"`
	// Cloud account ID of the cluster
	CloudAccountId string `pulumi:"cloudAccountId"`
	// Created at of the cluster
	CreatedAt     string                           `pulumi:"createdAt"`
	FirewallRules []GetClustersClusterFirewallRule `pulumi:"firewallRules"`
	// ID of the cluster
	Id string `pulumi:"id"`
	// Name of the cluster
	Name     string                      `pulumi:"name"`
	Networks []GetClustersClusterNetwork `pulumi:"networks"`
	// Node location of the cluster
	NodeLocation string                   `pulumi:"nodeLocation"`
	Nodes        []GetClustersClusterNode `pulumi:"nodes"`
	Regions      []string                 `pulumi:"regions"`
	// Resource tags of the cluster
	ResourceTags map[string]string `pulumi:"resourceTags"`
	// SSH key ID of the cluster
	SshKeyId string `pulumi:"sshKeyId"`
	// Status of the cluster
	Status string `pulumi:"status"`
}

// GetClustersClusterInput is an input type that accepts GetClustersClusterArgs and GetClustersClusterOutput values.
// You can construct a concrete instance of `GetClustersClusterInput` via:
//
//	GetClustersClusterArgs{...}
type GetClustersClusterInput interface {
	pulumi.Input

	ToGetClustersClusterOutput() GetClustersClusterOutput
	ToGetClustersClusterOutputWithContext(context.Context) GetClustersClusterOutput
}

type GetClustersClusterArgs struct {
	// Backup store IDs of the cluster
	BackupStoreIds pulumi.StringArrayInput `pulumi:"backupStoreIds"`
	// Capacity of the cluster
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Cloud account ID of the cluster
	CloudAccountId pulumi.StringInput `pulumi:"cloudAccountId"`
	// Created at of the cluster
	CreatedAt     pulumi.StringInput                       `pulumi:"createdAt"`
	FirewallRules GetClustersClusterFirewallRuleArrayInput `pulumi:"firewallRules"`
	// ID of the cluster
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the cluster
	Name     pulumi.StringInput                  `pulumi:"name"`
	Networks GetClustersClusterNetworkArrayInput `pulumi:"networks"`
	// Node location of the cluster
	NodeLocation pulumi.StringInput               `pulumi:"nodeLocation"`
	Nodes        GetClustersClusterNodeArrayInput `pulumi:"nodes"`
	Regions      pulumi.StringArrayInput          `pulumi:"regions"`
	// Resource tags of the cluster
	ResourceTags pulumi.StringMapInput `pulumi:"resourceTags"`
	// SSH key ID of the cluster
	SshKeyId pulumi.StringInput `pulumi:"sshKeyId"`
	// Status of the cluster
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return i.ToGetClustersClusterOutputWithContext(context.Background())
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterOutput)
}

// GetClustersClusterArrayInput is an input type that accepts GetClustersClusterArray and GetClustersClusterArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterArrayInput` via:
//
//	GetClustersClusterArray{ GetClustersClusterArgs{...} }
type GetClustersClusterArrayInput interface {
	pulumi.Input

	ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput
	ToGetClustersClusterArrayOutputWithContext(context.Context) GetClustersClusterArrayOutput
}

type GetClustersClusterArray []GetClustersClusterInput

func (GetClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return i.ToGetClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterArrayOutput)
}

type GetClustersClusterOutput struct{ *pulumi.OutputState }

func (GetClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return o
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return o
}

// Backup store IDs of the cluster
func (o GetClustersClusterOutput) BackupStoreIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []string { return v.BackupStoreIds }).(pulumi.StringArrayOutput)
}

// Capacity of the cluster
func (o GetClustersClusterOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.Capacity }).(pulumi.IntOutput)
}

// Cloud account ID of the cluster
func (o GetClustersClusterOutput) CloudAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CloudAccountId }).(pulumi.StringOutput)
}

// Created at of the cluster
func (o GetClustersClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) FirewallRules() GetClustersClusterFirewallRuleArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterFirewallRule { return v.FirewallRules }).(GetClustersClusterFirewallRuleArrayOutput)
}

// ID of the cluster
func (o GetClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the cluster
func (o GetClustersClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) Networks() GetClustersClusterNetworkArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterNetwork { return v.Networks }).(GetClustersClusterNetworkArrayOutput)
}

// Node location of the cluster
func (o GetClustersClusterOutput) NodeLocation() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.NodeLocation }).(pulumi.StringOutput)
}

func (o GetClustersClusterOutput) Nodes() GetClustersClusterNodeArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterNode { return v.Nodes }).(GetClustersClusterNodeArrayOutput)
}

func (o GetClustersClusterOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// Resource tags of the cluster
func (o GetClustersClusterOutput) ResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClustersCluster) map[string]string { return v.ResourceTags }).(pulumi.StringMapOutput)
}

// SSH key ID of the cluster
func (o GetClustersClusterOutput) SshKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.SshKeyId }).(pulumi.StringOutput)
}

// Status of the cluster
func (o GetClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

type GetClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) Index(i pulumi.IntInput) GetClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersCluster {
		return vs[0].([]GetClustersCluster)[vs[1].(int)]
	}).(GetClustersClusterOutput)
}

type GetClustersClusterFirewallRule struct {
	// Name of the firewall rule
	Name string `pulumi:"name"`
	// Port for the firewall rule
	Port int `pulumi:"port"`
	// Sources for the firewall rule
	Sources []string `pulumi:"sources"`
}

// GetClustersClusterFirewallRuleInput is an input type that accepts GetClustersClusterFirewallRuleArgs and GetClustersClusterFirewallRuleOutput values.
// You can construct a concrete instance of `GetClustersClusterFirewallRuleInput` via:
//
//	GetClustersClusterFirewallRuleArgs{...}
type GetClustersClusterFirewallRuleInput interface {
	pulumi.Input

	ToGetClustersClusterFirewallRuleOutput() GetClustersClusterFirewallRuleOutput
	ToGetClustersClusterFirewallRuleOutputWithContext(context.Context) GetClustersClusterFirewallRuleOutput
}

type GetClustersClusterFirewallRuleArgs struct {
	// Name of the firewall rule
	Name pulumi.StringInput `pulumi:"name"`
	// Port for the firewall rule
	Port pulumi.IntInput `pulumi:"port"`
	// Sources for the firewall rule
	Sources pulumi.StringArrayInput `pulumi:"sources"`
}

func (GetClustersClusterFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterFirewallRule)(nil)).Elem()
}

func (i GetClustersClusterFirewallRuleArgs) ToGetClustersClusterFirewallRuleOutput() GetClustersClusterFirewallRuleOutput {
	return i.ToGetClustersClusterFirewallRuleOutputWithContext(context.Background())
}

func (i GetClustersClusterFirewallRuleArgs) ToGetClustersClusterFirewallRuleOutputWithContext(ctx context.Context) GetClustersClusterFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterFirewallRuleOutput)
}

// GetClustersClusterFirewallRuleArrayInput is an input type that accepts GetClustersClusterFirewallRuleArray and GetClustersClusterFirewallRuleArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterFirewallRuleArrayInput` via:
//
//	GetClustersClusterFirewallRuleArray{ GetClustersClusterFirewallRuleArgs{...} }
type GetClustersClusterFirewallRuleArrayInput interface {
	pulumi.Input

	ToGetClustersClusterFirewallRuleArrayOutput() GetClustersClusterFirewallRuleArrayOutput
	ToGetClustersClusterFirewallRuleArrayOutputWithContext(context.Context) GetClustersClusterFirewallRuleArrayOutput
}

type GetClustersClusterFirewallRuleArray []GetClustersClusterFirewallRuleInput

func (GetClustersClusterFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterFirewallRule)(nil)).Elem()
}

func (i GetClustersClusterFirewallRuleArray) ToGetClustersClusterFirewallRuleArrayOutput() GetClustersClusterFirewallRuleArrayOutput {
	return i.ToGetClustersClusterFirewallRuleArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterFirewallRuleArray) ToGetClustersClusterFirewallRuleArrayOutputWithContext(ctx context.Context) GetClustersClusterFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterFirewallRuleArrayOutput)
}

type GetClustersClusterFirewallRuleOutput struct{ *pulumi.OutputState }

func (GetClustersClusterFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterFirewallRule)(nil)).Elem()
}

func (o GetClustersClusterFirewallRuleOutput) ToGetClustersClusterFirewallRuleOutput() GetClustersClusterFirewallRuleOutput {
	return o
}

func (o GetClustersClusterFirewallRuleOutput) ToGetClustersClusterFirewallRuleOutputWithContext(ctx context.Context) GetClustersClusterFirewallRuleOutput {
	return o
}

// Name of the firewall rule
func (o GetClustersClusterFirewallRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterFirewallRule) string { return v.Name }).(pulumi.StringOutput)
}

// Port for the firewall rule
func (o GetClustersClusterFirewallRuleOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterFirewallRule) int { return v.Port }).(pulumi.IntOutput)
}

// Sources for the firewall rule
func (o GetClustersClusterFirewallRuleOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterFirewallRule) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

type GetClustersClusterFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterFirewallRule)(nil)).Elem()
}

func (o GetClustersClusterFirewallRuleArrayOutput) ToGetClustersClusterFirewallRuleArrayOutput() GetClustersClusterFirewallRuleArrayOutput {
	return o
}

func (o GetClustersClusterFirewallRuleArrayOutput) ToGetClustersClusterFirewallRuleArrayOutputWithContext(ctx context.Context) GetClustersClusterFirewallRuleArrayOutput {
	return o
}

func (o GetClustersClusterFirewallRuleArrayOutput) Index(i pulumi.IntInput) GetClustersClusterFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterFirewallRule {
		return vs[0].([]GetClustersClusterFirewallRule)[vs[1].(int)]
	}).(GetClustersClusterFirewallRuleOutput)
}

type GetClustersClusterNetwork struct {
	// CIDR of the network
	Cidr string `pulumi:"cidr"`
	// Is the network external
	External bool `pulumi:"external"`
	// External ID of the network
	ExternalId string `pulumi:"externalId"`
	// Name of the firewall rule
	Name           string   `pulumi:"name"`
	PrivateSubnets []string `pulumi:"privateSubnets"`
	PublicSubnets  []string `pulumi:"publicSubnets"`
	// Region of the network
	Region string `pulumi:"region"`
}

// GetClustersClusterNetworkInput is an input type that accepts GetClustersClusterNetworkArgs and GetClustersClusterNetworkOutput values.
// You can construct a concrete instance of `GetClustersClusterNetworkInput` via:
//
//	GetClustersClusterNetworkArgs{...}
type GetClustersClusterNetworkInput interface {
	pulumi.Input

	ToGetClustersClusterNetworkOutput() GetClustersClusterNetworkOutput
	ToGetClustersClusterNetworkOutputWithContext(context.Context) GetClustersClusterNetworkOutput
}

type GetClustersClusterNetworkArgs struct {
	// CIDR of the network
	Cidr pulumi.StringInput `pulumi:"cidr"`
	// Is the network external
	External pulumi.BoolInput `pulumi:"external"`
	// External ID of the network
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// Name of the firewall rule
	Name           pulumi.StringInput      `pulumi:"name"`
	PrivateSubnets pulumi.StringArrayInput `pulumi:"privateSubnets"`
	PublicSubnets  pulumi.StringArrayInput `pulumi:"publicSubnets"`
	// Region of the network
	Region pulumi.StringInput `pulumi:"region"`
}

func (GetClustersClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNetwork)(nil)).Elem()
}

func (i GetClustersClusterNetworkArgs) ToGetClustersClusterNetworkOutput() GetClustersClusterNetworkOutput {
	return i.ToGetClustersClusterNetworkOutputWithContext(context.Background())
}

func (i GetClustersClusterNetworkArgs) ToGetClustersClusterNetworkOutputWithContext(ctx context.Context) GetClustersClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNetworkOutput)
}

// GetClustersClusterNetworkArrayInput is an input type that accepts GetClustersClusterNetworkArray and GetClustersClusterNetworkArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNetworkArrayInput` via:
//
//	GetClustersClusterNetworkArray{ GetClustersClusterNetworkArgs{...} }
type GetClustersClusterNetworkArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNetworkArrayOutput() GetClustersClusterNetworkArrayOutput
	ToGetClustersClusterNetworkArrayOutputWithContext(context.Context) GetClustersClusterNetworkArrayOutput
}

type GetClustersClusterNetworkArray []GetClustersClusterNetworkInput

func (GetClustersClusterNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNetwork)(nil)).Elem()
}

func (i GetClustersClusterNetworkArray) ToGetClustersClusterNetworkArrayOutput() GetClustersClusterNetworkArrayOutput {
	return i.ToGetClustersClusterNetworkArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNetworkArray) ToGetClustersClusterNetworkArrayOutputWithContext(ctx context.Context) GetClustersClusterNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNetworkArrayOutput)
}

type GetClustersClusterNetworkOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNetwork)(nil)).Elem()
}

func (o GetClustersClusterNetworkOutput) ToGetClustersClusterNetworkOutput() GetClustersClusterNetworkOutput {
	return o
}

func (o GetClustersClusterNetworkOutput) ToGetClustersClusterNetworkOutputWithContext(ctx context.Context) GetClustersClusterNetworkOutput {
	return o
}

// CIDR of the network
func (o GetClustersClusterNetworkOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) string { return v.Cidr }).(pulumi.StringOutput)
}

// Is the network external
func (o GetClustersClusterNetworkOutput) External() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) bool { return v.External }).(pulumi.BoolOutput)
}

// External ID of the network
func (o GetClustersClusterNetworkOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) string { return v.ExternalId }).(pulumi.StringOutput)
}

// Name of the firewall rule
func (o GetClustersClusterNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClustersClusterNetworkOutput) PrivateSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) []string { return v.PrivateSubnets }).(pulumi.StringArrayOutput)
}

func (o GetClustersClusterNetworkOutput) PublicSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) []string { return v.PublicSubnets }).(pulumi.StringArrayOutput)
}

// Region of the network
func (o GetClustersClusterNetworkOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNetwork) string { return v.Region }).(pulumi.StringOutput)
}

type GetClustersClusterNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNetwork)(nil)).Elem()
}

func (o GetClustersClusterNetworkArrayOutput) ToGetClustersClusterNetworkArrayOutput() GetClustersClusterNetworkArrayOutput {
	return o
}

func (o GetClustersClusterNetworkArrayOutput) ToGetClustersClusterNetworkArrayOutputWithContext(ctx context.Context) GetClustersClusterNetworkArrayOutput {
	return o
}

func (o GetClustersClusterNetworkArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNetwork {
		return vs[0].([]GetClustersClusterNetwork)[vs[1].(int)]
	}).(GetClustersClusterNetworkOutput)
}

type GetClustersClusterNode struct {
	// Cloud provider availability zone name
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Instance type used for the node
	InstanceType string `pulumi:"instanceType"`
	// Name of the firewall rule
	Name    string   `pulumi:"name"`
	Options []string `pulumi:"options"`
	// Region of the network
	Region string `pulumi:"region"`
	// Volume IOPS of the node data volume
	VolumeIops int `pulumi:"volumeIops"`
	// Volume size of the node data volume
	VolumeSize int `pulumi:"volumeSize"`
	// Volume type of the node data volume
	VolumeType string `pulumi:"volumeType"`
}

// GetClustersClusterNodeInput is an input type that accepts GetClustersClusterNodeArgs and GetClustersClusterNodeOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeInput` via:
//
//	GetClustersClusterNodeArgs{...}
type GetClustersClusterNodeInput interface {
	pulumi.Input

	ToGetClustersClusterNodeOutput() GetClustersClusterNodeOutput
	ToGetClustersClusterNodeOutputWithContext(context.Context) GetClustersClusterNodeOutput
}

type GetClustersClusterNodeArgs struct {
	// Cloud provider availability zone name
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// Instance type used for the node
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// Name of the firewall rule
	Name    pulumi.StringInput      `pulumi:"name"`
	Options pulumi.StringArrayInput `pulumi:"options"`
	// Region of the network
	Region pulumi.StringInput `pulumi:"region"`
	// Volume IOPS of the node data volume
	VolumeIops pulumi.IntInput `pulumi:"volumeIops"`
	// Volume size of the node data volume
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// Volume type of the node data volume
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetClustersClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNode)(nil)).Elem()
}

func (i GetClustersClusterNodeArgs) ToGetClustersClusterNodeOutput() GetClustersClusterNodeOutput {
	return i.ToGetClustersClusterNodeOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeArgs) ToGetClustersClusterNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeOutput)
}

// GetClustersClusterNodeArrayInput is an input type that accepts GetClustersClusterNodeArray and GetClustersClusterNodeArrayOutput values.
// You can construct a concrete instance of `GetClustersClusterNodeArrayInput` via:
//
//	GetClustersClusterNodeArray{ GetClustersClusterNodeArgs{...} }
type GetClustersClusterNodeArrayInput interface {
	pulumi.Input

	ToGetClustersClusterNodeArrayOutput() GetClustersClusterNodeArrayOutput
	ToGetClustersClusterNodeArrayOutputWithContext(context.Context) GetClustersClusterNodeArrayOutput
}

type GetClustersClusterNodeArray []GetClustersClusterNodeInput

func (GetClustersClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNode)(nil)).Elem()
}

func (i GetClustersClusterNodeArray) ToGetClustersClusterNodeArrayOutput() GetClustersClusterNodeArrayOutput {
	return i.ToGetClustersClusterNodeArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterNodeArray) ToGetClustersClusterNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterNodeArrayOutput)
}

type GetClustersClusterNodeOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterNode)(nil)).Elem()
}

func (o GetClustersClusterNodeOutput) ToGetClustersClusterNodeOutput() GetClustersClusterNodeOutput {
	return o
}

func (o GetClustersClusterNodeOutput) ToGetClustersClusterNodeOutputWithContext(ctx context.Context) GetClustersClusterNodeOutput {
	return o
}

// Cloud provider availability zone name
func (o GetClustersClusterNodeOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Instance type used for the node
func (o GetClustersClusterNodeOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.InstanceType }).(pulumi.StringOutput)
}

// Name of the firewall rule
func (o GetClustersClusterNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClustersClusterNodeOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersClusterNode) []string { return v.Options }).(pulumi.StringArrayOutput)
}

// Region of the network
func (o GetClustersClusterNodeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.Region }).(pulumi.StringOutput)
}

// Volume IOPS of the node data volume
func (o GetClustersClusterNodeOutput) VolumeIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNode) int { return v.VolumeIops }).(pulumi.IntOutput)
}

// Volume size of the node data volume
func (o GetClustersClusterNodeOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterNode) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// Volume type of the node data volume
func (o GetClustersClusterNodeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterNode) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetClustersClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterNode)(nil)).Elem()
}

func (o GetClustersClusterNodeArrayOutput) ToGetClustersClusterNodeArrayOutput() GetClustersClusterNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeArrayOutput) ToGetClustersClusterNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterNodeArrayOutput {
	return o
}

func (o GetClustersClusterNodeArrayOutput) Index(i pulumi.IntInput) GetClustersClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterNode {
		return vs[0].([]GetClustersClusterNode)[vs[1].(int)]
	}).(GetClustersClusterNodeOutput)
}

type GetDatabasesDatabase struct {
	// Backup configuration for the database
	Backups GetDatabasesDatabaseBackups `pulumi:"backups"`
	// ID of the cluster this database belongs to
	ClusterId string `pulumi:"clusterId"`
	// Components of the database
	Components []GetDatabasesDatabaseComponent `pulumi:"components"`
	// Configuration version of the database
	ConfigVersion string `pulumi:"configVersion"`
	// Creation timestamp of the database
	CreatedAt string `pulumi:"createdAt"`
	// Domain of the database
	Domain string `pulumi:"domain"`
	// Extensions configuration for the database
	Extensions GetDatabasesDatabaseExtensions `pulumi:"extensions"`
	// ID of the database
	Id string `pulumi:"id"`
	// Name of the database
	Name string `pulumi:"name"`
	// Nodes of the database
	Nodes []GetDatabasesDatabaseNode `pulumi:"nodes"`
	// Options for the database
	Options []string `pulumi:"options"`
	// PostgreSQL version of the database
	PgVersion string `pulumi:"pgVersion"`
	// Roles in the database
	Roles []GetDatabasesDatabaseRole `pulumi:"roles"`
	// Status of the database
	Status string `pulumi:"status"`
	// Storage used by the database in bytes
	StorageUsed int `pulumi:"storageUsed"`
	// Last update timestamp of the database
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetDatabasesDatabaseInput is an input type that accepts GetDatabasesDatabaseArgs and GetDatabasesDatabaseOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseInput` via:
//
//	GetDatabasesDatabaseArgs{...}
type GetDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput
	ToGetDatabasesDatabaseOutputWithContext(context.Context) GetDatabasesDatabaseOutput
}

type GetDatabasesDatabaseArgs struct {
	// Backup configuration for the database
	Backups GetDatabasesDatabaseBackupsInput `pulumi:"backups"`
	// ID of the cluster this database belongs to
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Components of the database
	Components GetDatabasesDatabaseComponentArrayInput `pulumi:"components"`
	// Configuration version of the database
	ConfigVersion pulumi.StringInput `pulumi:"configVersion"`
	// Creation timestamp of the database
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Domain of the database
	Domain pulumi.StringInput `pulumi:"domain"`
	// Extensions configuration for the database
	Extensions GetDatabasesDatabaseExtensionsInput `pulumi:"extensions"`
	// ID of the database
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the database
	Name pulumi.StringInput `pulumi:"name"`
	// Nodes of the database
	Nodes GetDatabasesDatabaseNodeArrayInput `pulumi:"nodes"`
	// Options for the database
	Options pulumi.StringArrayInput `pulumi:"options"`
	// PostgreSQL version of the database
	PgVersion pulumi.StringInput `pulumi:"pgVersion"`
	// Roles in the database
	Roles GetDatabasesDatabaseRoleArrayInput `pulumi:"roles"`
	// Status of the database
	Status pulumi.StringInput `pulumi:"status"`
	// Storage used by the database in bytes
	StorageUsed pulumi.IntInput `pulumi:"storageUsed"`
	// Last update timestamp of the database
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return i.ToGetDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseOutput)
}

// GetDatabasesDatabaseArrayInput is an input type that accepts GetDatabasesDatabaseArray and GetDatabasesDatabaseArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseArrayInput` via:
//
//	GetDatabasesDatabaseArray{ GetDatabasesDatabaseArgs{...} }
type GetDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput
	ToGetDatabasesDatabaseArrayOutputWithContext(context.Context) GetDatabasesDatabaseArrayOutput
}

type GetDatabasesDatabaseArray []GetDatabasesDatabaseInput

func (GetDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return i.ToGetDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseArrayOutput)
}

type GetDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return o
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return o
}

// Backup configuration for the database
func (o GetDatabasesDatabaseOutput) Backups() GetDatabasesDatabaseBackupsOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) GetDatabasesDatabaseBackups { return v.Backups }).(GetDatabasesDatabaseBackupsOutput)
}

// ID of the cluster this database belongs to
func (o GetDatabasesDatabaseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Components of the database
func (o GetDatabasesDatabaseOutput) Components() GetDatabasesDatabaseComponentArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseComponent { return v.Components }).(GetDatabasesDatabaseComponentArrayOutput)
}

// Configuration version of the database
func (o GetDatabasesDatabaseOutput) ConfigVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.ConfigVersion }).(pulumi.StringOutput)
}

// Creation timestamp of the database
func (o GetDatabasesDatabaseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Domain of the database
func (o GetDatabasesDatabaseOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Domain }).(pulumi.StringOutput)
}

// Extensions configuration for the database
func (o GetDatabasesDatabaseOutput) Extensions() GetDatabasesDatabaseExtensionsOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) GetDatabasesDatabaseExtensions { return v.Extensions }).(GetDatabasesDatabaseExtensionsOutput)
}

// ID of the database
func (o GetDatabasesDatabaseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the database
func (o GetDatabasesDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Name }).(pulumi.StringOutput)
}

// Nodes of the database
func (o GetDatabasesDatabaseOutput) Nodes() GetDatabasesDatabaseNodeArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseNode { return v.Nodes }).(GetDatabasesDatabaseNodeArrayOutput)
}

// Options for the database
func (o GetDatabasesDatabaseOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []string { return v.Options }).(pulumi.StringArrayOutput)
}

// PostgreSQL version of the database
func (o GetDatabasesDatabaseOutput) PgVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.PgVersion }).(pulumi.StringOutput)
}

// Roles in the database
func (o GetDatabasesDatabaseOutput) Roles() GetDatabasesDatabaseRoleArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseRole { return v.Roles }).(GetDatabasesDatabaseRoleArrayOutput)
}

// Status of the database
func (o GetDatabasesDatabaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Status }).(pulumi.StringOutput)
}

// Storage used by the database in bytes
func (o GetDatabasesDatabaseOutput) StorageUsed() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) int { return v.StorageUsed }).(pulumi.IntOutput)
}

// Last update timestamp of the database
func (o GetDatabasesDatabaseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabase {
		return vs[0].([]GetDatabasesDatabase)[vs[1].(int)]
	}).(GetDatabasesDatabaseOutput)
}

type GetDatabasesDatabaseBackups struct {
	// Backup configurations
	Configs []GetDatabasesDatabaseBackupsConfig `pulumi:"configs"`
	// Backup provider
	Provider string `pulumi:"provider"`
}

// GetDatabasesDatabaseBackupsInput is an input type that accepts GetDatabasesDatabaseBackupsArgs and GetDatabasesDatabaseBackupsOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseBackupsInput` via:
//
//	GetDatabasesDatabaseBackupsArgs{...}
type GetDatabasesDatabaseBackupsInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseBackupsOutput() GetDatabasesDatabaseBackupsOutput
	ToGetDatabasesDatabaseBackupsOutputWithContext(context.Context) GetDatabasesDatabaseBackupsOutput
}

type GetDatabasesDatabaseBackupsArgs struct {
	// Backup configurations
	Configs GetDatabasesDatabaseBackupsConfigArrayInput `pulumi:"configs"`
	// Backup provider
	Provider pulumi.StringInput `pulumi:"provider"`
}

func (GetDatabasesDatabaseBackupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseBackups)(nil)).Elem()
}

func (i GetDatabasesDatabaseBackupsArgs) ToGetDatabasesDatabaseBackupsOutput() GetDatabasesDatabaseBackupsOutput {
	return i.ToGetDatabasesDatabaseBackupsOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseBackupsArgs) ToGetDatabasesDatabaseBackupsOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseBackupsOutput)
}

type GetDatabasesDatabaseBackupsOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseBackupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseBackups)(nil)).Elem()
}

func (o GetDatabasesDatabaseBackupsOutput) ToGetDatabasesDatabaseBackupsOutput() GetDatabasesDatabaseBackupsOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsOutput) ToGetDatabasesDatabaseBackupsOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsOutput {
	return o
}

// Backup configurations
func (o GetDatabasesDatabaseBackupsOutput) Configs() GetDatabasesDatabaseBackupsConfigArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackups) []GetDatabasesDatabaseBackupsConfig { return v.Configs }).(GetDatabasesDatabaseBackupsConfigArrayOutput)
}

// Backup provider
func (o GetDatabasesDatabaseBackupsOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackups) string { return v.Provider }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseBackupsConfig struct {
	// Backup configuration ID
	Id string `pulumi:"id"`
	// Node name
	NodeName string `pulumi:"nodeName"`
	// Backup repositories
	Repositories []GetDatabasesDatabaseBackupsConfigRepository `pulumi:"repositories"`
	// Backup schedules
	Schedules []GetDatabasesDatabaseBackupsConfigSchedule `pulumi:"schedules"`
}

// GetDatabasesDatabaseBackupsConfigInput is an input type that accepts GetDatabasesDatabaseBackupsConfigArgs and GetDatabasesDatabaseBackupsConfigOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseBackupsConfigInput` via:
//
//	GetDatabasesDatabaseBackupsConfigArgs{...}
type GetDatabasesDatabaseBackupsConfigInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseBackupsConfigOutput() GetDatabasesDatabaseBackupsConfigOutput
	ToGetDatabasesDatabaseBackupsConfigOutputWithContext(context.Context) GetDatabasesDatabaseBackupsConfigOutput
}

type GetDatabasesDatabaseBackupsConfigArgs struct {
	// Backup configuration ID
	Id pulumi.StringInput `pulumi:"id"`
	// Node name
	NodeName pulumi.StringInput `pulumi:"nodeName"`
	// Backup repositories
	Repositories GetDatabasesDatabaseBackupsConfigRepositoryArrayInput `pulumi:"repositories"`
	// Backup schedules
	Schedules GetDatabasesDatabaseBackupsConfigScheduleArrayInput `pulumi:"schedules"`
}

func (GetDatabasesDatabaseBackupsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseBackupsConfig)(nil)).Elem()
}

func (i GetDatabasesDatabaseBackupsConfigArgs) ToGetDatabasesDatabaseBackupsConfigOutput() GetDatabasesDatabaseBackupsConfigOutput {
	return i.ToGetDatabasesDatabaseBackupsConfigOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseBackupsConfigArgs) ToGetDatabasesDatabaseBackupsConfigOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseBackupsConfigOutput)
}

// GetDatabasesDatabaseBackupsConfigArrayInput is an input type that accepts GetDatabasesDatabaseBackupsConfigArray and GetDatabasesDatabaseBackupsConfigArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseBackupsConfigArrayInput` via:
//
//	GetDatabasesDatabaseBackupsConfigArray{ GetDatabasesDatabaseBackupsConfigArgs{...} }
type GetDatabasesDatabaseBackupsConfigArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseBackupsConfigArrayOutput() GetDatabasesDatabaseBackupsConfigArrayOutput
	ToGetDatabasesDatabaseBackupsConfigArrayOutputWithContext(context.Context) GetDatabasesDatabaseBackupsConfigArrayOutput
}

type GetDatabasesDatabaseBackupsConfigArray []GetDatabasesDatabaseBackupsConfigInput

func (GetDatabasesDatabaseBackupsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseBackupsConfig)(nil)).Elem()
}

func (i GetDatabasesDatabaseBackupsConfigArray) ToGetDatabasesDatabaseBackupsConfigArrayOutput() GetDatabasesDatabaseBackupsConfigArrayOutput {
	return i.ToGetDatabasesDatabaseBackupsConfigArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseBackupsConfigArray) ToGetDatabasesDatabaseBackupsConfigArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseBackupsConfigArrayOutput)
}

type GetDatabasesDatabaseBackupsConfigOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseBackupsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseBackupsConfig)(nil)).Elem()
}

func (o GetDatabasesDatabaseBackupsConfigOutput) ToGetDatabasesDatabaseBackupsConfigOutput() GetDatabasesDatabaseBackupsConfigOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigOutput) ToGetDatabasesDatabaseBackupsConfigOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigOutput {
	return o
}

// Backup configuration ID
func (o GetDatabasesDatabaseBackupsConfigOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfig) string { return v.Id }).(pulumi.StringOutput)
}

// Node name
func (o GetDatabasesDatabaseBackupsConfigOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfig) string { return v.NodeName }).(pulumi.StringOutput)
}

// Backup repositories
func (o GetDatabasesDatabaseBackupsConfigOutput) Repositories() GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfig) []GetDatabasesDatabaseBackupsConfigRepository {
		return v.Repositories
	}).(GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput)
}

// Backup schedules
func (o GetDatabasesDatabaseBackupsConfigOutput) Schedules() GetDatabasesDatabaseBackupsConfigScheduleArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfig) []GetDatabasesDatabaseBackupsConfigSchedule {
		return v.Schedules
	}).(GetDatabasesDatabaseBackupsConfigScheduleArrayOutput)
}

type GetDatabasesDatabaseBackupsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseBackupsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseBackupsConfig)(nil)).Elem()
}

func (o GetDatabasesDatabaseBackupsConfigArrayOutput) ToGetDatabasesDatabaseBackupsConfigArrayOutput() GetDatabasesDatabaseBackupsConfigArrayOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigArrayOutput) ToGetDatabasesDatabaseBackupsConfigArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigArrayOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseBackupsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseBackupsConfig {
		return vs[0].([]GetDatabasesDatabaseBackupsConfig)[vs[1].(int)]
	}).(GetDatabasesDatabaseBackupsConfigOutput)
}

type GetDatabasesDatabaseBackupsConfigRepository struct {
	AzureAccount   string `pulumi:"azureAccount"`
	AzureContainer string `pulumi:"azureContainer"`
	AzureEndpoint  string `pulumi:"azureEndpoint"`
	BackupStoreId  string `pulumi:"backupStoreId"`
	BasePath       string `pulumi:"basePath"`
	GcsBucket      string `pulumi:"gcsBucket"`
	GcsEndpoint    string `pulumi:"gcsEndpoint"`
	// Backup configuration ID
	Id                string `pulumi:"id"`
	RetentionFull     int    `pulumi:"retentionFull"`
	RetentionFullType string `pulumi:"retentionFullType"`
	S3Bucket          string `pulumi:"s3Bucket"`
	S3Endpoint        string `pulumi:"s3Endpoint"`
	S3Region          string `pulumi:"s3Region"`
	Type              string `pulumi:"type"`
}

// GetDatabasesDatabaseBackupsConfigRepositoryInput is an input type that accepts GetDatabasesDatabaseBackupsConfigRepositoryArgs and GetDatabasesDatabaseBackupsConfigRepositoryOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseBackupsConfigRepositoryInput` via:
//
//	GetDatabasesDatabaseBackupsConfigRepositoryArgs{...}
type GetDatabasesDatabaseBackupsConfigRepositoryInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseBackupsConfigRepositoryOutput() GetDatabasesDatabaseBackupsConfigRepositoryOutput
	ToGetDatabasesDatabaseBackupsConfigRepositoryOutputWithContext(context.Context) GetDatabasesDatabaseBackupsConfigRepositoryOutput
}

type GetDatabasesDatabaseBackupsConfigRepositoryArgs struct {
	AzureAccount   pulumi.StringInput `pulumi:"azureAccount"`
	AzureContainer pulumi.StringInput `pulumi:"azureContainer"`
	AzureEndpoint  pulumi.StringInput `pulumi:"azureEndpoint"`
	BackupStoreId  pulumi.StringInput `pulumi:"backupStoreId"`
	BasePath       pulumi.StringInput `pulumi:"basePath"`
	GcsBucket      pulumi.StringInput `pulumi:"gcsBucket"`
	GcsEndpoint    pulumi.StringInput `pulumi:"gcsEndpoint"`
	// Backup configuration ID
	Id                pulumi.StringInput `pulumi:"id"`
	RetentionFull     pulumi.IntInput    `pulumi:"retentionFull"`
	RetentionFullType pulumi.StringInput `pulumi:"retentionFullType"`
	S3Bucket          pulumi.StringInput `pulumi:"s3Bucket"`
	S3Endpoint        pulumi.StringInput `pulumi:"s3Endpoint"`
	S3Region          pulumi.StringInput `pulumi:"s3Region"`
	Type              pulumi.StringInput `pulumi:"type"`
}

func (GetDatabasesDatabaseBackupsConfigRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigRepository)(nil)).Elem()
}

func (i GetDatabasesDatabaseBackupsConfigRepositoryArgs) ToGetDatabasesDatabaseBackupsConfigRepositoryOutput() GetDatabasesDatabaseBackupsConfigRepositoryOutput {
	return i.ToGetDatabasesDatabaseBackupsConfigRepositoryOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseBackupsConfigRepositoryArgs) ToGetDatabasesDatabaseBackupsConfigRepositoryOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseBackupsConfigRepositoryOutput)
}

// GetDatabasesDatabaseBackupsConfigRepositoryArrayInput is an input type that accepts GetDatabasesDatabaseBackupsConfigRepositoryArray and GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseBackupsConfigRepositoryArrayInput` via:
//
//	GetDatabasesDatabaseBackupsConfigRepositoryArray{ GetDatabasesDatabaseBackupsConfigRepositoryArgs{...} }
type GetDatabasesDatabaseBackupsConfigRepositoryArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseBackupsConfigRepositoryArrayOutput() GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput
	ToGetDatabasesDatabaseBackupsConfigRepositoryArrayOutputWithContext(context.Context) GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput
}

type GetDatabasesDatabaseBackupsConfigRepositoryArray []GetDatabasesDatabaseBackupsConfigRepositoryInput

func (GetDatabasesDatabaseBackupsConfigRepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseBackupsConfigRepository)(nil)).Elem()
}

func (i GetDatabasesDatabaseBackupsConfigRepositoryArray) ToGetDatabasesDatabaseBackupsConfigRepositoryArrayOutput() GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput {
	return i.ToGetDatabasesDatabaseBackupsConfigRepositoryArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseBackupsConfigRepositoryArray) ToGetDatabasesDatabaseBackupsConfigRepositoryArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput)
}

type GetDatabasesDatabaseBackupsConfigRepositoryOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseBackupsConfigRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigRepository)(nil)).Elem()
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) ToGetDatabasesDatabaseBackupsConfigRepositoryOutput() GetDatabasesDatabaseBackupsConfigRepositoryOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) ToGetDatabasesDatabaseBackupsConfigRepositoryOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigRepositoryOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) AzureAccount() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.AzureAccount }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) AzureContainer() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.AzureContainer }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) AzureEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.AzureEndpoint }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) BackupStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.BackupStoreId }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) BasePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.BasePath }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) GcsBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.GcsBucket }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) GcsEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.GcsEndpoint }).(pulumi.StringOutput)
}

// Backup configuration ID
func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) RetentionFull() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) int { return v.RetentionFull }).(pulumi.IntOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) RetentionFullType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.RetentionFullType }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.S3Bucket }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) S3Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.S3Endpoint }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) S3Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.S3Region }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigRepository) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseBackupsConfigRepository)(nil)).Elem()
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput) ToGetDatabasesDatabaseBackupsConfigRepositoryArrayOutput() GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput) ToGetDatabasesDatabaseBackupsConfigRepositoryArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseBackupsConfigRepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseBackupsConfigRepository {
		return vs[0].([]GetDatabasesDatabaseBackupsConfigRepository)[vs[1].(int)]
	}).(GetDatabasesDatabaseBackupsConfigRepositoryOutput)
}

type GetDatabasesDatabaseBackupsConfigSchedule struct {
	CronExpression string `pulumi:"cronExpression"`
	// Backup configuration ID
	Id   string `pulumi:"id"`
	Type string `pulumi:"type"`
}

// GetDatabasesDatabaseBackupsConfigScheduleInput is an input type that accepts GetDatabasesDatabaseBackupsConfigScheduleArgs and GetDatabasesDatabaseBackupsConfigScheduleOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseBackupsConfigScheduleInput` via:
//
//	GetDatabasesDatabaseBackupsConfigScheduleArgs{...}
type GetDatabasesDatabaseBackupsConfigScheduleInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseBackupsConfigScheduleOutput() GetDatabasesDatabaseBackupsConfigScheduleOutput
	ToGetDatabasesDatabaseBackupsConfigScheduleOutputWithContext(context.Context) GetDatabasesDatabaseBackupsConfigScheduleOutput
}

type GetDatabasesDatabaseBackupsConfigScheduleArgs struct {
	CronExpression pulumi.StringInput `pulumi:"cronExpression"`
	// Backup configuration ID
	Id   pulumi.StringInput `pulumi:"id"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDatabasesDatabaseBackupsConfigScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigSchedule)(nil)).Elem()
}

func (i GetDatabasesDatabaseBackupsConfigScheduleArgs) ToGetDatabasesDatabaseBackupsConfigScheduleOutput() GetDatabasesDatabaseBackupsConfigScheduleOutput {
	return i.ToGetDatabasesDatabaseBackupsConfigScheduleOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseBackupsConfigScheduleArgs) ToGetDatabasesDatabaseBackupsConfigScheduleOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseBackupsConfigScheduleOutput)
}

// GetDatabasesDatabaseBackupsConfigScheduleArrayInput is an input type that accepts GetDatabasesDatabaseBackupsConfigScheduleArray and GetDatabasesDatabaseBackupsConfigScheduleArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseBackupsConfigScheduleArrayInput` via:
//
//	GetDatabasesDatabaseBackupsConfigScheduleArray{ GetDatabasesDatabaseBackupsConfigScheduleArgs{...} }
type GetDatabasesDatabaseBackupsConfigScheduleArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseBackupsConfigScheduleArrayOutput() GetDatabasesDatabaseBackupsConfigScheduleArrayOutput
	ToGetDatabasesDatabaseBackupsConfigScheduleArrayOutputWithContext(context.Context) GetDatabasesDatabaseBackupsConfigScheduleArrayOutput
}

type GetDatabasesDatabaseBackupsConfigScheduleArray []GetDatabasesDatabaseBackupsConfigScheduleInput

func (GetDatabasesDatabaseBackupsConfigScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseBackupsConfigSchedule)(nil)).Elem()
}

func (i GetDatabasesDatabaseBackupsConfigScheduleArray) ToGetDatabasesDatabaseBackupsConfigScheduleArrayOutput() GetDatabasesDatabaseBackupsConfigScheduleArrayOutput {
	return i.ToGetDatabasesDatabaseBackupsConfigScheduleArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseBackupsConfigScheduleArray) ToGetDatabasesDatabaseBackupsConfigScheduleArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseBackupsConfigScheduleArrayOutput)
}

type GetDatabasesDatabaseBackupsConfigScheduleOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseBackupsConfigScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigSchedule)(nil)).Elem()
}

func (o GetDatabasesDatabaseBackupsConfigScheduleOutput) ToGetDatabasesDatabaseBackupsConfigScheduleOutput() GetDatabasesDatabaseBackupsConfigScheduleOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigScheduleOutput) ToGetDatabasesDatabaseBackupsConfigScheduleOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigScheduleOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigScheduleOutput) CronExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigSchedule) string { return v.CronExpression }).(pulumi.StringOutput)
}

// Backup configuration ID
func (o GetDatabasesDatabaseBackupsConfigScheduleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigSchedule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseBackupsConfigScheduleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseBackupsConfigSchedule) string { return v.Type }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseBackupsConfigScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseBackupsConfigScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseBackupsConfigSchedule)(nil)).Elem()
}

func (o GetDatabasesDatabaseBackupsConfigScheduleArrayOutput) ToGetDatabasesDatabaseBackupsConfigScheduleArrayOutput() GetDatabasesDatabaseBackupsConfigScheduleArrayOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigScheduleArrayOutput) ToGetDatabasesDatabaseBackupsConfigScheduleArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseBackupsConfigScheduleArrayOutput {
	return o
}

func (o GetDatabasesDatabaseBackupsConfigScheduleArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseBackupsConfigScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseBackupsConfigSchedule {
		return vs[0].([]GetDatabasesDatabaseBackupsConfigSchedule)[vs[1].(int)]
	}).(GetDatabasesDatabaseBackupsConfigScheduleOutput)
}

type GetDatabasesDatabaseComponent struct {
	// Backup configuration ID
	Id string `pulumi:"id"`
	// Component name
	Name string `pulumi:"name"`
	// Component release date
	ReleaseDate string `pulumi:"releaseDate"`
	// Component status
	Status string `pulumi:"status"`
	// Component version
	Version string `pulumi:"version"`
}

// GetDatabasesDatabaseComponentInput is an input type that accepts GetDatabasesDatabaseComponentArgs and GetDatabasesDatabaseComponentOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseComponentInput` via:
//
//	GetDatabasesDatabaseComponentArgs{...}
type GetDatabasesDatabaseComponentInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseComponentOutput() GetDatabasesDatabaseComponentOutput
	ToGetDatabasesDatabaseComponentOutputWithContext(context.Context) GetDatabasesDatabaseComponentOutput
}

type GetDatabasesDatabaseComponentArgs struct {
	// Backup configuration ID
	Id pulumi.StringInput `pulumi:"id"`
	// Component name
	Name pulumi.StringInput `pulumi:"name"`
	// Component release date
	ReleaseDate pulumi.StringInput `pulumi:"releaseDate"`
	// Component status
	Status pulumi.StringInput `pulumi:"status"`
	// Component version
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetDatabasesDatabaseComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseComponent)(nil)).Elem()
}

func (i GetDatabasesDatabaseComponentArgs) ToGetDatabasesDatabaseComponentOutput() GetDatabasesDatabaseComponentOutput {
	return i.ToGetDatabasesDatabaseComponentOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseComponentArgs) ToGetDatabasesDatabaseComponentOutputWithContext(ctx context.Context) GetDatabasesDatabaseComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseComponentOutput)
}

// GetDatabasesDatabaseComponentArrayInput is an input type that accepts GetDatabasesDatabaseComponentArray and GetDatabasesDatabaseComponentArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseComponentArrayInput` via:
//
//	GetDatabasesDatabaseComponentArray{ GetDatabasesDatabaseComponentArgs{...} }
type GetDatabasesDatabaseComponentArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseComponentArrayOutput() GetDatabasesDatabaseComponentArrayOutput
	ToGetDatabasesDatabaseComponentArrayOutputWithContext(context.Context) GetDatabasesDatabaseComponentArrayOutput
}

type GetDatabasesDatabaseComponentArray []GetDatabasesDatabaseComponentInput

func (GetDatabasesDatabaseComponentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseComponent)(nil)).Elem()
}

func (i GetDatabasesDatabaseComponentArray) ToGetDatabasesDatabaseComponentArrayOutput() GetDatabasesDatabaseComponentArrayOutput {
	return i.ToGetDatabasesDatabaseComponentArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseComponentArray) ToGetDatabasesDatabaseComponentArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseComponentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseComponentArrayOutput)
}

type GetDatabasesDatabaseComponentOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseComponent)(nil)).Elem()
}

func (o GetDatabasesDatabaseComponentOutput) ToGetDatabasesDatabaseComponentOutput() GetDatabasesDatabaseComponentOutput {
	return o
}

func (o GetDatabasesDatabaseComponentOutput) ToGetDatabasesDatabaseComponentOutputWithContext(ctx context.Context) GetDatabasesDatabaseComponentOutput {
	return o
}

// Backup configuration ID
func (o GetDatabasesDatabaseComponentOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.Id }).(pulumi.StringOutput)
}

// Component name
func (o GetDatabasesDatabaseComponentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.Name }).(pulumi.StringOutput)
}

// Component release date
func (o GetDatabasesDatabaseComponentOutput) ReleaseDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.ReleaseDate }).(pulumi.StringOutput)
}

// Component status
func (o GetDatabasesDatabaseComponentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.Status }).(pulumi.StringOutput)
}

// Component version
func (o GetDatabasesDatabaseComponentOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseComponent) string { return v.Version }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseComponentArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseComponentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseComponent)(nil)).Elem()
}

func (o GetDatabasesDatabaseComponentArrayOutput) ToGetDatabasesDatabaseComponentArrayOutput() GetDatabasesDatabaseComponentArrayOutput {
	return o
}

func (o GetDatabasesDatabaseComponentArrayOutput) ToGetDatabasesDatabaseComponentArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseComponentArrayOutput {
	return o
}

func (o GetDatabasesDatabaseComponentArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseComponentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseComponent {
		return vs[0].([]GetDatabasesDatabaseComponent)[vs[1].(int)]
	}).(GetDatabasesDatabaseComponentOutput)
}

type GetDatabasesDatabaseExtensions struct {
	// Auto-manage extensions
	AutoManage bool `pulumi:"autoManage"`
	// Available extensions
	Availables []string `pulumi:"availables"`
	// Requested extensions
	Requesteds []string `pulumi:"requesteds"`
}

// GetDatabasesDatabaseExtensionsInput is an input type that accepts GetDatabasesDatabaseExtensionsArgs and GetDatabasesDatabaseExtensionsOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseExtensionsInput` via:
//
//	GetDatabasesDatabaseExtensionsArgs{...}
type GetDatabasesDatabaseExtensionsInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseExtensionsOutput() GetDatabasesDatabaseExtensionsOutput
	ToGetDatabasesDatabaseExtensionsOutputWithContext(context.Context) GetDatabasesDatabaseExtensionsOutput
}

type GetDatabasesDatabaseExtensionsArgs struct {
	// Auto-manage extensions
	AutoManage pulumi.BoolInput `pulumi:"autoManage"`
	// Available extensions
	Availables pulumi.StringArrayInput `pulumi:"availables"`
	// Requested extensions
	Requesteds pulumi.StringArrayInput `pulumi:"requesteds"`
}

func (GetDatabasesDatabaseExtensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseExtensions)(nil)).Elem()
}

func (i GetDatabasesDatabaseExtensionsArgs) ToGetDatabasesDatabaseExtensionsOutput() GetDatabasesDatabaseExtensionsOutput {
	return i.ToGetDatabasesDatabaseExtensionsOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseExtensionsArgs) ToGetDatabasesDatabaseExtensionsOutputWithContext(ctx context.Context) GetDatabasesDatabaseExtensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseExtensionsOutput)
}

type GetDatabasesDatabaseExtensionsOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseExtensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseExtensions)(nil)).Elem()
}

func (o GetDatabasesDatabaseExtensionsOutput) ToGetDatabasesDatabaseExtensionsOutput() GetDatabasesDatabaseExtensionsOutput {
	return o
}

func (o GetDatabasesDatabaseExtensionsOutput) ToGetDatabasesDatabaseExtensionsOutputWithContext(ctx context.Context) GetDatabasesDatabaseExtensionsOutput {
	return o
}

// Auto-manage extensions
func (o GetDatabasesDatabaseExtensionsOutput) AutoManage() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseExtensions) bool { return v.AutoManage }).(pulumi.BoolOutput)
}

// Available extensions
func (o GetDatabasesDatabaseExtensionsOutput) Availables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseExtensions) []string { return v.Availables }).(pulumi.StringArrayOutput)
}

// Requested extensions
func (o GetDatabasesDatabaseExtensionsOutput) Requesteds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseExtensions) []string { return v.Requesteds }).(pulumi.StringArrayOutput)
}

type GetDatabasesDatabaseNode struct {
	// Node connection details
	Connection GetDatabasesDatabaseNodeConnection `pulumi:"connection"`
	// Extensions configuration for the database
	Extensions GetDatabasesDatabaseNodeExtensions `pulumi:"extensions"`
	// Node location
	Location GetDatabasesDatabaseNodeLocation `pulumi:"location"`
	// Component name
	Name string `pulumi:"name"`
	// Node region
	Region GetDatabasesDatabaseNodeRegion `pulumi:"region"`
}

// GetDatabasesDatabaseNodeInput is an input type that accepts GetDatabasesDatabaseNodeArgs and GetDatabasesDatabaseNodeOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeInput` via:
//
//	GetDatabasesDatabaseNodeArgs{...}
type GetDatabasesDatabaseNodeInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput
	ToGetDatabasesDatabaseNodeOutputWithContext(context.Context) GetDatabasesDatabaseNodeOutput
}

type GetDatabasesDatabaseNodeArgs struct {
	// Node connection details
	Connection GetDatabasesDatabaseNodeConnectionInput `pulumi:"connection"`
	// Extensions configuration for the database
	Extensions GetDatabasesDatabaseNodeExtensionsInput `pulumi:"extensions"`
	// Node location
	Location GetDatabasesDatabaseNodeLocationInput `pulumi:"location"`
	// Component name
	Name pulumi.StringInput `pulumi:"name"`
	// Node region
	Region GetDatabasesDatabaseNodeRegionInput `pulumi:"region"`
}

func (GetDatabasesDatabaseNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNode)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeArgs) ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput {
	return i.ToGetDatabasesDatabaseNodeOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeArgs) ToGetDatabasesDatabaseNodeOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeOutput)
}

// GetDatabasesDatabaseNodeArrayInput is an input type that accepts GetDatabasesDatabaseNodeArray and GetDatabasesDatabaseNodeArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeArrayInput` via:
//
//	GetDatabasesDatabaseNodeArray{ GetDatabasesDatabaseNodeArgs{...} }
type GetDatabasesDatabaseNodeArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput
	ToGetDatabasesDatabaseNodeArrayOutputWithContext(context.Context) GetDatabasesDatabaseNodeArrayOutput
}

type GetDatabasesDatabaseNodeArray []GetDatabasesDatabaseNodeInput

func (GetDatabasesDatabaseNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseNode)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeArray) ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput {
	return i.ToGetDatabasesDatabaseNodeArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeArray) ToGetDatabasesDatabaseNodeArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeArrayOutput)
}

type GetDatabasesDatabaseNodeOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNode)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeOutput) ToGetDatabasesDatabaseNodeOutput() GetDatabasesDatabaseNodeOutput {
	return o
}

func (o GetDatabasesDatabaseNodeOutput) ToGetDatabasesDatabaseNodeOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeOutput {
	return o
}

// Node connection details
func (o GetDatabasesDatabaseNodeOutput) Connection() GetDatabasesDatabaseNodeConnectionOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeConnection { return v.Connection }).(GetDatabasesDatabaseNodeConnectionOutput)
}

// Extensions configuration for the database
func (o GetDatabasesDatabaseNodeOutput) Extensions() GetDatabasesDatabaseNodeExtensionsOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeExtensions { return v.Extensions }).(GetDatabasesDatabaseNodeExtensionsOutput)
}

// Node location
func (o GetDatabasesDatabaseNodeOutput) Location() GetDatabasesDatabaseNodeLocationOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeLocation { return v.Location }).(GetDatabasesDatabaseNodeLocationOutput)
}

// Component name
func (o GetDatabasesDatabaseNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) string { return v.Name }).(pulumi.StringOutput)
}

// Node region
func (o GetDatabasesDatabaseNodeOutput) Region() GetDatabasesDatabaseNodeRegionOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNode) GetDatabasesDatabaseNodeRegion { return v.Region }).(GetDatabasesDatabaseNodeRegionOutput)
}

type GetDatabasesDatabaseNodeArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseNode)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeArrayOutput) ToGetDatabasesDatabaseNodeArrayOutput() GetDatabasesDatabaseNodeArrayOutput {
	return o
}

func (o GetDatabasesDatabaseNodeArrayOutput) ToGetDatabasesDatabaseNodeArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeArrayOutput {
	return o
}

func (o GetDatabasesDatabaseNodeArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseNode {
		return vs[0].([]GetDatabasesDatabaseNode)[vs[1].(int)]
	}).(GetDatabasesDatabaseNodeOutput)
}

type GetDatabasesDatabaseNodeConnection struct {
	Database          string `pulumi:"database"`
	ExternalIpAddress string `pulumi:"externalIpAddress"`
	Host              string `pulumi:"host"`
	InternalHost      string `pulumi:"internalHost"`
	InternalIpAddress string `pulumi:"internalIpAddress"`
	Password          string `pulumi:"password"`
	Port              int    `pulumi:"port"`
	Username          string `pulumi:"username"`
}

// GetDatabasesDatabaseNodeConnectionInput is an input type that accepts GetDatabasesDatabaseNodeConnectionArgs and GetDatabasesDatabaseNodeConnectionOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeConnectionInput` via:
//
//	GetDatabasesDatabaseNodeConnectionArgs{...}
type GetDatabasesDatabaseNodeConnectionInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput
	ToGetDatabasesDatabaseNodeConnectionOutputWithContext(context.Context) GetDatabasesDatabaseNodeConnectionOutput
}

type GetDatabasesDatabaseNodeConnectionArgs struct {
	Database          pulumi.StringInput `pulumi:"database"`
	ExternalIpAddress pulumi.StringInput `pulumi:"externalIpAddress"`
	Host              pulumi.StringInput `pulumi:"host"`
	InternalHost      pulumi.StringInput `pulumi:"internalHost"`
	InternalIpAddress pulumi.StringInput `pulumi:"internalIpAddress"`
	Password          pulumi.StringInput `pulumi:"password"`
	Port              pulumi.IntInput    `pulumi:"port"`
	Username          pulumi.StringInput `pulumi:"username"`
}

func (GetDatabasesDatabaseNodeConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeConnection)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeConnectionArgs) ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput {
	return i.ToGetDatabasesDatabaseNodeConnectionOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeConnectionArgs) ToGetDatabasesDatabaseNodeConnectionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeConnectionOutput)
}

type GetDatabasesDatabaseNodeConnectionOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeConnection)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeConnectionOutput) ToGetDatabasesDatabaseNodeConnectionOutput() GetDatabasesDatabaseNodeConnectionOutput {
	return o
}

func (o GetDatabasesDatabaseNodeConnectionOutput) ToGetDatabasesDatabaseNodeConnectionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeConnectionOutput {
	return o
}

func (o GetDatabasesDatabaseNodeConnectionOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Database }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeConnectionOutput) ExternalIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.ExternalIpAddress }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeConnectionOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeConnectionOutput) InternalHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.InternalHost }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeConnectionOutput) InternalIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.InternalIpAddress }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeConnectionOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeConnectionOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetDatabasesDatabaseNodeConnectionOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeConnection) string { return v.Username }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseNodeExtensions struct {
	Errors     map[string]string `pulumi:"errors"`
	Installeds []string          `pulumi:"installeds"`
}

// GetDatabasesDatabaseNodeExtensionsInput is an input type that accepts GetDatabasesDatabaseNodeExtensionsArgs and GetDatabasesDatabaseNodeExtensionsOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeExtensionsInput` via:
//
//	GetDatabasesDatabaseNodeExtensionsArgs{...}
type GetDatabasesDatabaseNodeExtensionsInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeExtensionsOutput() GetDatabasesDatabaseNodeExtensionsOutput
	ToGetDatabasesDatabaseNodeExtensionsOutputWithContext(context.Context) GetDatabasesDatabaseNodeExtensionsOutput
}

type GetDatabasesDatabaseNodeExtensionsArgs struct {
	Errors     pulumi.StringMapInput   `pulumi:"errors"`
	Installeds pulumi.StringArrayInput `pulumi:"installeds"`
}

func (GetDatabasesDatabaseNodeExtensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeExtensions)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeExtensionsArgs) ToGetDatabasesDatabaseNodeExtensionsOutput() GetDatabasesDatabaseNodeExtensionsOutput {
	return i.ToGetDatabasesDatabaseNodeExtensionsOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeExtensionsArgs) ToGetDatabasesDatabaseNodeExtensionsOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeExtensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeExtensionsOutput)
}

type GetDatabasesDatabaseNodeExtensionsOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeExtensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeExtensions)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeExtensionsOutput) ToGetDatabasesDatabaseNodeExtensionsOutput() GetDatabasesDatabaseNodeExtensionsOutput {
	return o
}

func (o GetDatabasesDatabaseNodeExtensionsOutput) ToGetDatabasesDatabaseNodeExtensionsOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeExtensionsOutput {
	return o
}

func (o GetDatabasesDatabaseNodeExtensionsOutput) Errors() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeExtensions) map[string]string { return v.Errors }).(pulumi.StringMapOutput)
}

func (o GetDatabasesDatabaseNodeExtensionsOutput) Installeds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeExtensions) []string { return v.Installeds }).(pulumi.StringArrayOutput)
}

type GetDatabasesDatabaseNodeLocation struct {
	City      string  `pulumi:"city"`
	Code      string  `pulumi:"code"`
	Country   string  `pulumi:"country"`
	Latitude  float64 `pulumi:"latitude"`
	Longitude float64 `pulumi:"longitude"`
	MetroCode string  `pulumi:"metroCode"`
	// Component name
	Name       string `pulumi:"name"`
	PostalCode string `pulumi:"postalCode"`
	Region     string `pulumi:"region"`
	RegionCode string `pulumi:"regionCode"`
	Timezone   string `pulumi:"timezone"`
}

// GetDatabasesDatabaseNodeLocationInput is an input type that accepts GetDatabasesDatabaseNodeLocationArgs and GetDatabasesDatabaseNodeLocationOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeLocationInput` via:
//
//	GetDatabasesDatabaseNodeLocationArgs{...}
type GetDatabasesDatabaseNodeLocationInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput
	ToGetDatabasesDatabaseNodeLocationOutputWithContext(context.Context) GetDatabasesDatabaseNodeLocationOutput
}

type GetDatabasesDatabaseNodeLocationArgs struct {
	City      pulumi.StringInput  `pulumi:"city"`
	Code      pulumi.StringInput  `pulumi:"code"`
	Country   pulumi.StringInput  `pulumi:"country"`
	Latitude  pulumi.Float64Input `pulumi:"latitude"`
	Longitude pulumi.Float64Input `pulumi:"longitude"`
	MetroCode pulumi.StringInput  `pulumi:"metroCode"`
	// Component name
	Name       pulumi.StringInput `pulumi:"name"`
	PostalCode pulumi.StringInput `pulumi:"postalCode"`
	Region     pulumi.StringInput `pulumi:"region"`
	RegionCode pulumi.StringInput `pulumi:"regionCode"`
	Timezone   pulumi.StringInput `pulumi:"timezone"`
}

func (GetDatabasesDatabaseNodeLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeLocation)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeLocationArgs) ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput {
	return i.ToGetDatabasesDatabaseNodeLocationOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeLocationArgs) ToGetDatabasesDatabaseNodeLocationOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeLocationOutput)
}

type GetDatabasesDatabaseNodeLocationOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeLocation)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeLocationOutput) ToGetDatabasesDatabaseNodeLocationOutput() GetDatabasesDatabaseNodeLocationOutput {
	return o
}

func (o GetDatabasesDatabaseNodeLocationOutput) ToGetDatabasesDatabaseNodeLocationOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeLocationOutput {
	return o
}

func (o GetDatabasesDatabaseNodeLocationOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.City }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeLocationOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeLocationOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Country }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeLocationOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) float64 { return v.Latitude }).(pulumi.Float64Output)
}

func (o GetDatabasesDatabaseNodeLocationOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) float64 { return v.Longitude }).(pulumi.Float64Output)
}

func (o GetDatabasesDatabaseNodeLocationOutput) MetroCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.MetroCode }).(pulumi.StringOutput)
}

// Component name
func (o GetDatabasesDatabaseNodeLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeLocationOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.PostalCode }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeLocationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeLocationOutput) RegionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.RegionCode }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeLocationOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeLocation) string { return v.Timezone }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseNodeRegion struct {
	Active            bool     `pulumi:"active"`
	AvailabilityZones []string `pulumi:"availabilityZones"`
	Cloud             string   `pulumi:"cloud"`
	Code              string   `pulumi:"code"`
	// Component name
	Name   string `pulumi:"name"`
	Parent string `pulumi:"parent"`
}

// GetDatabasesDatabaseNodeRegionInput is an input type that accepts GetDatabasesDatabaseNodeRegionArgs and GetDatabasesDatabaseNodeRegionOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseNodeRegionInput` via:
//
//	GetDatabasesDatabaseNodeRegionArgs{...}
type GetDatabasesDatabaseNodeRegionInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseNodeRegionOutput() GetDatabasesDatabaseNodeRegionOutput
	ToGetDatabasesDatabaseNodeRegionOutputWithContext(context.Context) GetDatabasesDatabaseNodeRegionOutput
}

type GetDatabasesDatabaseNodeRegionArgs struct {
	Active            pulumi.BoolInput        `pulumi:"active"`
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	Cloud             pulumi.StringInput      `pulumi:"cloud"`
	Code              pulumi.StringInput      `pulumi:"code"`
	// Component name
	Name   pulumi.StringInput `pulumi:"name"`
	Parent pulumi.StringInput `pulumi:"parent"`
}

func (GetDatabasesDatabaseNodeRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeRegion)(nil)).Elem()
}

func (i GetDatabasesDatabaseNodeRegionArgs) ToGetDatabasesDatabaseNodeRegionOutput() GetDatabasesDatabaseNodeRegionOutput {
	return i.ToGetDatabasesDatabaseNodeRegionOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseNodeRegionArgs) ToGetDatabasesDatabaseNodeRegionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseNodeRegionOutput)
}

type GetDatabasesDatabaseNodeRegionOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseNodeRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseNodeRegion)(nil)).Elem()
}

func (o GetDatabasesDatabaseNodeRegionOutput) ToGetDatabasesDatabaseNodeRegionOutput() GetDatabasesDatabaseNodeRegionOutput {
	return o
}

func (o GetDatabasesDatabaseNodeRegionOutput) ToGetDatabasesDatabaseNodeRegionOutputWithContext(ctx context.Context) GetDatabasesDatabaseNodeRegionOutput {
	return o
}

func (o GetDatabasesDatabaseNodeRegionOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) bool { return v.Active }).(pulumi.BoolOutput)
}

func (o GetDatabasesDatabaseNodeRegionOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetDatabasesDatabaseNodeRegionOutput) Cloud() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) string { return v.Cloud }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeRegionOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) string { return v.Code }).(pulumi.StringOutput)
}

// Component name
func (o GetDatabasesDatabaseNodeRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseNodeRegionOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseNodeRegion) string { return v.Parent }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseRole struct {
	BypassRls       bool `pulumi:"bypassRls"`
	ConnectionLimit int  `pulumi:"connectionLimit"`
	CreateDb        bool `pulumi:"createDb"`
	CreateRole      bool `pulumi:"createRole"`
	Inherit         bool `pulumi:"inherit"`
	Login           bool `pulumi:"login"`
	// Component name
	Name        string `pulumi:"name"`
	Replication bool   `pulumi:"replication"`
	Superuser   bool   `pulumi:"superuser"`
}

// GetDatabasesDatabaseRoleInput is an input type that accepts GetDatabasesDatabaseRoleArgs and GetDatabasesDatabaseRoleOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseRoleInput` via:
//
//	GetDatabasesDatabaseRoleArgs{...}
type GetDatabasesDatabaseRoleInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseRoleOutput() GetDatabasesDatabaseRoleOutput
	ToGetDatabasesDatabaseRoleOutputWithContext(context.Context) GetDatabasesDatabaseRoleOutput
}

type GetDatabasesDatabaseRoleArgs struct {
	BypassRls       pulumi.BoolInput `pulumi:"bypassRls"`
	ConnectionLimit pulumi.IntInput  `pulumi:"connectionLimit"`
	CreateDb        pulumi.BoolInput `pulumi:"createDb"`
	CreateRole      pulumi.BoolInput `pulumi:"createRole"`
	Inherit         pulumi.BoolInput `pulumi:"inherit"`
	Login           pulumi.BoolInput `pulumi:"login"`
	// Component name
	Name        pulumi.StringInput `pulumi:"name"`
	Replication pulumi.BoolInput   `pulumi:"replication"`
	Superuser   pulumi.BoolInput   `pulumi:"superuser"`
}

func (GetDatabasesDatabaseRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseRole)(nil)).Elem()
}

func (i GetDatabasesDatabaseRoleArgs) ToGetDatabasesDatabaseRoleOutput() GetDatabasesDatabaseRoleOutput {
	return i.ToGetDatabasesDatabaseRoleOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseRoleArgs) ToGetDatabasesDatabaseRoleOutputWithContext(ctx context.Context) GetDatabasesDatabaseRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseRoleOutput)
}

// GetDatabasesDatabaseRoleArrayInput is an input type that accepts GetDatabasesDatabaseRoleArray and GetDatabasesDatabaseRoleArrayOutput values.
// You can construct a concrete instance of `GetDatabasesDatabaseRoleArrayInput` via:
//
//	GetDatabasesDatabaseRoleArray{ GetDatabasesDatabaseRoleArgs{...} }
type GetDatabasesDatabaseRoleArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseRoleArrayOutput() GetDatabasesDatabaseRoleArrayOutput
	ToGetDatabasesDatabaseRoleArrayOutputWithContext(context.Context) GetDatabasesDatabaseRoleArrayOutput
}

type GetDatabasesDatabaseRoleArray []GetDatabasesDatabaseRoleInput

func (GetDatabasesDatabaseRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseRole)(nil)).Elem()
}

func (i GetDatabasesDatabaseRoleArray) ToGetDatabasesDatabaseRoleArrayOutput() GetDatabasesDatabaseRoleArrayOutput {
	return i.ToGetDatabasesDatabaseRoleArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseRoleArray) ToGetDatabasesDatabaseRoleArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseRoleArrayOutput)
}

type GetDatabasesDatabaseRoleOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseRole)(nil)).Elem()
}

func (o GetDatabasesDatabaseRoleOutput) ToGetDatabasesDatabaseRoleOutput() GetDatabasesDatabaseRoleOutput {
	return o
}

func (o GetDatabasesDatabaseRoleOutput) ToGetDatabasesDatabaseRoleOutputWithContext(ctx context.Context) GetDatabasesDatabaseRoleOutput {
	return o
}

func (o GetDatabasesDatabaseRoleOutput) BypassRls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.BypassRls }).(pulumi.BoolOutput)
}

func (o GetDatabasesDatabaseRoleOutput) ConnectionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) int { return v.ConnectionLimit }).(pulumi.IntOutput)
}

func (o GetDatabasesDatabaseRoleOutput) CreateDb() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.CreateDb }).(pulumi.BoolOutput)
}

func (o GetDatabasesDatabaseRoleOutput) CreateRole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.CreateRole }).(pulumi.BoolOutput)
}

func (o GetDatabasesDatabaseRoleOutput) Inherit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.Inherit }).(pulumi.BoolOutput)
}

func (o GetDatabasesDatabaseRoleOutput) Login() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.Login }).(pulumi.BoolOutput)
}

// Component name
func (o GetDatabasesDatabaseRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabasesDatabaseRoleOutput) Replication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.Replication }).(pulumi.BoolOutput)
}

func (o GetDatabasesDatabaseRoleOutput) Superuser() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseRole) bool { return v.Superuser }).(pulumi.BoolOutput)
}

type GetDatabasesDatabaseRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseRole)(nil)).Elem()
}

func (o GetDatabasesDatabaseRoleArrayOutput) ToGetDatabasesDatabaseRoleArrayOutput() GetDatabasesDatabaseRoleArrayOutput {
	return o
}

func (o GetDatabasesDatabaseRoleArrayOutput) ToGetDatabasesDatabaseRoleArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseRoleArrayOutput {
	return o
}

func (o GetDatabasesDatabaseRoleArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseRole {
		return vs[0].([]GetDatabasesDatabaseRole)[vs[1].(int)]
	}).(GetDatabasesDatabaseRoleOutput)
}

type GetSSHKeysSshKey struct {
	// Creation time of the SSH key
	CreatedAt string `pulumi:"createdAt"`
	// ID of the SSH key
	Id string `pulumi:"id"`
	// Name of the SSH key
	Name string `pulumi:"name"`
	// Public key
	PublicKey string `pulumi:"publicKey"`
}

// GetSSHKeysSshKeyInput is an input type that accepts GetSSHKeysSshKeyArgs and GetSSHKeysSshKeyOutput values.
// You can construct a concrete instance of `GetSSHKeysSshKeyInput` via:
//
//	GetSSHKeysSshKeyArgs{...}
type GetSSHKeysSshKeyInput interface {
	pulumi.Input

	ToGetSSHKeysSshKeyOutput() GetSSHKeysSshKeyOutput
	ToGetSSHKeysSshKeyOutputWithContext(context.Context) GetSSHKeysSshKeyOutput
}

type GetSSHKeysSshKeyArgs struct {
	// Creation time of the SSH key
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// ID of the SSH key
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the SSH key
	Name pulumi.StringInput `pulumi:"name"`
	// Public key
	PublicKey pulumi.StringInput `pulumi:"publicKey"`
}

func (GetSSHKeysSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSSHKeysSshKey)(nil)).Elem()
}

func (i GetSSHKeysSshKeyArgs) ToGetSSHKeysSshKeyOutput() GetSSHKeysSshKeyOutput {
	return i.ToGetSSHKeysSshKeyOutputWithContext(context.Background())
}

func (i GetSSHKeysSshKeyArgs) ToGetSSHKeysSshKeyOutputWithContext(ctx context.Context) GetSSHKeysSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSSHKeysSshKeyOutput)
}

// GetSSHKeysSshKeyArrayInput is an input type that accepts GetSSHKeysSshKeyArray and GetSSHKeysSshKeyArrayOutput values.
// You can construct a concrete instance of `GetSSHKeysSshKeyArrayInput` via:
//
//	GetSSHKeysSshKeyArray{ GetSSHKeysSshKeyArgs{...} }
type GetSSHKeysSshKeyArrayInput interface {
	pulumi.Input

	ToGetSSHKeysSshKeyArrayOutput() GetSSHKeysSshKeyArrayOutput
	ToGetSSHKeysSshKeyArrayOutputWithContext(context.Context) GetSSHKeysSshKeyArrayOutput
}

type GetSSHKeysSshKeyArray []GetSSHKeysSshKeyInput

func (GetSSHKeysSshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSSHKeysSshKey)(nil)).Elem()
}

func (i GetSSHKeysSshKeyArray) ToGetSSHKeysSshKeyArrayOutput() GetSSHKeysSshKeyArrayOutput {
	return i.ToGetSSHKeysSshKeyArrayOutputWithContext(context.Background())
}

func (i GetSSHKeysSshKeyArray) ToGetSSHKeysSshKeyArrayOutputWithContext(ctx context.Context) GetSSHKeysSshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSSHKeysSshKeyArrayOutput)
}

type GetSSHKeysSshKeyOutput struct{ *pulumi.OutputState }

func (GetSSHKeysSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSSHKeysSshKey)(nil)).Elem()
}

func (o GetSSHKeysSshKeyOutput) ToGetSSHKeysSshKeyOutput() GetSSHKeysSshKeyOutput {
	return o
}

func (o GetSSHKeysSshKeyOutput) ToGetSSHKeysSshKeyOutputWithContext(ctx context.Context) GetSSHKeysSshKeyOutput {
	return o
}

// Creation time of the SSH key
func (o GetSSHKeysSshKeyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSSHKeysSshKey) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// ID of the SSH key
func (o GetSSHKeysSshKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSSHKeysSshKey) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the SSH key
func (o GetSSHKeysSshKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSSHKeysSshKey) string { return v.Name }).(pulumi.StringOutput)
}

// Public key
func (o GetSSHKeysSshKeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSSHKeysSshKey) string { return v.PublicKey }).(pulumi.StringOutput)
}

type GetSSHKeysSshKeyArrayOutput struct{ *pulumi.OutputState }

func (GetSSHKeysSshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSSHKeysSshKey)(nil)).Elem()
}

func (o GetSSHKeysSshKeyArrayOutput) ToGetSSHKeysSshKeyArrayOutput() GetSSHKeysSshKeyArrayOutput {
	return o
}

func (o GetSSHKeysSshKeyArrayOutput) ToGetSSHKeysSshKeyArrayOutputWithContext(ctx context.Context) GetSSHKeysSshKeyArrayOutput {
	return o
}

func (o GetSSHKeysSshKeyArrayOutput) Index(i pulumi.IntInput) GetSSHKeysSshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSSHKeysSshKey {
		return vs[0].([]GetSSHKeysSshKey)[vs[1].(int)]
	}).(GetSSHKeysSshKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFirewallRuleInput)(nil)).Elem(), ClusterFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterFirewallRuleArrayInput)(nil)).Elem(), ClusterFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkInput)(nil)).Elem(), ClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNetworkArrayInput)(nil)).Elem(), ClusterNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeInput)(nil)).Elem(), ClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterNodeArrayInput)(nil)).Elem(), ClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseBackupsInput)(nil)).Elem(), DatabaseBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseBackupsPtrInput)(nil)).Elem(), DatabaseBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseBackupsConfigInput)(nil)).Elem(), DatabaseBackupsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseBackupsConfigArrayInput)(nil)).Elem(), DatabaseBackupsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseBackupsConfigRepositoryInput)(nil)).Elem(), DatabaseBackupsConfigRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseBackupsConfigRepositoryArrayInput)(nil)).Elem(), DatabaseBackupsConfigRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseBackupsConfigScheduleInput)(nil)).Elem(), DatabaseBackupsConfigScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseBackupsConfigScheduleArrayInput)(nil)).Elem(), DatabaseBackupsConfigScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseComponentInput)(nil)).Elem(), DatabaseComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseComponentArrayInput)(nil)).Elem(), DatabaseComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseExtensionsInput)(nil)).Elem(), DatabaseExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseExtensionsPtrInput)(nil)).Elem(), DatabaseExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeInput)(nil)).Elem(), DatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeArrayInput)(nil)).Elem(), DatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeConnectionInput)(nil)).Elem(), DatabaseNodeConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeConnectionPtrInput)(nil)).Elem(), DatabaseNodeConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeExtensionsInput)(nil)).Elem(), DatabaseNodeExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeExtensionsPtrInput)(nil)).Elem(), DatabaseNodeExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeLocationInput)(nil)).Elem(), DatabaseNodeLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeLocationPtrInput)(nil)).Elem(), DatabaseNodeLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeRegionInput)(nil)).Elem(), DatabaseNodeRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseNodeRegionPtrInput)(nil)).Elem(), DatabaseNodeRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseRoleInput)(nil)).Elem(), DatabaseRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseRoleArrayInput)(nil)).Elem(), DatabaseRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupStoresBackupStoreInput)(nil)).Elem(), GetBackupStoresBackupStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBackupStoresBackupStoreArrayInput)(nil)).Elem(), GetBackupStoresBackupStoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudAccountsCloudAccountInput)(nil)).Elem(), GetCloudAccountsCloudAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudAccountsCloudAccountArrayInput)(nil)).Elem(), GetCloudAccountsCloudAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterInput)(nil)).Elem(), GetClustersClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterArrayInput)(nil)).Elem(), GetClustersClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterFirewallRuleInput)(nil)).Elem(), GetClustersClusterFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterFirewallRuleArrayInput)(nil)).Elem(), GetClustersClusterFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNetworkInput)(nil)).Elem(), GetClustersClusterNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNetworkArrayInput)(nil)).Elem(), GetClustersClusterNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeInput)(nil)).Elem(), GetClustersClusterNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersClusterNodeArrayInput)(nil)).Elem(), GetClustersClusterNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseInput)(nil)).Elem(), GetDatabasesDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseArrayInput)(nil)).Elem(), GetDatabasesDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseBackupsInput)(nil)).Elem(), GetDatabasesDatabaseBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigInput)(nil)).Elem(), GetDatabasesDatabaseBackupsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigArrayInput)(nil)).Elem(), GetDatabasesDatabaseBackupsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigRepositoryInput)(nil)).Elem(), GetDatabasesDatabaseBackupsConfigRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigRepositoryArrayInput)(nil)).Elem(), GetDatabasesDatabaseBackupsConfigRepositoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigScheduleInput)(nil)).Elem(), GetDatabasesDatabaseBackupsConfigScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseBackupsConfigScheduleArrayInput)(nil)).Elem(), GetDatabasesDatabaseBackupsConfigScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseComponentInput)(nil)).Elem(), GetDatabasesDatabaseComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseComponentArrayInput)(nil)).Elem(), GetDatabasesDatabaseComponentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseExtensionsInput)(nil)).Elem(), GetDatabasesDatabaseExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeInput)(nil)).Elem(), GetDatabasesDatabaseNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeArrayInput)(nil)).Elem(), GetDatabasesDatabaseNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeConnectionInput)(nil)).Elem(), GetDatabasesDatabaseNodeConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeExtensionsInput)(nil)).Elem(), GetDatabasesDatabaseNodeExtensionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeLocationInput)(nil)).Elem(), GetDatabasesDatabaseNodeLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseNodeRegionInput)(nil)).Elem(), GetDatabasesDatabaseNodeRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseRoleInput)(nil)).Elem(), GetDatabasesDatabaseRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabasesDatabaseRoleArrayInput)(nil)).Elem(), GetDatabasesDatabaseRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSSHKeysSshKeyInput)(nil)).Elem(), GetSSHKeysSshKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSSHKeysSshKeyArrayInput)(nil)).Elem(), GetSSHKeysSshKeyArray{})
	pulumi.RegisterOutputType(ClusterFirewallRuleOutput{})
	pulumi.RegisterOutputType(ClusterFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(ClusterNetworkOutput{})
	pulumi.RegisterOutputType(ClusterNetworkArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeOutput{})
	pulumi.RegisterOutputType(ClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupsOutput{})
	pulumi.RegisterOutputType(DatabaseBackupsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseBackupsConfigOutput{})
	pulumi.RegisterOutputType(DatabaseBackupsConfigArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupsConfigRepositoryOutput{})
	pulumi.RegisterOutputType(DatabaseBackupsConfigRepositoryArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupsConfigScheduleOutput{})
	pulumi.RegisterOutputType(DatabaseBackupsConfigScheduleArrayOutput{})
	pulumi.RegisterOutputType(DatabaseComponentOutput{})
	pulumi.RegisterOutputType(DatabaseComponentArrayOutput{})
	pulumi.RegisterOutputType(DatabaseExtensionsOutput{})
	pulumi.RegisterOutputType(DatabaseExtensionsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseNodeOutput{})
	pulumi.RegisterOutputType(DatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(DatabaseNodeConnectionOutput{})
	pulumi.RegisterOutputType(DatabaseNodeConnectionPtrOutput{})
	pulumi.RegisterOutputType(DatabaseNodeExtensionsOutput{})
	pulumi.RegisterOutputType(DatabaseNodeExtensionsPtrOutput{})
	pulumi.RegisterOutputType(DatabaseNodeLocationOutput{})
	pulumi.RegisterOutputType(DatabaseNodeLocationPtrOutput{})
	pulumi.RegisterOutputType(DatabaseNodeRegionOutput{})
	pulumi.RegisterOutputType(DatabaseNodeRegionPtrOutput{})
	pulumi.RegisterOutputType(DatabaseRoleOutput{})
	pulumi.RegisterOutputType(DatabaseRoleArrayOutput{})
	pulumi.RegisterOutputType(GetBackupStoresBackupStoreOutput{})
	pulumi.RegisterOutputType(GetBackupStoresBackupStoreArrayOutput{})
	pulumi.RegisterOutputType(GetCloudAccountsCloudAccountOutput{})
	pulumi.RegisterOutputType(GetCloudAccountsCloudAccountArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterOutput{})
	pulumi.RegisterOutputType(GetClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterFirewallRuleOutput{})
	pulumi.RegisterOutputType(GetClustersClusterFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNetworkOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeOutput{})
	pulumi.RegisterOutputType(GetClustersClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseBackupsOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseBackupsConfigOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseBackupsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseBackupsConfigRepositoryOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseBackupsConfigRepositoryArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseBackupsConfigScheduleOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseBackupsConfigScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseComponentOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseComponentArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseExtensionsOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeConnectionOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeExtensionsOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeLocationOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseNodeRegionOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseRoleOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseRoleArrayOutput{})
	pulumi.RegisterOutputType(GetSSHKeysSshKeyOutput{})
	pulumi.RegisterOutputType(GetSSHKeysSshKeyArrayOutput{})
}
