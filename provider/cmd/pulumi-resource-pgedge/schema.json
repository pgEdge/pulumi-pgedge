{
    "name": "pgedge",
    "displayName": "pgEdge",
    "description": "A Pulumi package for creating and managing pgedge cloud resources.",
    "keywords": [
        "pulumi",
        "pgedge",
        "category/cloud"
    ],
    "homepage": "https://www.pgedge.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`pgedge` Terraform Provider](https://github.com/pgEdge/terraform-provider-pgedge).",
    "repository": "https://github.com/pgEdge/pulumi-pgedge",
    "publisher": "pgEdge",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Pgedge"
        },
        "go": {
            "importBasePath": "github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@pgEdge/pulumi-pgedge",
            "packageDescription": "A Pulumi package for creating and managing pgedge cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/pgEdge/terraform-provider-pgedge)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-pgedge` repo](https://github.com/pgEdge/pulumi-pgedge/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-pgedge` repo](https://github.com/pgEdge/terraform-provider-pgedge/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "pgEdge_pulumi_pgedge",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/pgEdge/terraform-provider-pgedge)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-pgedge` repo](https://github.com/pgEdge/pulumi-pgedge/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-pgedge` repo](https://github.com/pgEdge/terraform-provider-pgedge/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "baseUrl": {
                "type": "string",
                "description": "Base Url to use when connecting to the PgEdge service.\n"
            }
        }
    },
    "types": {
        "pgedge:index/ClusterFirewallRule:ClusterFirewallRule": {
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "Port whose traffic is allowed\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "CIDRs and/or IP addresses allowed\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "sources"
            ]
        },
        "pgedge:index/ClusterNetwork:ClusterNetwork": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "CIDR range for the network\n"
                },
                "external": {
                    "type": "boolean",
                    "description": "Is the network externally defined\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "ID of the network, if externally defined\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the network\n"
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the network\n"
                }
            },
            "type": "object",
            "required": [
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidr",
                        "external",
                        "externalId",
                        "name",
                        "privateSubnets",
                        "publicSubnets",
                        "region"
                    ]
                }
            }
        },
        "pgedge:index/ClusterNode:ClusterNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "Cloud provider availability zone name\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "Instance type used for the node\n"
                },
                "name": {
                    "type": "string",
                    "description": "Node name\n"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Cloud provider region\n"
                },
                "volumeIops": {
                    "type": "integer",
                    "description": "Volume IOPS of the node data volume\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Volume size of the node data volume\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Volume type of the node data volume\n"
                }
            },
            "type": "object",
            "required": [
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZone",
                        "instanceType",
                        "name",
                        "options",
                        "region",
                        "volumeIops",
                        "volumeSize",
                        "volumeType"
                    ]
                }
            }
        },
        "pgedge:index/getClustersCluster:getClustersCluster": {
            "properties": {
                "cloudAccount": {
                    "$ref": "#/types/pgedge:index/getClustersClusterCloudAccount:getClustersClusterCloudAccount"
                },
                "cloudAccountId": {
                    "type": "string",
                    "description": "Cloud account ID of the cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Created at of the cluster\n"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterFirewallRule:getClustersClusterFirewallRule"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "ID of the cluster\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the cluster\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterNetwork:getClustersClusterNetwork"
                    }
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Node location of the cluster\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterNode:getClustersClusterNode"
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sshKeyId": {
                    "type": "string",
                    "description": "SSH key ID of the cluster\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccount",
                "cloudAccountId",
                "createdAt",
                "firewallRules",
                "id",
                "name",
                "networks",
                "nodeLocation",
                "nodes",
                "regions",
                "sshKeyId",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterCloudAccount:getClustersClusterCloudAccount": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Display name of the node\n"
                },
                "name": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the node\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterFirewallRule:getClustersClusterFirewallRule": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for the firewall rule\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Sources for the firewall rule\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "port",
                "sources"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNetwork:getClustersClusterNetwork": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "CIDR of the AWS node group\n"
                },
                "external": {
                    "type": "boolean",
                    "description": "Is the network external\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "External ID of the network\n"
                },
                "name": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the network\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "external",
                "externalId",
                "name",
                "privateSubnets",
                "publicSubnets",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNode:getClustersClusterNode": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "Cloud provider availability zone name\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "Instance type used for the node\n"
                },
                "name": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the network\n"
                },
                "volumeIops": {
                    "type": "integer",
                    "description": "Volume IOPS of the node data volume\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Volume size of the node data volume\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Volume type of the node data volume\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZone",
                "instanceType",
                "name",
                "options",
                "region",
                "volumeIops",
                "volumeSize",
                "volumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabase:getDatabasesDatabase": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Updated at of the database\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getDatabasesDatabaseComponent:getDatabasesDatabaseComponent"
                    }
                },
                "configVersion": {
                    "type": "string",
                    "description": "Config version of the database\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Created at of the database\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the database\n"
                },
                "extensions": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseExtensions:getDatabasesDatabaseExtensions"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the database\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getDatabasesDatabaseNode:getDatabasesDatabaseNode"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options for creating the database\n"
                },
                "pgVersion": {
                    "type": "string",
                    "description": "Postgres version of the database\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getDatabasesDatabaseRole:getDatabasesDatabaseRole"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Status of the database\n"
                },
                "storageUsed": {
                    "type": "integer",
                    "description": "Storage used of the database\n"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getDatabasesDatabaseTable:getDatabasesDatabaseTable"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Updated at of the database\n"
                }
            },
            "type": "object",
            "required": [
                "clusterId",
                "components",
                "createdAt",
                "domain",
                "extensions",
                "id",
                "name",
                "options",
                "pgVersion",
                "roles",
                "status",
                "storageUsed",
                "tables",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseComponent:getDatabasesDatabaseComponent": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the component\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the component\n"
                },
                "releaseDate": {
                    "type": "string",
                    "description": "Release date of the component\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the component\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the component\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "releaseDate",
                "status",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseExtensions:getDatabasesDatabaseExtensions": {
            "properties": {
                "autoManage": {
                    "type": "boolean",
                    "description": "Auto manage of the extension\n"
                },
                "availables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Available of the extension\n"
                },
                "requesteds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Requested of the extension\n"
                }
            },
            "type": "object",
            "required": [
                "autoManage",
                "availables",
                "requesteds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNode:getDatabasesDatabaseNode": {
            "properties": {
                "connection": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseNodeConnection:getDatabasesDatabaseNodeConnection"
                },
                "distanceMeasurement": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseNodeDistanceMeasurement:getDatabasesDatabaseNodeDistanceMeasurement"
                },
                "extensions": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseNodeExtensions:getDatabasesDatabaseNodeExtensions"
                },
                "location": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseNodeLocation:getDatabasesDatabaseNodeLocation"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the component\n"
                },
                "region": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseNodeRegion:getDatabasesDatabaseNodeRegion",
                    "description": "Region of the location\n"
                }
            },
            "type": "object",
            "required": [
                "connection",
                "distanceMeasurement",
                "extensions",
                "location",
                "name",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNodeConnection:getDatabasesDatabaseNodeConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Database of the node\n"
                },
                "externalIpAddress": {
                    "type": "string",
                    "description": "External IP of the node\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host of the node\n"
                },
                "internalHost": {
                    "type": "string",
                    "description": "Internal Host of the node\n"
                },
                "internalIpAddress": {
                    "type": "string",
                    "description": "Internal IP of the node\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the node\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the node\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username of the node\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "externalIpAddress",
                "host",
                "internalHost",
                "internalIpAddress",
                "password",
                "port",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNodeDistanceMeasurement:getDatabasesDatabaseNodeDistanceMeasurement": {
            "properties": {
                "distance": {
                    "type": "number",
                    "description": "Distance from a reference point\n"
                },
                "fromLatitude": {
                    "type": "number",
                    "description": "Latitude of the reference point\n"
                },
                "fromLongitude": {
                    "type": "number",
                    "description": "Longitude of the reference point\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Unit of distance measurement\n"
                }
            },
            "type": "object",
            "required": [
                "distance",
                "fromLatitude",
                "fromLongitude",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNodeExtensions:getDatabasesDatabaseNodeExtensions": {
            "properties": {
                "errors": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseNodeExtensionsErrors:getDatabasesDatabaseNodeExtensionsErrors"
                },
                "installeds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of installed extensions\n"
                }
            },
            "type": "object",
            "required": [
                "errors",
                "installeds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNodeExtensionsErrors:getDatabasesDatabaseNodeExtensionsErrors": {
            "properties": {
                "anim9ef": {
                    "type": "string",
                    "description": "Error code anim9ef\n"
                },
                "enim3b": {
                    "type": "string",
                    "description": "Error code enim3b\n"
                },
                "laborumd": {
                    "type": "string",
                    "description": "Error code laborumd\n"
                },
                "mollit267": {
                    "type": "string",
                    "description": "Error code mollit267\n"
                }
            },
            "type": "object",
            "required": [
                "anim9ef",
                "enim3b",
                "laborumd",
                "mollit267"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNodeLocation:getDatabasesDatabaseNodeLocation": {
            "properties": {
                "city": {
                    "type": "string",
                    "description": "City of the location\n"
                },
                "code": {
                    "type": "string",
                    "description": "Code of the location\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of the location\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "Latitude of the location\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Longitude of the location\n"
                },
                "metroCode": {
                    "type": "string",
                    "description": "Metro code of the location\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the component\n"
                },
                "postalCode": {
                    "type": "string",
                    "description": "Postal code of the location\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the location\n"
                },
                "regionCode": {
                    "type": "string",
                    "description": "Region code of the location\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Timezone of the location\n"
                }
            },
            "type": "object",
            "required": [
                "city",
                "code",
                "country",
                "latitude",
                "longitude",
                "metroCode",
                "name",
                "postalCode",
                "region",
                "regionCode",
                "timezone"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNodeRegion:getDatabasesDatabaseNodeRegion": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Active status of the region\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Availability zones of the region\n"
                },
                "cloud": {
                    "type": "string",
                    "description": "Cloud provider of the region\n"
                },
                "code": {
                    "type": "string",
                    "description": "Code of the location\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the component\n"
                },
                "parent": {
                    "type": "string",
                    "description": "Parent region\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "availabilityZones",
                "cloud",
                "code",
                "name",
                "parent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseRole:getDatabasesDatabaseRole": {
            "properties": {
                "bypassRls": {
                    "type": "boolean",
                    "description": "Bypass RLS\n"
                },
                "connectionLimit": {
                    "type": "integer",
                    "description": "Connection limit\n"
                },
                "createDb": {
                    "type": "boolean",
                    "description": "Create database\n"
                },
                "createRole": {
                    "type": "boolean",
                    "description": "Create role\n"
                },
                "inherit": {
                    "type": "boolean",
                    "description": "Inherit\n"
                },
                "login": {
                    "type": "boolean",
                    "description": "Login\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the component\n"
                },
                "replication": {
                    "type": "boolean",
                    "description": "Replication\n"
                },
                "superuser": {
                    "type": "boolean",
                    "description": "Superuser\n"
                }
            },
            "type": "object",
            "required": [
                "bypassRls",
                "connectionLimit",
                "createDb",
                "createRole",
                "inherit",
                "login",
                "name",
                "replication",
                "superuser"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseTable:getDatabasesDatabaseTable": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getDatabasesDatabaseTableColumn:getDatabasesDatabaseTableColumn"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the component\n"
                },
                "primaryKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Primary key of the table\n"
                },
                "replicationSets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Replication sets of the table\n"
                },
                "schema": {
                    "type": "string",
                    "description": "Schema of the table\n"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getDatabasesDatabaseTableStatus:getDatabasesDatabaseTableStatus"
                    },
                    "description": "Status of the component\n"
                }
            },
            "type": "object",
            "required": [
                "columns",
                "name",
                "primaryKeys",
                "replicationSets",
                "schema",
                "statuses"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseTableColumn:getDatabasesDatabaseTableColumn": {
            "properties": {
                "dataType": {
                    "type": "string",
                    "description": "Data type of the column\n"
                },
                "default": {
                    "type": "string",
                    "description": "Default of the column\n"
                },
                "isNullable": {
                    "type": "boolean",
                    "description": "Is nullable of the column\n"
                },
                "isPrimaryKey": {
                    "type": "boolean",
                    "description": "Is primary key of the column\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the component\n"
                },
                "ordinalPosition": {
                    "type": "integer",
                    "description": "Ordinal position of the column\n"
                }
            },
            "type": "object",
            "required": [
                "dataType",
                "default",
                "isNullable",
                "isPrimaryKey",
                "name",
                "ordinalPosition"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseTableStatus:getDatabasesDatabaseTableStatus": {
            "properties": {
                "aligned": {
                    "type": "boolean",
                    "description": "Aligned of the table\n"
                },
                "nodeName": {
                    "type": "string",
                    "description": "Node name of the table\n"
                },
                "present": {
                    "type": "boolean",
                    "description": "Present of the table\n"
                },
                "replicating": {
                    "type": "boolean",
                    "description": "Replicating of the table\n"
                }
            },
            "type": "object",
            "required": [
                "aligned",
                "nodeName",
                "present",
                "replicating"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the pgedge package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "baseUrl": {
                "type": "string",
                "description": "Base Url to use when connecting to the PgEdge service.\n"
            }
        },
        "inputProperties": {
            "baseUrl": {
                "type": "string",
                "description": "Base Url to use when connecting to the PgEdge service.\n"
            }
        }
    },
    "resources": {
        "pgedge:index/cluster:Cluster": {
            "description": "Interface with the pgEdge service API for clusters.\n",
            "properties": {
                "cloudAccountId": {
                    "type": "string",
                    "description": "ID of the target cloud account\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation time of the cluster\n"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterFirewallRule:ClusterFirewallRule"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the network\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNetwork:ClusterNetwork"
                    }
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Network location for nodes (public or private)\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNode:ClusterNode"
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sshKeyId": {
                    "type": "string",
                    "description": "ID of the SSH key to add to the cluster nodes\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster\n"
                }
            },
            "required": [
                "cloudAccountId",
                "createdAt",
                "name",
                "networks",
                "nodeLocation",
                "nodes",
                "regions",
                "sshKeyId",
                "status"
            ],
            "inputProperties": {
                "cloudAccountId": {
                    "type": "string",
                    "description": "ID of the target cloud account\n"
                },
                "firewallRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterFirewallRule:ClusterFirewallRule"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the network\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNetwork:ClusterNetwork"
                    }
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Network location for nodes (public or private)\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNode:ClusterNode"
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sshKeyId": {
                    "type": "string",
                    "description": "ID of the SSH key to add to the cluster nodes\n"
                }
            },
            "requiredInputs": [
                "cloudAccountId",
                "regions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "cloudAccountId": {
                        "type": "string",
                        "description": "ID of the target cloud account\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation time of the cluster\n"
                    },
                    "firewallRules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/ClusterFirewallRule:ClusterFirewallRule"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the network\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/ClusterNetwork:ClusterNetwork"
                        }
                    },
                    "nodeLocation": {
                        "type": "string",
                        "description": "Network location for nodes (public or private)\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/ClusterNode:ClusterNode"
                        }
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sshKeyId": {
                        "type": "string",
                        "description": "ID of the SSH key to add to the cluster nodes\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster\n"
                    }
                },
                "type": "object"
            }
        },
        "pgedge:index/database:Database": {
            "description": "Interface with the pgEdge service API.\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "ID of the cluster to place the database on\n"
                },
                "configVersion": {
                    "type": "string",
                    "description": "Config version of the database\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Created at of the database\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the database\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database\n"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options for creating the database\n"
                },
                "pgVersion": {
                    "type": "string",
                    "description": "Postgres version of the database\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the database\n"
                },
                "storageUsed": {
                    "type": "integer",
                    "description": "Storage used of the database\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Updated at of the database\n"
                }
            },
            "required": [
                "clusterId",
                "configVersion",
                "createdAt",
                "domain",
                "name",
                "options",
                "pgVersion",
                "status",
                "storageUsed",
                "updatedAt"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "ID of the cluster to place the database on\n"
                },
                "configVersion": {
                    "type": "string",
                    "description": "Config version of the database\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database\n"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options for creating the database\n"
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "ID of the cluster to place the database on\n"
                    },
                    "configVersion": {
                        "type": "string",
                        "description": "Config version of the database\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Created at of the database\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain of the database\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database\n"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Options for creating the database\n"
                    },
                    "pgVersion": {
                        "type": "string",
                        "description": "Postgres version of the database\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the database\n"
                    },
                    "storageUsed": {
                        "type": "integer",
                        "description": "Storage used of the database\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Updated at of the database\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "pgedge:index/getClusters:getClusters": {
            "description": "Interface with the pgEdge service API for clusters.\n",
            "outputs": {
                "description": "A collection of values returned by getClusters.\n",
                "properties": {
                    "clusters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/getClustersCluster:getClustersCluster"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusters",
                    "id"
                ]
            }
        },
        "pgedge:index/getDatabases:getDatabases": {
            "description": "Interface with the pgEdge service API.\n",
            "outputs": {
                "description": "A collection of values returned by getDatabases.\n",
                "properties": {
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/getDatabasesDatabase:getDatabasesDatabase"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "databases",
                    "id"
                ]
            }
        }
    }
}