{
    "name": "pgedge",
    "displayName": "pgEdge",
    "description": "A Pulumi package for creating and managing pgedge cloud resources.",
    "keywords": [
        "pulumi",
        "pgedge",
        "category/cloud"
    ],
    "homepage": "https://www.pgedge.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`pgedge` Terraform Provider](https://github.com/pgEdge/terraform-provider-pgedge).",
    "repository": "https://github.com/pgEdge/pulumi-pgedge",
    "publisher": "pgEdge",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Pgedge"
        },
        "go": {
            "importBasePath": "github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@pgEdge/pulumi-pgedge",
            "packageDescription": "A Pulumi package for creating and managing pgedge cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/pgEdge/terraform-provider-pgedge)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-pgedge` repo](https://github.com/pgEdge/pulumi-pgedge/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-pgedge` repo](https://github.com/pgEdge/terraform-provider-pgedge/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "pgEdge_pulumi_pgedge",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/pgEdge/terraform-provider-pgedge)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-pgedge` repo](https://github.com/pgEdge/pulumi-pgedge/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-pgedge` repo](https://github.com/pgEdge/terraform-provider-pgedge/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "baseUrl": {
                "type": "string",
                "description": "Base Url to use when connecting to the PgEdge service.\n"
            }
        }
    },
    "types": {
        "pgedge:index/ClusterFirewall:ClusterFirewall": {
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "Port for the firewall rule\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Sources for the firewall rule\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the firewall rule\n"
                }
            },
            "type": "object"
        },
        "pgedge:index/ClusterNodeGroups:ClusterNodeGroups": {
            "properties": {
                "aws": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNodeGroupsAw:ClusterNodeGroupsAw"
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNodeGroupsAzure:ClusterNodeGroupsAzure"
                    }
                },
                "googles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNodeGroupsGoogle:ClusterNodeGroupsGoogle"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "aws",
                        "azures",
                        "googles"
                    ]
                }
            }
        },
        "pgedge:index/ClusterNodeGroupsAw:ClusterNodeGroupsAw": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Availability zones of the AWS node group\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR of the AWS node group\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "Instance type of the AWS node group\n"
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Node location of the AWS node group\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNodeGroupsAwNode:ClusterNodeGroupsAwNode"
                    }
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the AWS node group\n"
                },
                "volumeIops": {
                    "type": "integer",
                    "description": "Volume IOPS of the AWS node group\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Volume size of the AWS node group\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Volume type of the AWS node group\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZones",
                        "cidr",
                        "instanceType",
                        "nodeLocation",
                        "nodes",
                        "privateSubnets",
                        "publicSubnets",
                        "region",
                        "volumeIops",
                        "volumeSize",
                        "volumeType"
                    ]
                }
            }
        },
        "pgedge:index/ClusterNodeGroupsAwNode:ClusterNodeGroupsAwNode": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name of the node\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Is the node active\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "ipAddress",
                        "isActive"
                    ]
                }
            }
        },
        "pgedge:index/ClusterNodeGroupsAzure:ClusterNodeGroupsAzure": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Availability zones of the AWS node group\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR of the AWS node group\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "Instance type of the AWS node group\n"
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Node location of the AWS node group\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNodeGroupsAzureNode:ClusterNodeGroupsAzureNode"
                    }
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the AWS node group\n"
                },
                "volumeIops": {
                    "type": "integer",
                    "description": "Volume IOPS of the AWS node group\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Volume size of the AWS node group\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Volume type of the AWS node group\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZones",
                        "cidr",
                        "instanceType",
                        "nodeLocation",
                        "nodes",
                        "privateSubnets",
                        "publicSubnets",
                        "region",
                        "volumeIops",
                        "volumeSize",
                        "volumeType"
                    ]
                }
            }
        },
        "pgedge:index/ClusterNodeGroupsAzureNode:ClusterNodeGroupsAzureNode": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name of the node\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Is the node active\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "ipAddress",
                        "isActive"
                    ]
                }
            }
        },
        "pgedge:index/ClusterNodeGroupsGoogle:ClusterNodeGroupsGoogle": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Availability zones of the AWS node group\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR of the AWS node group\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "Instance type of the AWS node group\n"
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Node location of the AWS node group\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterNodeGroupsGoogleNode:ClusterNodeGroupsGoogleNode"
                    }
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the AWS node group\n"
                },
                "volumeIops": {
                    "type": "integer",
                    "description": "Volume IOPS of the AWS node group\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Volume size of the AWS node group\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Volume type of the AWS node group\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availabilityZones",
                        "cidr",
                        "instanceType",
                        "nodeLocation",
                        "nodes",
                        "privateSubnets",
                        "publicSubnets",
                        "region",
                        "volumeIops",
                        "volumeSize",
                        "volumeType"
                    ]
                }
            }
        },
        "pgedge:index/ClusterNodeGroupsGoogleNode:ClusterNodeGroupsGoogleNode": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name of the node\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Is the node active\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "ipAddress",
                        "isActive"
                    ]
                }
            }
        },
        "pgedge:index/DatabaseNode:DatabaseNode": {
            "properties": {
                "connection": {
                    "$ref": "#/types/pgedge:index/DatabaseNodeConnection:DatabaseNodeConnection"
                },
                "location": {
                    "$ref": "#/types/pgedge:index/DatabaseNodeLocation:DatabaseNodeLocation"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node\n"
                }
            },
            "type": "object"
        },
        "pgedge:index/DatabaseNodeConnection:DatabaseNodeConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Database of the node\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host of the node\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the node\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the node\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username of the node\n"
                }
            },
            "type": "object"
        },
        "pgedge:index/DatabaseNodeLocation:DatabaseNodeLocation": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code of the location\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of the location\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "Latitude of the location\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Longitude of the location\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the location\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the location\n"
                }
            },
            "type": "object"
        },
        "pgedge:index/getClustersCluster:getClustersCluster": {
            "properties": {
                "cloudAccountId": {
                    "type": "string",
                    "description": "Cloud account ID of the cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Created at of the cluster\n"
                },
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterFirewall:getClustersClusterFirewall"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "ID of the cluster\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the cluster\n"
                },
                "nodeGroups": {
                    "$ref": "#/types/pgedge:index/getClustersClusterNodeGroups:getClustersClusterNodeGroups"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster\n"
                }
            },
            "type": "object",
            "required": [
                "cloudAccountId",
                "createdAt",
                "firewalls",
                "id",
                "name",
                "nodeGroups",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterFirewall:getClustersClusterFirewall": {
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "Port for the firewall rule\n"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Sources for the firewall rule\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the firewall rule\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "sources",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNodeGroups:getClustersClusterNodeGroups": {
            "properties": {
                "aws": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterNodeGroupsAw:getClustersClusterNodeGroupsAw"
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterNodeGroupsAzure:getClustersClusterNodeGroupsAzure"
                    }
                },
                "googles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterNodeGroupsGoogle:getClustersClusterNodeGroupsGoogle"
                    }
                }
            },
            "type": "object",
            "required": [
                "aws",
                "azures",
                "googles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNodeGroupsAw:getClustersClusterNodeGroupsAw": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Availability zones of the AWS node group\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR of the AWS node group\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "Instance type of the AWS node group\n"
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Node location of the AWS node group\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterNodeGroupsAwNode:getClustersClusterNodeGroupsAwNode"
                    }
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the AWS node group\n"
                },
                "volumeIops": {
                    "type": "integer",
                    "description": "Volume IOPS of the AWS node group\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Volume size of the AWS node group\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Volume type of the AWS node group\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "cidr",
                "instanceType",
                "nodeLocation",
                "nodes",
                "privateSubnets",
                "publicSubnets",
                "region",
                "volumeIops",
                "volumeSize",
                "volumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNodeGroupsAwNode:getClustersClusterNodeGroupsAwNode": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name of the node\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Is the node active\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "ipAddress",
                "isActive"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNodeGroupsAzure:getClustersClusterNodeGroupsAzure": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Availability zones of the AWS node group\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR of the AWS node group\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "Instance type of the AWS node group\n"
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Node location of the AWS node group\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterNodeGroupsAzureNode:getClustersClusterNodeGroupsAzureNode"
                    }
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the AWS node group\n"
                },
                "volumeIops": {
                    "type": "integer",
                    "description": "Volume IOPS of the AWS node group\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Volume size of the AWS node group\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Volume type of the AWS node group\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "cidr",
                "instanceType",
                "nodeLocation",
                "nodes",
                "privateSubnets",
                "publicSubnets",
                "region",
                "volumeIops",
                "volumeSize",
                "volumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNodeGroupsAzureNode:getClustersClusterNodeGroupsAzureNode": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name of the node\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Is the node active\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "ipAddress",
                "isActive"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNodeGroupsGoogle:getClustersClusterNodeGroupsGoogle": {
            "properties": {
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Availability zones of the AWS node group\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR of the AWS node group\n"
                },
                "instanceType": {
                    "type": "string",
                    "description": "Instance type of the AWS node group\n"
                },
                "nodeLocation": {
                    "type": "string",
                    "description": "Node location of the AWS node group\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getClustersClusterNodeGroupsGoogleNode:getClustersClusterNodeGroupsGoogleNode"
                    }
                },
                "privateSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publicSubnets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the AWS node group\n"
                },
                "volumeIops": {
                    "type": "integer",
                    "description": "Volume IOPS of the AWS node group\n"
                },
                "volumeSize": {
                    "type": "integer",
                    "description": "Volume size of the AWS node group\n"
                },
                "volumeType": {
                    "type": "string",
                    "description": "Volume type of the AWS node group\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityZones",
                "cidr",
                "instanceType",
                "nodeLocation",
                "nodes",
                "privateSubnets",
                "publicSubnets",
                "region",
                "volumeIops",
                "volumeSize",
                "volumeType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getClustersClusterNodeGroupsGoogleNode:getClustersClusterNodeGroupsGoogleNode": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name of the node\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "IP address of the node\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Is the node active\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "ipAddress",
                "isActive"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabase:getDatabasesDatabase": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Updated at of the database\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Created at of the database\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the database\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the database\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/getDatabasesDatabaseNode:getDatabasesDatabaseNode"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options for creating the database\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the database\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Updated at of the database\n"
                }
            },
            "type": "object",
            "required": [
                "clusterId",
                "createdAt",
                "domain",
                "id",
                "name",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNode:getDatabasesDatabaseNode": {
            "properties": {
                "connection": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseNodeConnection:getDatabasesDatabaseNodeConnection"
                },
                "location": {
                    "$ref": "#/types/pgedge:index/getDatabasesDatabaseNodeLocation:getDatabasesDatabaseNodeLocation"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database\n"
                }
            },
            "type": "object",
            "required": [
                "connection",
                "location",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNodeConnection:getDatabasesDatabaseNodeConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "Database of the node\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host of the node\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the node\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the node\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username of the node\n"
                }
            },
            "type": "object",
            "required": [
                "database",
                "host",
                "password",
                "port",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "pgedge:index/getDatabasesDatabaseNodeLocation:getDatabasesDatabaseNodeLocation": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code of the location\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country of the location\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "Latitude of the location\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "Longitude of the location\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the location\n"
                }
            },
            "type": "object",
            "required": [
                "code",
                "country",
                "latitude",
                "longitude",
                "name",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the pgedge package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "baseUrl": {
                "type": "string",
                "description": "Base Url to use when connecting to the PgEdge service.\n"
            }
        },
        "inputProperties": {
            "baseUrl": {
                "type": "string",
                "description": "Base Url to use when connecting to the PgEdge service.\n"
            }
        }
    },
    "resources": {
        "pgedge:index/cluster:Cluster": {
            "description": "Interface with the pgEdge service API for clusters.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as pgedge from \"@pgEdge/pulumi-pgedge\";\n\nconst example = new pgedge.Cluster(\"example\", {\n    cloudAccountId: \"\",\n    firewalls: [{\n        port: 5432,\n        sources: [\"0.0.0.0/0\"],\n        type: \"postgres\",\n    }],\n    nodeGroups: {\n        aws: [{\n            instanceType: \"t4g.small\",\n            region: \"us-west-2\",\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport pgEdge_pulumi_pgedge as pgedge\n\nexample = pgedge.Cluster(\"example\",\n    cloud_account_id=\"\",\n    firewalls=[pgedge.ClusterFirewallArgs(\n        port=5432,\n        sources=[\"0.0.0.0/0\"],\n        type=\"postgres\",\n    )],\n    node_groups=pgedge.ClusterNodeGroupsArgs(\n        aws=[pgedge.ClusterNodeGroupsAwArgs(\n            instance_type=\"t4g.small\",\n            region=\"us-west-2\",\n        )],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Pgedge = Pgedge.Pgedge;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Pgedge.Cluster(\"example\", new()\n    {\n        CloudAccountId = \"\",\n        Firewalls = new[]\n        {\n            new Pgedge.Inputs.ClusterFirewallArgs\n            {\n                Port = 5432,\n                Sources = new[]\n                {\n                    \"0.0.0.0/0\",\n                },\n                Type = \"postgres\",\n            },\n        },\n        NodeGroups = new Pgedge.Inputs.ClusterNodeGroupsArgs\n        {\n            Aws = new[]\n            {\n                new Pgedge.Inputs.ClusterNodeGroupsAwArgs\n                {\n                    InstanceType = \"t4g.small\",\n                    Region = \"us-west-2\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pgedge.NewCluster(ctx, \"example\", \u0026pgedge.ClusterArgs{\n\t\t\tCloudAccountId: pulumi.String(\"\"),\n\t\t\tFirewalls: pgedge.ClusterFirewallArray{\n\t\t\t\t\u0026pgedge.ClusterFirewallArgs{\n\t\t\t\t\tPort: pulumi.Int(5432),\n\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"0.0.0.0/0\"),\n\t\t\t\t\t},\n\t\t\t\t\tType: pulumi.String(\"postgres\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tNodeGroups: \u0026pgedge.ClusterNodeGroupsArgs{\n\t\t\t\tAws: pgedge.ClusterNodeGroupsAwArray{\n\t\t\t\t\t\u0026pgedge.ClusterNodeGroupsAwArgs{\n\t\t\t\t\t\tInstanceType: pulumi.String(\"t4g.small\"),\n\t\t\t\t\t\tRegion:       pulumi.String(\"us-west-2\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.pgedge.Cluster;\nimport com.pulumi.pgedge.ClusterArgs;\nimport com.pulumi.pgedge.inputs.ClusterFirewallArgs;\nimport com.pulumi.pgedge.inputs.ClusterNodeGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Cluster(\"example\", ClusterArgs.builder()        \n            .cloudAccountId(\"\")\n            .firewalls(ClusterFirewallArgs.builder()\n                .port(5432)\n                .sources(\"0.0.0.0/0\")\n                .type(\"postgres\")\n                .build())\n            .nodeGroups(ClusterNodeGroupsArgs.builder()\n                .aws(ClusterNodeGroupsAwArgs.builder()\n                    .instanceType(\"t4g.small\")\n                    .region(\"us-west-2\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: pgedge:Cluster\n    properties:\n      cloudAccountId:\n      # your cloud account id\n      firewalls:\n        - port: 5432\n          sources:\n            - 0.0.0.0/0\n          type: postgres\n      nodeGroups:\n        aws:\n          - instanceType: t4g.small\n            region: us-west-2\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cloudAccountId": {
                    "type": "string",
                    "description": "Cloud account ID of the cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Created at of the cluster\n"
                },
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterFirewall:ClusterFirewall"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the cluster\n"
                },
                "nodeGroups": {
                    "$ref": "#/types/pgedge:index/ClusterNodeGroups:ClusterNodeGroups"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the cluster\n"
                }
            },
            "required": [
                "cloudAccountId",
                "createdAt",
                "name",
                "nodeGroups",
                "status"
            ],
            "inputProperties": {
                "cloudAccountId": {
                    "type": "string",
                    "description": "Cloud account ID of the cluster\n"
                },
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/ClusterFirewall:ClusterFirewall"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the cluster\n"
                },
                "nodeGroups": {
                    "$ref": "#/types/pgedge:index/ClusterNodeGroups:ClusterNodeGroups"
                }
            },
            "requiredInputs": [
                "cloudAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "cloudAccountId": {
                        "type": "string",
                        "description": "Cloud account ID of the cluster\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Created at of the cluster\n"
                    },
                    "firewalls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/ClusterFirewall:ClusterFirewall"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the cluster\n"
                    },
                    "nodeGroups": {
                        "$ref": "#/types/pgedge:index/ClusterNodeGroups:ClusterNodeGroups"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the cluster\n"
                    }
                },
                "type": "object"
            }
        },
        "pgedge:index/database:Database": {
            "description": "Interface with the pgEdge service API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as pgedge from \"@pgEdge/pulumi-pgedge\";\n\nconst example = new pgedge.Database(\"example\", {\n    clusterId: \"\",\n    options: [\"install:northwind\"],\n});\n```\n```python\nimport pulumi\nimport pgEdge_pulumi_pgedge as pgedge\n\nexample = pgedge.Database(\"example\",\n    cluster_id=\"\",\n    options=[\"install:northwind\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Pgedge = Pgedge.Pgedge;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Pgedge.Database(\"example\", new()\n    {\n        ClusterId = \"\",\n        Options = new[]\n        {\n            \"install:northwind\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pgedge.NewDatabase(ctx, \"example\", \u0026pgedge.DatabaseArgs{\n\t\t\tClusterId: pulumi.String(\"\"),\n\t\t\tOptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"install:northwind\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.pgedge.Database;\nimport com.pulumi.pgedge.DatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Database(\"example\", DatabaseArgs.builder()        \n            .clusterId(\"\")\n            .options(\"install:northwind\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: pgedge:Database\n    properties:\n      clusterId:\n      options:\n        - install:northwind\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster Id of the database\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Created at of the database\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the database\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the location\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/pgedge:index/DatabaseNode:DatabaseNode"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options for creating the database\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the database\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Updated at of the database\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "domain",
                "name",
                "nodes",
                "options",
                "status",
                "updatedAt"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster Id of the database\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the location\n"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Options for creating the database\n"
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster Id of the database\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Created at of the database\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain of the database\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the location\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/DatabaseNode:DatabaseNode"
                        }
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Options for creating the database\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the database\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Updated at of the database\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "pgedge:index/getClusters:getClusters": {
            "description": "Interface with the pgEdge service API for clusters.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as pgedge from \"@pulumi/pgedge\";\n\nconst example = pgedge.getClusters({});\n```\n```python\nimport pulumi\nimport pulumi_pgedge as pgedge\n\nexample = pgedge.get_clusters()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Pgedge = Pulumi.Pgedge;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Pgedge.GetClusters.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pgedge.GetClusters(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.pgedge.PgedgeFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = PgedgeFunctions.getClusters();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: pgedge:getClusters\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getClusters.\n",
                "properties": {
                    "clusters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/getClustersCluster:getClustersCluster"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusters",
                    "id"
                ]
            }
        },
        "pgedge:index/getDatabases:getDatabases": {
            "description": "Interface with the pgEdge service API.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as pgedge from \"@pulumi/pgedge\";\n\nconst example = pgedge.getDatabases({});\n```\n```python\nimport pulumi\nimport pulumi_pgedge as pgedge\n\nexample = pgedge.get_databases()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Pgedge = Pulumi.Pgedge;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Pgedge.GetDatabases.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pgEdge/pulumi-pgedge/sdk/go/pgedge\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pgedge.GetDatabases(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.pgedge.PgedgeFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = PgedgeFunctions.getDatabases();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: pgedge:getDatabases\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getDatabases.\n",
                "properties": {
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/pgedge:index/getDatabasesDatabase:getDatabasesDatabase"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "databases",
                    "id"
                ]
            }
        }
    }
}